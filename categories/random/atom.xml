<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
	<title>Owen的博客 - Random</title>
	<subtitle>主要关注技术，读书，摘抄，杂谈，文章评论，工具分享，工作流，灵感，英文学习，注意力管理，深度工作等方向</subtitle>
	<link href="https://www.owenyoung.com/categories/random/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://www.owenyoung.com"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-08-09T00:43:39+08:00</updated>
	<id>https://www.owenyoung.com/categories/random/atom.xml</id>
	<entry xml:lang="zh">
		<title>电脑的启动流程</title>
		<published>2022-08-09T00:43:39+08:00</published>
		<updated>2022-08-09T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/booting/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/booting/</id>
		<content type="html">&lt;p&gt;以前看过一个面试题，当你从浏览器地址栏输入 url 后，按下回车，具体会发生什么，这对这道题还挺有信心的，但是你要我说按下电脑开机键会发生什么，我是真的不知道。通过这次学习终于知道了一些：）&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是我绝对不是专家，只是一个刚接触这一块的新手，这篇文章里的所有东西都是根据&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;#References&quot;&gt;很多文章和论文&lt;&#x2F;a&gt;，以及我自己的实践得来的，所以里面的信息如果有错误，请帮助我更正它！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;liu-cheng&quot;&gt;流程&lt;a class=&quot;zola-anchor&quot; href=&quot;#liu-cheng&quot; aria-label=&quot;Anchor link for: liu-cheng&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-cpu-zhi-xing-firmware-setup-cheng-xu&quot;&gt;1. CPU 执行 Firmware setup 程序&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-cpu-zhi-xing-firmware-setup-cheng-xu&quot; aria-label=&quot;Anchor link for: 1-cpu-zhi-xing-firmware-setup-cheng-xu&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;当用户按下开机键，电脑就通电了，这个时候 CPU 先启动，它的工作就是不断的执行给他的指令，而初始指令就是主板写在硬件里的 Firmware setup 程序, 现代电脑的 Firmware setup 程序（2014 年后生产的电脑）基本上使用的都是 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;uefi.org&#x2F;&quot;&gt;Unified Extensible Firmware Interface&lt;&#x2F;a&gt; (UEFI)标准。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;UEFI 是一种“固件程序”，固化在一个焊接或插在主板上 EEPROM (electrically erasable programmable read-only memory) 芯片上，并且暴露一些接口以和软件进行交互。&lt;&#x2F;p&gt;
&lt;p&gt;EEPROM 是带电可擦可编程只读存储器。 是一种掉电后数据不丢失的存储芯片，所以很适合存放这种固件程序，轻易不咋变动，但要变动的时候，也能比较容易的变动。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;UEFI 是 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;BIOS&quot;&gt;Basic Input&#x2F;Output System (BIOS) &lt;&#x2F;a&gt; 的现代版本,基本上 2014 年之后的机器附带的主板用的都是 UEFI 程序了。&lt;&#x2F;p&gt;
&lt;p&gt;当你看到以下这个菜单图片：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;.&#x2F;uefi-text-menu.jpeg&quot; alt=&quot;uefi-text-menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这并不是代表你的电脑用的是传统的 BIOS，虽然这个界面看起来很原始，但是其实这也是 UEFI 程序的，只是他的界面和 BIOS 一样是文本用户界面 (TUI)，更现代的 UEFI 可能会带有酷酷的图形化 (GUI) 操作界面，像这样的：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;.&#x2F;asus-UEFI.jpg&quot; alt=&quot;uefi-gui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们可以通过在电脑开机的时候，连续按 F1 键（或者别的什么键）进入 UEFI 的设置 菜单。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多人会混用 UEFI,BIOS 这些名词，我觉得这个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;superuser.com&#x2F;a&#x2F;1722488&quot;&gt;回答&lt;&#x2F;a&gt;解释的特别好。&lt;&#x2F;p&gt;
&lt;p&gt;PS. 我觉得现在应该弃用 BIOS 这个名字，用 Firmware setup 程序来代替它。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;2-firmware-setup-cheng-xu-kai-shi-yun-xing-bing-cong-cmos-li-mian-du-qu-dang-qian-xi-tong-shi-jian&quot;&gt;2. Firmware setup 程序开始运行，并从 CMOS 里面读取当前系统时间&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-firmware-setup-cheng-xu-kai-shi-yun-xing-bing-cong-cmos-li-mian-du-qu-dang-qian-xi-tong-shi-jian&quot; aria-label=&quot;Anchor link for: 2-firmware-setup-cheng-xu-kai-shi-yun-xing-bing-cong-cmos-li-mian-du-qu-dang-qian-xi-tong-shi-jian&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;CMOS 是位于主板上的一个简单的存储装置，现在的实际使用中，只被用于记录时钟 RTC 信息，所以这个东西需要一直有电才能保持系统时间的正确性，所以 CMOS 被设计为：开机的时候用电源供电，关机的时候就用纽扣电池供电。如图：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;.&#x2F;cmos-battery-backup.webp&quot; alt=&quot;cmos&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;但其实操作系统在有网的时候，一般也用不到 CMOS 里的时钟信息，因为它都是访问网络上的时间去校准时间的，除非没有网络才会用这个值。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;网络上很多文章说 Firmware setup 程序会把用户的配置信息（比如启动项配置等）存放到 CMOS 里面，其实现代的电脑都不会这样做了，因为只有时钟信息需要持续的电源来运行，别的东西都可以存在文件系统里，UEFI 的配置信息都是存放在文件系统里的。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;3-firmware-setup-cheng-xu-kai-shi-zhi-xing-dian-nao-an-quan-zi-jian&quot;&gt;3. Firmware setup 程序开始执行电脑安全自检&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-firmware-setup-cheng-xu-kai-shi-zhi-xing-dian-nao-an-quan-zi-jian&quot; aria-label=&quot;Anchor link for: 3-firmware-setup-cheng-xu-kai-shi-zhi-xing-dian-nao-an-quan-zi-jian&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;这个阶段被称为：SEC，security 阶段，做一些硬件方面的安全检查，看下各种东西都 ok 不 ok，之后的整个流程大概是这样：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;.&#x2F;sequence.png&quot; alt=&quot;sequence&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-chu-shi-hua-efi-de-zhi-xing-huan-jing-bi-ru-cpu-ge-chong-gong-neng-xin-pian-deng&quot;&gt;4. 初始化 EFI 的执行环境， 比如 cpu ，各种功能芯片等&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-chu-shi-hua-efi-de-zhi-xing-huan-jing-bi-ru-cpu-ge-chong-gong-neng-xin-pian-deng&quot; aria-label=&quot;Anchor link for: 4-chu-shi-hua-efi-de-zhi-xing-huan-jing-bi-ru-cpu-ge-chong-gong-neng-xin-pian-deng&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;这个阶段被称为 PEI，Pre Extensible Firmware Interface，Pre-EFI，EFI 是 UEFI 给系统引导程序（Boot Loader）准备的运行环境，就像 Bash 脚本环境一样，这个环境可以执行&lt;code&gt;.efi&lt;&#x2F;code&gt;文件。&lt;code&gt;.eft&lt;&#x2F;code&gt;文件就是系统引导程序的入口文件。在这个阶段会把 CPU，主内存，其他专用功能芯片组（比如音频芯片）啥的都准备好。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;5-dxe-jie-duan&quot;&gt;5. DXE 阶段&lt;a class=&quot;zola-anchor&quot; href=&quot;#5-dxe-jie-duan&quot; aria-label=&quot;Anchor link for: 5-dxe-jie-duan&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Drive Execution Environment, 在这个阶段，DXE 调度程序将发现并执行相关固件卷中可用的 DXE 驱动程序，这些驱动程序负责更高级别的平台初始化和服务，比如系统管理模式（SMM）的设置，更高级别的固件驱动程序，如网络，启动盘，热量管理等，并且为后面的阶段提供运行时的服务接口。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-bds-jie-duan&quot;&gt;6. BDS 阶段&lt;a class=&quot;zola-anchor&quot; href=&quot;#6-bds-jie-duan&quot; aria-label=&quot;Anchor link for: 6-bds-jie-duan&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Boot Device Selection 阶段，这个阶段，UEFI 会加载各种设备的驱动程序，比如硬盘，U 盘的驱动，并运行 Boot Loader 引导程序：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;初始化控制台 console 设备，看看系统有多少可以启动的设备&lt;&#x2F;li&gt;
&lt;li&gt;加载必要的设备驱动比如硬盘，u 盘等&lt;&#x2F;li&gt;
&lt;li&gt;加载输入输出设备驱动，比如键盘，鼠标等&lt;&#x2F;li&gt;
&lt;li&gt;搜索可用的启动设备（其实就是搜索具有 FAT32 分区格式的设备，FAT32 分区是微软设计的格式，单文件最大 4G，格式化 U 盘的时候可以看到这种格式选项）&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;我们一般会在硬盘里分出一个专门的 EFI 分区用来存放引导程序：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;.&#x2F;EFI-Partition-Disk-Management.webp&quot; alt=&quot;efi&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个磁盘分区里的文件结构大概如下：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;booting&#x2F;.&#x2F;efi-folder.jpeg&quot; alt=&quot;efi-folder&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果你有多个引导程序的话，你可以在 UEFI 提供的 boot 菜单里选择使用哪一个（按 F12 可以进入 boot 引导程序菜单），默认的话就是进入排名第一的那个。UEFI 提供的引导菜单其实是一级引导，然后进入二级引导程序：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;二级引导程序有 Grub2, Windows boot manager 等, 如果你电脑预装的是 Windows 系统的话，那就只有 Windows Boot mananer ，如果你装了双系统，比如 Ubuntu 等 Linux 系统的话，Linux 系统会使用 Grub2 作为二级引导系统， Grub2 支持 windows，linux，macos 等系统的引导。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;到了这里，二级引导程序就会根据用户的配置，把 CPU 的控制权交给真正的操作系统了，至此，电脑才算开始启动 OS 了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;a class=&quot;zola-anchor&quot; href=&quot;#zong-jie&quot; aria-label=&quot;Anchor link for: zong-jie&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;这篇文章有太多名词了，如果没有装过几次操作系统的，可能听的云里雾里的，所以如果你感到云里雾里的也没必要深究，等你装过几次系统，遇到一些错误，然后在解决的过程中，你就慢慢理解这些东西了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;neucrack.com&#x2F;p&#x2F;330&quot;&gt;实体机安装双系统多系统教程 及引导修复指南&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;yuxiayizhengwan&#x2F;p&#x2F;15132486.html&quot;&gt;如何在 Windows10 下安装 ubuntu 双系统(无 U 盘)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;32280478&quot;&gt;浅谈操作系统-启动过程&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.shenzeyu.cn&#x2F;2015&#x2F;12&#x2F;06&#x2F;%E6%B5%85%E8%B0%88UEFI%E5%90%AF%E5%8A%A8&#x2F;&quot;&gt;浅谈 UEFI 启动&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.ruanyifeng.com&#x2F;blog&#x2F;2013&#x2F;02&#x2F;booting.html&quot;&gt;阮一峰: 计算机是如何启动的？&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;pipci&#x2F;p&#x2F;13280030.html&quot;&gt;BIOS 与 UEFI 引导流程&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;superuser.com&#x2F;questions&#x2F;1722483&#x2F;what-is-the-terminologically-correct-way-to-call-the-setup-screen-before-boot&quot;&gt;What is the terminologically correct way to call the setup screen before boot?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;edk2-docs.gitbook.io&#x2F;edk-ii-build-specification&#x2F;2_design_discussion&#x2F;23_boot_sequence&quot;&gt;Boot Sequence&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.osdev.org&#x2F;CMOS&quot;&gt;CMOS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;depletionmode.com&#x2F;uefi-boot.html&quot;&gt;了解基于 UEFI 的现代平台启动&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_45279063&#x2F;article&#x2F;details&#x2F;115508961&quot;&gt;BIOS 追 Code 之 BDS phase -＞ TSL-＞ RT-＞ AL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>通过创建 dotfiles, 我终于拥有了一个 web3 身份</title>
		<published>2022-07-13T00:55:21+08:00</published>
		<updated>2022-07-13T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/web3-to-dotfiles/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/web3-to-dotfiles/</id>
		<content type="html">&lt;p&gt;作为技术人员,我对 web3 最大的障碍是创建一个 web3 身份并体面的保存下来。一个 web3 身份实在太重大了，我必须能良好的管理我的 web3 私钥，我我才有信心创建它，不然我怀疑我的整个 web3 世界只会建立在一个岌岌可危的根基上。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;我之前一直在用人脑管理我的密码，所以我不在任何地方记录我的密码。而由于我没有地方去体面的记录密码，而我的人脑又无法记住一个那么长的私钥，所以我一直对创建一个 web3 身份很害怕。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wei-shi-yao-bu-yong-mi-ma-guan-li-qi&quot;&gt;为什么不用密码管理器？&lt;a class=&quot;zola-anchor&quot; href=&quot;#wei-shi-yao-bu-yong-mi-ma-guan-li-qi&quot; aria-label=&quot;Anchor link for: wei-shi-yao-bu-yong-mi-ma-guan-li-qi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;简单的答案是：没有契机。密码管理器一直给我一种很贵很复杂，然后还全是 GUI 界面(通过研究各种密码管理工具，证明这是一个错误的印象)，而我喜欢纯文本工具，我喜欢用简单的工具。所以在此之前我一直使用一套可以用人脑计算的密码模型来决定我的密码，这使得我在每个网站每个账户的密码都不一样，这样我就不需要太担心哪家密码有泄露。这一套基本运行良好，但是我内心一直希望哪天可以有一套更科学的密码管理器来整理我的各种账户，我目前这套靠人脑的密码管理只适合我主动创建的账户，它不适合各种工具生成的 Token, ssh key, 一个 web3 身份，或者是一个双重因素验证的恢复码，这些东西没法靠人脑，一定需要放在某个地方存起来，或者打印出来放在某个地方。&lt;&#x2F;p&gt;
&lt;p&gt;为什么没有契机去做呢？&lt;strong&gt;因为我的数字花园很混乱&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;定义一个人的数字花园混乱不混乱只需要看一点，那就是你在重装你的电脑系统后，能否体面地把自己的系统成恢复原样？（利用全盘备份的方式把系统恢复成和之前一模一样的在我看来并不体面，这种方式的恢复只是治标，隐藏在冰面之下的是一个不可重现的巨大黑盒。所以这种方式只能作为一种方便的备份手段，而不能成为数字花园的根基）。当然如果你连全盘备份都没有的话，那你的数字花园可能算是危房了。&lt;&#x2F;p&gt;
&lt;p&gt;在这个意义上，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;nixos.org&#x2F;&quot;&gt;NixOS 系统&lt;&#x2F;a&gt;算是可重现系统的天花板了，它的整个系统的核心设计理念就是可重现，可配置。安装 NixOS 系统，其实就是根据你的配置文件生成出来的，所以，同样的配置，永远都能构建出一模一样的系统，这简直太适合完美主义者了。你可以看下&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gvolpe&#x2F;nix-config&quot;&gt;一个 nixos 全系统的配置文件&lt;&#x2F;a&gt;，这就是整个系统。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yi-ge-qi-ji-de-dan-sheng&quot;&gt;一个契机的诞生&lt;a class=&quot;zola-anchor&quot; href=&quot;#yi-ge-qi-ji-de-dan-sheng&quot; aria-label=&quot;Anchor link for: yi-ge-qi-ji-de-dan-sheng&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;前段时间，我需要在自己的 macbook pro 上临时装一个 windows 系统（银行，政府，u 盾，驱动相关），本来我也不想动原有的系统，所以我就尽我所能把我总共就 256G 的存储清出来 95 个 G（我正常情况下电脑剩余空间通常都是 20G 以下），然后开始使用苹果的系统助手新建 windows 系统，结果有一个该死的错误&lt;code&gt;An error occurred while copying the Windows installation files&lt;&#x2F;code&gt;阻止了它，我开始尝试网上提到的各种办法，30 分钟后，苹果系统还是会告诉我一模一样的错误。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;所以只能祭出最鲁棒的方法了，重装 macOS 系统，然后再安装 windows 系统&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;但是，我敢这么做吗？我会不会有什么重要的东西忘记备份？之后要花多久重新恢复我的系统？&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这让我下定决心，决定花大量的精力去重建我的数字花园根基，力求我的数字花园变得轻量，可重现，可持续化。这和我的博客一样，都属于值得用一生的时间去维护的一个东西。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dotfiles&quot;&gt;Dotfiles&lt;a class=&quot;zola-anchor&quot; href=&quot;#dotfiles&quot; aria-label=&quot;Anchor link for: dotfiles&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;随后我了解到一个东西叫做 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dotfiles.github.io&#x2F;&quot;&gt;Dotfiles&lt;&#x2F;a&gt;,简单的来说，这个 dotfiles 就是管理你整个系统的配置文件的集合。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么叫 Dotfiles，因为类 unix 系统里习惯把配置文件用 dot 开头的文件名命名，如&lt;code&gt;.gitignore&lt;&#x2F;code&gt;,就是 git 的忽略配置文件， dot 开头的文件在系统中是默认隐藏的。所以如果有一个文件夹存放你全部的配置文件，那大家习惯上叫这个文件夹为&lt;code&gt;dotfiles&lt;&#x2F;code&gt;. 关于如何组织自己的 dotfiles 文件，有非常多的方式，辅助工具，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dotfiles.github.io&#x2F;&quot;&gt;Dotfiles&lt;&#x2F;a&gt; 就是一个很好的指引。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我没有进入这个新领域，我永远都不会知道光 github 上就有&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=dotfiles&quot;&gt;17 万人&lt;&#x2F;a&gt;在公开他们的 dotfiles 文件&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;在我看来使用 dotfiles 文件主要有 3 个好处：&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;随时随地轻量级的重现你的环境&lt;&#x2F;li&gt;
&lt;li&gt;可以在本地删除某个工具，然后在想恢复的时候，无痛恢复这个工具&lt;&#x2F;li&gt;
&lt;li&gt;现实中有人把自己房子打理的特别好，分类特别科学，当我们在数字世界中做了类似的整理之后，会对整个数字世界的体验变得非常的有信心，也可以帮助你了解很多软件的运行机制。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;从&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dotfiles.github.io&#x2F;utilities&#x2F;&quot;&gt;这个页面看&lt;&#x2F;a&gt;，至少有 24 个工具可以帮你管理 dotfiles 文件，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;chezmoi.io&quot;&gt;chezmoi&lt;&#x2F;a&gt;可能是其中最全面的工具，但是我最终选择了&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;comtrya&#x2F;comtrya&quot;&gt;一个比较小众的 rust 编写的二进制工具 Comtrya&lt;&#x2F;a&gt;，因为我想尽可能维持 dotfiles 管理工具的轻量级，不想过度复杂化 dotfiles，这个工具的配置大概长这样(&lt;code&gt;ssh&#x2F;ssh.yml&lt;&#x2F;code&gt;)：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;actions&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;file.copy
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;config
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{{user.home_dir}}&#x2F;.ssh&#x2F;config&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;template&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;file.link
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;source&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;id_ed25519.pub
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;target&lt;&#x2F;span&gt;&lt;span&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{{user.home_dir}}&#x2F;.ssh&#x2F;id_ed25519.pub&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这是我的对 ssh 配置文件的动作配置，用&lt;code&gt;yaml&lt;&#x2F;code&gt;语言配置，是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.ansible.com&#x2F;&quot;&gt;ansible&lt;&#x2F;a&gt;工具的非常轻量级的替代。这几行配置告诉 comtrya 把指定的配置文件复制或者软链接到该去的地方，同时我在复制的过程还使用了模版，因为我在&lt;code&gt;config&lt;&#x2F;code&gt;配置文件里对 macos 加了一点小小的东西&lt;code&gt;UseKeychain yes&lt;&#x2F;code&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Host &lt;&#x2F;span&gt;&lt;span&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AddKeysToAgent&lt;&#x2F;span&gt;&lt;span&gt; yes
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IdentityFile ~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;.ssh&#x2F;id_ed25519{% if os.name==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;macos&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;%}
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UseKeychain&lt;&#x2F;span&gt;&lt;span&gt; yes{% endif %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样之后，我的 ssh 配置就可以在 macos 和 linux 系统上通用了。&lt;&#x2F;p&gt;
&lt;p&gt;我最终的全部&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&quot;&gt;dotfiles&lt;&#x2F;a&gt;我已经放在 github 上了。整体的结构大概如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; modules
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       ├── change_zsh_as_default_shell_debian.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       ├── files
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   ├── alias_debian.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   ├── general_config.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   ├── includes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   │   ├── 1_env.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   │   ├── 2_path.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   │   ├── 3_function.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   │   ├── 4_aliases.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   ├── path_macos.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   ├── zshenv.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       │   └── zshrc.zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       ├── install_zsh_debian.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       └── zsh.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; private
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── keepassxc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   ├── dev.kdbx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   ├── high.kdbx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   └── main.kdbx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── ssh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   ├── files
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   │   ├── config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   │   └── id_ed25519.pub
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   │   └── ssh.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span&gt; scripts
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 0_install_pre_required_modules_for_debian.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 1_configure_macos.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 1_install_required_modules_for_debian.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 2_import_dotfiles_debian.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 2_install_required_modules_macos.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 3_import_dotfiles_macos.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; 4_install_modules_macos.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; env.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; import_ssh_key.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; import_temp_env.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; link_all.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; test.sh
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span&gt; unlink.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中&lt;code&gt;modules&lt;&#x2F;code&gt;存放所有的模块的配置，我讨厌分类，所以&lt;code&gt;macos&lt;&#x2F;code&gt;的相关配置也是其中的一个模块。还有一个&lt;code&gt;private&lt;&#x2F;code&gt;文件夹，这里面放我觉得不便公开的模块的配置（但也不包含任何明文密码），比如说 ssh 的 config，caddy 的 config Caddyfile，以及密码管理器 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keepassxreboot&#x2F;keepassxc&quot;&gt;keepassxc&lt;&#x2F;a&gt;中加密后的文件。我把 private 单独在 github 上设置了一个私有仓库，然后克隆在 dotfiles 仓库里，并在 dotfiles 仓库里忽略这个文件夹。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keepassxreboot&#x2F;keepassxc&quot;&gt;keepassxc&lt;&#x2F;a&gt;是我最终选用的密码管理器，开源，易用，且久经考验。同时拥有 GUI 客户端，以及命令行客户端，可以很好的集成在我的 dotfiles 工作流里，同时 GUI 也可以方便的和浏览器等集成以及方便地编辑密码。这是一个完全本地的密码管理器，不依赖任何中心，你所有的密码都存放在一个加密后的文件,GUI 界面大概长这样，这是编辑某个密码的页面：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;web3-to-dotfiles&#x2F;.&#x2F;keepassxc-edit-entry.png&quot; alt=&quot;keepassxc-edit&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我总共使用 3 个文件存放我的密码：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;high.kdbx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;main.kdbx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dev.kdbx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中&lt;code&gt;high.kdbx&lt;&#x2F;code&gt;是我的最高级的密码，比如银行密码，支付密码等，&lt;code&gt;main.kdbx&lt;&#x2F;code&gt;是我其他主要密码，比如 twitter，github 等，Like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;twitter&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;github&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hacker_news&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Microsoft&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GPG&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;servers&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tools&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;amazon&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ifttt&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IRC&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;而&lt;code&gt;dev.kdbx&lt;&#x2F;code&gt;是我在各种开发服务器中会用到的密码，包括 token, 环境变量，ssh key 等,like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;youdao_translate_secret
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ssh&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;github&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cloudflare&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ifttt&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;telegram&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;envs&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这三个密码文件都有不同的主密码，这三个主密码可以说是我人生最重要的秘密了，理论上这 3 个密码是我需要记住的全部密码了。&lt;&#x2F;p&gt;
&lt;p&gt;有了这个密码管理器，我的 dotfiles 文件的最重要的根基就搭建好了，我主要在 dotfiles 文件里使用 shell 脚本来管理所有的软件安装（顺便学习了一直想学习的&lt;code&gt;bash&lt;&#x2F;code&gt;脚本语言），每个 module(比如窗口管理器&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tmux&#x2F;tmux&quot;&gt;tmux&lt;&#x2F;a&gt;) 下面都有一个类似&lt;code&gt;install_tmux_macos.sh&lt;&#x2F;code&gt;的脚本。然后还有一个&lt;code&gt;tmux.yml&lt;&#x2F;code&gt;的文件去告诉&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;comtrya&#x2F;comtrya&quot;&gt;Comtrya&lt;&#x2F;a&gt;去执行复制文件到对应 module 的配置文件夹所在地。&lt;code&gt;scripts&lt;&#x2F;code&gt;文件夹放一些集合的脚本，比如一次性安装所有的必要软件的脚本，这里面的脚本一般来说是调用 modules 里已有的脚本。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;所以，当我现在有个新电脑，我的初始化流程将会是这样：&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;安装 xcode 的开发者工具（这样才能用 git 等命令）&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;xcode-select --install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol&gt;
&lt;li&gt;克隆 dotfiles 文件夹&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles.git &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;dotfiles
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; dotfiles
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;theowenyoung:&amp;lt;token&amp;gt;@github.com&#x2F;theowenyoung&#x2F;private.git &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;dotfiles&#x2F;private
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;运行配置 macos 的文件，这样就不用一个个在界面上去做配置了，全部配置见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;modules&#x2F;macos&#x2F;configure_macos.sh&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;scripts&#x2F;1_configure_macos.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;scripts&#x2F;2_install_required_modules_macos.sh&quot;&gt;安装必备软件&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;scripts&#x2F;2_install_required_modules_macos.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;安装&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;scripts&#x2F;3_import_dotfiles_macos.sh&quot;&gt;配置文件&lt;&#x2F;a&gt;（这一步会导入所有配置文件，以及密码，需要的环境变量等等（命令行脚本会提示你输入密码））&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;scripts&#x2F;3_import_dotfiles_macos.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;.zshrc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;其中包含 1 个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;scripts&#x2F;import_ssh_key.sh&quot;&gt;导入 ssh key 的脚本&lt;&#x2F;a&gt;，和&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;scripts&#x2F;import_temp_env.sh&quot;&gt;导入临时环境变量的脚本&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;独立安装其他想安装的软件&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;modules&#x2F;foo&#x2F;install_foo_macos.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Linux 的初始化也是类似，可以看我的 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles#deiban-init&quot;&gt;readme 文件&lt;&#x2F;a&gt;, &lt;strong&gt;我强烈建议你不要直接用我的 dotfiles 文件&lt;&#x2F;strong&gt;，就像自己的房子一样，你应该始终自己从头开始构建，这样才是保持可持续的好方法（我对&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.ankiapp.com&#x2F;&quot;&gt;anki&lt;&#x2F;a&gt;的使用也是同样的观点，你应该使用自己插入每一个要记住的单词，而不是使用别人做好的列表，只有你自己插入的，你才有场景去记住它）。我的 repo 只是给你做参考，还有&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=dotfiles&quot;&gt;17 万人&lt;&#x2F;a&gt;的 dotfiles 可以用来参考。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;comtrya&#x2F;comtrya&quot;&gt;Comtrya&lt;&#x2F;a&gt;的运行操作的命令是：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;comtrya&lt;&#x2F;span&gt;&lt;span&gt; apply
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这个命令会应用所有当前目录下他找到的&lt;code&gt;.yml&lt;&#x2F;code&gt;文件。我写了一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;modules&#x2F;comtrya&#x2F;files&#x2F;comtrya_alias.zsh&quot;&gt;更方便的 bash 命令&lt;&#x2F;a&gt;去做这件事,有了个 function 之后，我可以在任意目录执行这些命令：&lt;&#x2F;p&gt;
&lt;p&gt;表示仅应用 ssh 模块下的配置：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ca&lt;&#x2F;span&gt;&lt;span&gt; ssh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;表示应用全部模块的全部更新：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ca&lt;&#x2F;span&gt;&lt;span&gt; all
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果你当前在某个模块目录下，直接运行：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ca
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即可执行当前模块的配置。&lt;&#x2F;p&gt;
&lt;p&gt;另外我还有一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;scripts&#x2F;unlink.sh&quot;&gt;&lt;code&gt;unlink.sh&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; 的脚本，可让你一件删除所有 comtrya 创建的配置文件（为了更清晰，这个脚本是手动维护的）&lt;&#x2F;p&gt;
&lt;h3 id=&quot;guan-yu-wo-de-jian-pan&quot;&gt;关于我的键盘&lt;a class=&quot;zola-anchor&quot; href=&quot;#guan-yu-wo-de-jian-pan&quot; aria-label=&quot;Anchor link for: guan-yu-wo-de-jian-pan&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;我用的键盘的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;tree&#x2F;main&#x2F;modules&#x2F;qmk&quot;&gt;键位配置&lt;&#x2F;a&gt;也在里面，我使用一款叫 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattdibi&#x2F;redox-keyboard&quot;&gt;redox&lt;&#x2F;a&gt; 的分体键盘（顺便说一下，分体键盘真的好用，你可以把手按照最舒服的姿势摆在任何地方），我的键盘的键位大概长这样：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;web3-to-dotfiles&#x2F;.&#x2F;redox-keyboard.png&quot; alt=&quot;keyboard&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这是一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.zfrontier.com&#x2F;app&#x2F;flow&#x2F;2wXVPWNnXn5v&quot;&gt;客制化&lt;&#x2F;a&gt;的键盘，意味着我可以按照我的习惯自定义全部的按键，还有一个重要功能是，可以“一键两用”，比如我最常用的空格键，在单击的时候是空格键，但是在按住的情况下是&lt;code&gt;cmd&lt;&#x2F;code&gt;键，几乎每个控制键, 我都重新定义了他在单击的时候的键位，这样就最大化的利用了键盘里最常用的区域。还有一个是键盘支持多层，我只利用了 2 层，我觉得人脑记不住那么多层，我的第二层就放一些播放，暂停，下一首，静音之类的控制键和 F1 到 F12 的键位。&lt;&#x2F;p&gt;
&lt;p&gt;你可以在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;config.qmk.fm&#x2F;#&#x2F;redox&#x2F;rev1&#x2F;LAYOUT&quot;&gt;这里&lt;&#x2F;a&gt; 导入我的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;raw&#x2F;main&#x2F;modules&#x2F;qmk&#x2F;files&#x2F;redoxpro&#x2F;redoxpro.json&quot;&gt;键位配置文件&lt;&#x2F;a&gt;，以查看我的键盘的更多层。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jie-lun&quot;&gt;结论&lt;a class=&quot;zola-anchor&quot; href=&quot;#jie-lun&quot; aria-label=&quot;Anchor link for: jie-lun&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;在做完以上的一切后，我的数字生活开始变得更加的得心应手，系统也更加的 robust，基本上可以随时 reset 重来。以及我终于拥有了自己的第一个以后会稳定使用的 web3 身份了（以前注册的 metamask 真的找不到了，不过反正也没钱），也许我应该把之前在 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;matters.news&#x2F;&quot;&gt;matters&lt;&#x2F;a&gt; 上赚的一点点 like 币（被我在交易所换成了 200 usdt 了）转到这里？以及我还需要开哪些 web3 账户？&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;上次看了这个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;branle.netlify.app&#x2F;&quot;&gt;nostr&lt;&#x2F;a&gt;协议，觉得很喜欢，现在终于可以生成一个永久账户了：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;astral.ninja&#x2F;57c22f1ceef806230690b0932e3bc850d485f34ee722378b0f6f2e403097caa1&quot;&gt;astral&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;以及这是我当前的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;tree&#x2F;main&#x2F;modules&quot;&gt;全部模块&lt;&#x2F;a&gt;,里面有我精心调试的最优配置（对于我），以及由于刚开始维护，还在频繁不断完善中（但是我对当前的文件结构很满意）：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; modules
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── acme
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── alacritty
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── alfred
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── anki
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── automator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── bash-language-server
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── bat
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── broot
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── caddy
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── cargo-generate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── clash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── comtrya
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── curl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── dashflare
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── dufs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── editor
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── fd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── font
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── fzf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── git
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── git-filter-repo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── gnupg2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── helix
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── homebrew
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── hurl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── jq
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── kakoune
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── keepassxc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── kitty
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── lua_language_server
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── macos
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── macports
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── meilisearch
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── microsoft_edge
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── miller
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── napa
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── navi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── nodejs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── nvim
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── pass
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── passwd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── pepper
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── pip3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── podman
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── podman-compose
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── postman
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── qBittorrent
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── qmk
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── rage
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── rust-analyzer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── shadowsocks-rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── simple-torrent
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── ssh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── ssh-agent
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── starship
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── systemd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── taplo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── tiny
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── tmux
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── translate-shell
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── vscode
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── wasm-pack
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── wezterm
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── wrangler
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── yaml-language-server
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   ├── zellij
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── zsh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tmux&#x2F;tmux&quot;&gt;tmux&lt;&#x2F;a&gt; 管理窗口，终端用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alacritty&#x2F;alacritty&quot;&gt;Alacritty&lt;&#x2F;a&gt; ,模态编辑器
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;helix-editor&#x2F;helix&quot;&gt;helix&lt;&#x2F;a&gt; 和&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mawww&#x2F;kakoune&quot;&gt;kakoune&lt;&#x2F;a&gt;,kak 更成熟，但是更喜欢 helix，我买了&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.alfredapp.com&#x2F;&quot;&gt;alfred&lt;&#x2F;a&gt;的终身版，现在它已经升级到 alfred5 了（但是 alfred 的配置文件太恶心了，不适合在 dotfiles 里管理，因为是自动生成的，由于这一点我想找一个替代品，但是没有体验更好的），我用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denisidoro&#x2F;navi&quot;&gt;navi&lt;&#x2F;a&gt; 管理常见的 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;tree&#x2F;main&#x2F;modules&#x2F;navi&#x2F;files&#x2F;cheats&quot;&gt;cheatsheets&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf&quot;&gt;fzf&lt;&#x2F;a&gt;查找文件（太好用了，强烈推荐），以及很多其他的好东西，上述的一些 module 有的已经没有在用了，但是配置文件我想留着，以防将来有一天想再试试。&lt;&#x2F;p&gt;
&lt;p&gt;在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;&quot;&gt;这里查看整个 dotfiles repo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后还要建议 web3 的大佬们，你们应该投资密码管理器才对，把更好用的密码管理器免费带给大家！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Zola 博客的中文阅读时间预估误差很大，所以我做了一个修复</title>
		<published>2022-07-12T21:11:21+08:00</published>
		<updated>2022-07-12T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/reading-time/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/reading-time/</id>
		<content type="html">&lt;p&gt;我发现 Zola 给中文文章的阅读时间预估特别高，比如我刚发布的这篇&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;add-search&#x2F;&quot;&gt;给 Zola 博客增加搜索功能&lt;&#x2F;a&gt;, 显示要 20 分钟才能阅读完:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;发布于: 2022-07-12 · 最后更新时间: 2022-07-12 · 阅读时间: 20 min&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;我就纳闷我这是写了一篇 essay 吗，于是就是查它的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;39cf436b1174a3d5f2fbe4bac20e942795005f05&#x2F;components&#x2F;content&#x2F;src&#x2F;utils.rs#L55-L61&quot;&gt;实现&lt;&#x2F;a&gt;, 发现实现很简单，就是基于 unicode 字符除以了一个数：&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; Get word count and estimated reading time
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;pub fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;get_reading_analytics&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;: &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;) -&amp;gt; (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;usize&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;usize&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; word_count: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;usize &lt;&#x2F;span&gt;&lt;span&gt;= content.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;unicode_words&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    (word_count, ((word_count + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;199&lt;&#x2F;span&gt;&lt;span&gt;) &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后他在注释里链接了这个数字的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;help.medium.com&#x2F;hc&#x2F;en-us&#x2F;articles&#x2F;214991667-Read-time&quot;&gt;来源&lt;&#x2F;a&gt;，证明它不是拍脑袋决定的, 来源是 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;&quot;&gt;Medium&lt;&#x2F;a&gt; 的文档：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Read time is based on the average reading speed of an adult (roughly 265 WPM). We take the total word count of a post and translate it into minutes, with an adjustment made for images. For posts in Chinese, Japanese and Korean, it’s a function of number of characters (500 characters&#x2F;min) with an adjustment made for images.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这篇文档说英文这类字符大约是 265 个单词每分钟，中日韩这类文字是 500 个字符每分钟，所以对于中文来讲，zola 这个计算是有大约 1 倍的误差的，所以我加了一个判断：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;njk&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-njk &quot;&gt;&lt;code class=&quot;language-njk&quot; data-lang=&quot;njk&quot;&gt;&lt;span&gt;{% macro get_reading_time(minutes) %}
&lt;&#x2F;span&gt;&lt;span&gt;  {% if lang==&amp;quot;zh&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span&gt;    {{ minutes&#x2F;1.88 | round }}
&lt;&#x2F;span&gt;&lt;span&gt;  {% else %}
&lt;&#x2F;span&gt;&lt;span&gt;    {{ minutes }}
&lt;&#x2F;span&gt;&lt;span&gt;  {% endif %}
&lt;&#x2F;span&gt;&lt;span&gt;{% endmacro get_reading_time %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后在&lt;code&gt;page.html&lt;&#x2F;code&gt;里可以这样调用：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;njk&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-njk &quot;&gt;&lt;code class=&quot;language-njk&quot; data-lang=&quot;njk&quot;&gt;&lt;span&gt;{{ macro::get_reading_time(minutes=page.reading_time) }}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样应该就能修正中文的预估时间了。修正后，开头提到的文章现在预估时间大约是 11 分钟，比较合理了。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>给Zola博客增加搜索功能</title>
		<published>2022-07-12T00:54:03+08:00</published>
		<updated>2022-07-17T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/add-search/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/add-search/</id>
		<content type="html">&lt;p&gt;我觉得个人博客的一个最大的好处就是我可以把它当成任何东西的试验田，弄坏也没事，反正这只是我的个人数字花园而已。所以昨天我给博客新加了一个&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;search&#x2F;&quot;&gt;搜索页面&lt;&#x2F;a&gt;，以及首页也添加了一个搜索框。&lt;&#x2F;p&gt;
&lt;p&gt;我一直在这个博客里存放自己的所有公开内容，包括笔记和文章，我经常需要搜索自己的笔记，在此之前，我一直用 VSCode 在本地搜索文档。但是 VSCode 其实启动挺慢的，而且如果不在电脑边，也没法用，所以最近就研究了几种搜索方案。最终我选择了自托管 Rust 开发的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;meilisearch&quot;&gt;Meilisearch&lt;&#x2F;a&gt;，但是这也不是特别理想的方案，因为需要在自己的 VPS 服务器上托管，对于静态博客来说，多了一环需要动态运行的服务需要维护。但是这已经是目前最不差的方案了。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;对于静态博客的搜索，我了解的主要有 4 种主流方案，一是客户端搜索，另一种是很流行的使用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.algolia.com&#x2F;&quot;&gt;Algolia&lt;&#x2F;a&gt;的搜索托管服务，还有一种是使用搜索引擎比如谷歌的索引结果，最后就是我最终使用的 Algolia 的开源&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;meilisearch&quot;&gt;替代方案 Meilisearch&lt;&#x2F;a&gt;这类的自托管。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ke-hu-duan-sou-suo&quot;&gt;客户端搜索&lt;a class=&quot;zola-anchor&quot; href=&quot;#ke-hu-duan-sou-suo&quot; aria-label=&quot;Anchor link for: ke-hu-duan-sou-suo&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;客户端搜索是最符合静态博客定义的，完全不依赖服务端，zola 博客内置的搜索功能也是这样，其原理是 build 的过程中，生成整个网站的搜索的 JSON 索引文件，在前端网页提出搜索请求后，用 js 去搜索这个索引，然后找出对应的结果。这个索引可大可小，如果你只索引标题和路径的话，那么索引就很小，但是如果你索引全文的话，取决于你的文档大小，索引可能会很大。Zola 目前内置的搜索使用 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;weixsong&#x2F;elasticlunr.js&quot;&gt;elasticlunr&lt;&#x2F;a&gt;, 其实已经 3 年没有更新了，项目处于等继承者状态。另一个就是，这个基本上是不支持中文搜索的，虽然 Zola 有选项可以建立中文的搜索索引，但是前端库方面对于中文的支持处于不可用的状态，我试过接入，但是太多 bug 了，之前看到一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.jpgov.art&#x2F;posts&#x2F;japanese-full-text-search-on-zola&#x2F;&quot;&gt;日本博主好像确实有成功集成日文搜索&lt;&#x2F;a&gt;, 我仿照的时候也失败了。&lt;&#x2F;p&gt;
&lt;p&gt;为什么对于中文搜索需要专门支持呢？因为所有类似的全文搜索实现都是要先建立一个倒排索引（听起来很牛逼，其实就是词语对文章 id 的哈希索引），类似下面这样：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;hello&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;world&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;World&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;world&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;foo&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;有了这个索引，就能很快的找到最相关的文章。这种索引对于类似英语的语言来说很好实现，因为英语中分词很简单，只需要根据空格就能把所有词语分开，但是中文没有用空格分开的习惯，所以需要很大的词语字典，然后从字典里找到相关的词语，然后再建立分词索引。这才完成第一步（这个比较好解决，因为这一步发生在编译阶段，有足够的资源去做这件事）。第二步是从客户端发出搜索请求，这一步依然需要分词，比如用户搜索&lt;code&gt;如何给zola博客添加索引&lt;&#x2F;code&gt;，搜索引擎首先要把这句话分为&lt;code&gt;如何&lt;&#x2F;code&gt;,&lt;code&gt;给&lt;&#x2F;code&gt;,&lt;code&gt;Zola&lt;&#x2F;code&gt;,&lt;code&gt;博客&lt;&#x2F;code&gt;,&lt;code&gt;添加&lt;&#x2F;code&gt;,&lt;code&gt;索引&lt;&#x2F;code&gt;，然后再去对应的索引里进行最佳匹配查询。所以我觉得对于中文搜索，在客户端做是不现实的，因为基本上没法在客户端上进行复杂的分词，而且随着文档的增加，全文搜索的索引还会进一步增加，全部加载到客户端看起来也不是一个很道德的选择。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;WASM 怎么样？&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;webassembly.org&#x2F;&quot;&gt;WebAssembly&lt;&#x2F;a&gt; 以作为 js 的高性能支持方案进入了主流浏览器的支持，你可以用 Rust, C++，或者任何你喜欢的语言来编写高性能的 WebAssembly 应用，然后在前端调用。&lt;&#x2F;p&gt;
&lt;p&gt;对于 WASM，看到过几个有意思的项目，比如&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phiresky&#x2F;sql.js-httpvfs&quot;&gt;sql.js-httpvfs&lt;&#x2F;a&gt;, 把 sqlite 数据文件存储到 CDN 服务器上，然后前端用含有内嵌 sqlite 的 wasm 去读取数据，充分利用了 sqlite 的高效，从而实现让 web 客户端完全摆脱服务端数据库的依赖。&lt;&#x2F;p&gt;
&lt;p&gt;我也找到了几个关于 WASM 搜索的项目，主要包括：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinysearch&#x2F;tinysearch&quot;&gt;tinysearch&lt;&#x2F;a&gt; ,&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jameslittle230&#x2F;stork&quot;&gt;stork&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&#x2F;edgesearch&quot;&gt;edgesearch&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tinysearch&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinysearch&#x2F;tinysearch&quot;&gt;Tinysearch&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#tinysearch&quot; aria-label=&quot;Anchor link for: tinysearch&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;用 Rust 编写，原理和 js 客户端搜索基本类似，只不过把索引打包到 wasm 里面，最终的 wasm 大小可以是 100k 以内，但是也只支持英文。我把源码下载下来，然后把分词逻辑换用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;charabia&quot;&gt;Meilisearch 的分词&lt;&#x2F;a&gt;，尝试打包我目前的博客，发现总共也才 113K，这 113K 是同时包括搜索逻辑和索引数据的哦，而用 Zola 自带的搜索打包的纯中文索引数据是 3.5M,英文索引是 650K, 可见 tinysearch 的作者真的做了很多优化，作者也写了一篇&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;endler.dev&#x2F;2019&#x2F;tinysearch&#x2F;&quot;&gt;详细的文章&lt;&#x2F;a&gt;记录优化的过程。但其实这样对比是有一点不公平的，因为&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;overview&#x2F;&quot;&gt;Zola 的索引会有更好的搜索体验&lt;&#x2F;a&gt;，你可以在文档网站体验一下, 而&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;endler.dev&#x2F;2019&#x2F;tinysearch&quot;&gt;Tinysearch&lt;&#x2F;a&gt;则为了性能做了一些取舍，比如不支持前缀搜索，搜索结果只显示标题，没有上下文，也没有高亮等等，但是从性能角度，我觉得这种方案算是客户端搜索的天花板了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stork&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jameslittle230&#x2F;stork&quot;&gt;Stork&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#stork&quot; aria-label=&quot;Anchor link for: stork&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;同样也是 Rust 编写，只支持英文，颜值很好，接入体验也很棒，搜索结果还能高亮，也有上下文，基本上和&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.algolia.com&#x2F;&quot;&gt;Algolia&lt;&#x2F;a&gt;类似，也使用了 wasm，不过 Stork 是把搜索逻辑单独打包成一个 wasm，然后把索引数据另外打包成另一个&lt;code&gt;st&lt;&#x2F;code&gt;文件，然后搜索的时候动态的加载索引数据。这样的操作其实多了一步序列化和反序列化的步骤。我也尝试把其内置的简单英文分词逻辑换用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;charabia&quot;&gt;Meilisearch 的分词&lt;&#x2F;a&gt;，但是发现我的索引数据竟然达到了 85M（可能有别的坑，因为我只是简单的替换了分词的函数），所以就没有更多的体验了。这也印证了，想在客户端把搜索体验做好，确实需要权衡你的索引大小。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;edgesearch&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&#x2F;edgesearch&quot;&gt;edgesearch&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#edgesearch&quot; aria-label=&quot;Anchor link for: edgesearch&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;我喜欢这个哥们的概念，无服务器 Serverless 搜索，通过把 WASM 部署到 Cloudflare Workers 上，然后客户端通过网络请求进行搜索，我觉得这是最有戏的方案，我喜欢 Cloudflare Workers 这种一次书写，永远忘记的无服务器系统，而且每天还有 10 万请求的免费额度，同时作为基于 Chrome V8 中有限制的无服务器，冷启动又贼快，所以我觉得静态博客的最佳搜索方案就是这样了。虽然有一点点动态，但是我们用了最具有扩展性的方案，我倾向于认为这是必要的权衡。说回 EdgeSearch，它也是先 build 索引，然后把索引上传到 cloudflare 的 KV 内存数据库里，然后通过 wasm load 索引，进行搜索，性能很高，只是它目前只是处于实验阶段，接入需要自定义很多东西，而且也不支持中文，我个人很希望这个项目能获得更多的牵引力。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;nan-dao-zhi-neng-yong-yun-sou-suo-fu-wu-liao-ma&quot;&gt;难道只能用云搜索服务了吗？&lt;a class=&quot;zola-anchor&quot; href=&quot;#nan-dao-zhi-neng-yong-yun-sou-suo-fu-wu-liao-ma&quot; aria-label=&quot;Anchor link for: nan-dao-zhi-neng-yong-yun-sou-suo-fu-wu-liao-ma&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;algolia&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.algolia.com&#x2F;&quot;&gt;Algolia&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#algolia&quot; aria-label=&quot;Anchor link for: algolia&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;即刻搜索的鼻祖和天花板，我在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;&quot;&gt;Actionsflow 的文档网站&lt;&#x2F;a&gt;中用了他提供给开源项目的免费服务，接入和界面都是一流的，不信你去看&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;&quot;&gt;tailwindcss&lt;&#x2F;a&gt;的搜索体验，太棒了。唯一的问题就是贵，如果不差钱，那我觉得这是最佳选择了。他家同时也是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.algolia.com&#x2F;&quot;&gt;Hacker News&lt;&#x2F;a&gt;的御用搜索，我经常用来搜很多东西, 感谢感谢！&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sourcegraph&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sourcegraph.com&#x2F;&quot;&gt;Sourcegraph&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#sourcegraph&quot; aria-label=&quot;Anchor link for: sourcegraph&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;我在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruanyf&#x2F;weekly&quot;&gt;阮老师的科技周刊&lt;&#x2F;a&gt;里看到阮老师给用户的其中一个搜索选项是利用 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sourcegraph.com&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&quot;&gt;https:&#x2F;&#x2F;sourcegraph.com&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&lt;&#x2F;a&gt; 提供的对 Github 源码的免费搜索服务，我试了一下，搜索准确度非常高，但是只能链接到源文件，没法回到对应的网页，但是由于博客内容是用 markdown 写的，所以纯文本也没问题。所以，这是一个不错的替代品。我在&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;search&#x2F;&quot;&gt;Search&lt;&#x2F;a&gt;也添加了一个表单搜索链接过去，你可以体验一下。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vscode-web-ban-github1s&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github1s.com&#x2F;theowenyoung&#x2F;blog&quot;&gt;VSCode Web 版(Github1s)&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vscode-web-ban-github1s&quot; aria-label=&quot;Anchor link for: vscode-web-ban-github1s&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;你只需要在 github 的网址上加上&lt;code&gt;1s&lt;&#x2F;code&gt;之后，就能用浏览器以 VSCode 的方式打开你的 github repo，比如我的博客对应的地址就是：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github1s.com&#x2F;theowenyoung&#x2F;blog&quot;&gt;https:&#x2F;&#x2F;github1s.com&#x2F;theowenyoung&#x2F;blog&lt;&#x2F;a&gt; ，这里自带 VSCode 的全局搜索，所以就可以直接在浏览器上搜索博客内容，这其实也是一个很好的搜索替代方案，完全不用担心自己托管，搜索速度也超快，就是差一个直接指向搜索并且带搜索参数的链接，我提了一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;conwnet&#x2F;github1s&#x2F;issues&#x2F;428&quot;&gt;Issue&lt;&#x2F;a&gt;,结果他们回复其实他们用的是我上面提到的 Sourcegraph 的搜索，被骗了！我以为是 VSCode 自带的搜索！但是还是期待一下后续的进度，希望能有一个直链，支持类似这样的链接&lt;code&gt;https:&#x2F;&#x2F;github1s.com&#x2F;theowenyoung&#x2F;blog&#x2F;panel&#x2F;search?q=term&amp;amp;files-include=content&lt;&#x2F;code&gt;,这样就可以直接从我的博客里的搜索框跳转到 vscode 的全局搜索里，体验更好。不过这个工具的问题也是首次启动挺慢的，期待微软官方能出一个类似的工具，因为反正 github 也是他家的，可能会更快。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;add-search&#x2F;.&#x2F;github1s.png&quot; alt=&quot;githbu1s&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;google-wang-zhan-sou-suo&quot;&gt;Google 网站搜索&lt;a class=&quot;zola-anchor&quot; href=&quot;#google-wang-zhan-sou-suo&quot; aria-label=&quot;Anchor link for: google-wang-zhan-sou-suo&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;你可以在谷歌的搜索框里加上&lt;code&gt;site:www.owenyoung.com&lt;&#x2F;code&gt;来指定搜索对应的网站，速度极快，缺点是可能收录不全。Anyway, 我在&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;search&#x2F;&quot;&gt;Search&lt;&#x2F;a&gt;也添加了一个表单搜索链接了过去，你可以体验一下。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zi-tuo-guan-fang-an&quot;&gt;自托管方案&lt;a class=&quot;zola-anchor&quot; href=&quot;#zi-tuo-guan-fang-an&quot; aria-label=&quot;Anchor link for: zi-tuo-guan-fang-an&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;meilisearch&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;meilisearch&quot;&gt;Meilisearch&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#meilisearch&quot; aria-label=&quot;Anchor link for: meilisearch&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;meilisearch&quot;&gt;美丽搜索？&lt;&#x2F;a&gt;是一个用 Rust 写的美丽的 Algolia 的开源替代，我喜欢这个名字哈哈哈，美丽！Evething is ok, 就是界面相比 Algolia 还是差了那么一点点。使用流程是：在服务端启动服务后，每次你的静态博客编译后，请求 meili 的接口，把要索引的文档通通丢给他，然后他就会立刻建立索引，客户端就可以搜索里。meili 提供了&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;docs-searchbar.js&quot;&gt;客户端 js 库&lt;&#x2F;a&gt;让我们可以方便地一键接入。我研究了美丽自己的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.meilisearch.com&#x2F;&quot;&gt;文档网站&lt;&#x2F;a&gt; (&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;documentation&quot;&gt;源码&lt;&#x2F;a&gt;),发现他的接入流程更美丽，用 Github 的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meilisearch&#x2F;documentation&#x2F;blob&#x2F;master&#x2F;.github&#x2F;workflows&#x2F;gh-pages-scraping.yml&quot;&gt;Action&lt;&#x2F;a&gt;去扫描整个站点的 sitemap 文件，然后做一些针对网站排版的简单配置，就可以美丽的，有层次的索引你整个网站了。本来以为建立索引挺慢的，但是后面发现 1 分钟左右就能扫描完成，可以在&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;search&#x2F;&quot;&gt;Search 页面&lt;&#x2F;a&gt;体验一下这个搜索结果的层次感！（顺便说一下，这些功能 Algolia 都有哈！），这个层次感是我决定采用它的最重要的原因，因为它是针对文章的各种二级，三级标题，以及内容所在的大标题做的更有细节的索引，所以在搜索结果中，可以直接从结果中点击进入到对应文章的锚点。以下是扫描全站的核心配置：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;selectors&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lvl0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.detail-page .p-category&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;default_value&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Random&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lvl1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.detail-page .p-tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;default_value&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Notes&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lvl2&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.detail-page .entry-title&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lvl3&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.e-content h2&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lvl4&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.e-content h3&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.e-content p, .e-content li&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样的配置的话， meilisearch 建立的索引是细节到具体的小标题和段落上的，可以让搜索体验直接上升一个层次。所有配置见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;84f139a47658ff31482d4b36ba0acd86f08b071f&#x2F;meilisearch-docs-scraper-config.json&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wo-de-bu-shu-guo-cheng&quot;&gt;我的部署过程&lt;a class=&quot;zola-anchor&quot; href=&quot;#wo-de-bu-shu-guo-cheng&quot; aria-label=&quot;Anchor link for: wo-de-bu-shu-guo-cheng&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;先在 VPS 上搭建 Meili,见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;dotfiles&#x2F;blob&#x2F;main&#x2F;modules&#x2F;meilisearch&#x2F;meilisearch.yml&quot;&gt;我的 meilisearch dotfile 配置&lt;&#x2F;a&gt;，并不复杂，是我最喜欢的单一二进制文件，无依赖。&lt;&#x2F;li&gt;
&lt;li&gt;在 Github Actions 的中添加步骤，在网站更新后，立刻爬取整个网站.见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;ee82d2d783c3b08b98862a7700a6a29a301e164e&#x2F;.github&#x2F;workflows&#x2F;build.yml#L20-L37&quot;&gt;build.yml&lt;&#x2F;a&gt; 以及&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;main&#x2F;meilisearch-docs-scraper-config.json&quot;&gt;爬取的配置文件&lt;&#x2F;a&gt;,得益于我上次在&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;en&#x2F;blog&#x2F;indieweb&#x2F;&quot;&gt;Now, I’m in IndieWeb?&lt;&#x2F;a&gt;中给网站的结构添加了很多有用的标记，所以很好定位到我的一级标题，二级标题，分类等, 我在配置中排除了列表页面，让他只爬取文章页。&lt;&#x2F;li&gt;
&lt;li&gt;在前端网页引入相应的 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;37de4f670b3b2d28a77e39b1804ce986c99f0a6a&#x2F;templates&#x2F;search.html#L6-L8&quot;&gt;css&lt;&#x2F;a&gt; 和 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;37de4f670b3b2d28a77e39b1804ce986c99f0a6a&#x2F;templates&#x2F;search.html#L71-L85&quot;&gt;js 脚本&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Over! 其实说的简单，但是我在建立索引的过程中多次调整了页面中 tag 的层级和 class 以便机器人可以更好的定位到需要的内容（面向机器人编程），最终打磨出来的效果就是：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;add-search&#x2F;.&#x2F;meilisearch.png&quot; alt=&quot;meilisearch&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;搜索页面的模版文件&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;main&#x2F;templates&#x2F;search.html&quot;&gt;在这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jie-lun&quot;&gt;结论&lt;a class=&quot;zola-anchor&quot; href=&quot;#jie-lun&quot; aria-label=&quot;Anchor link for: jie-lun&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;虽然目前用 Meilisearch 解决了搜索的问题（而且体验超好），但是还是更喜欢&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wilsonzlin&#x2F;edgesearch&quot;&gt;Edgesearch&lt;&#x2F;a&gt;的方案，这样我就能把搜索部署在类似 Workers 和 Deno Deploy 的平台上了。我不喜欢 Lambda 和 Vercel 的无服务器，虽然限制更少，但是相应的冷启动有点久，不够纯粹。我的理想方案应该是这样，它是一个通用的站内搜索引擎：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;通过 Fork 一个 Cloudflare Worker 项目即可部署自己的搜索引擎，带一些很少的配置。&lt;&#x2F;li&gt;
&lt;li&gt;这个搜索引擎会暴露一个开始索引的路由，你会给这个路由提供一个配置文件，然后告诉他&lt;code&gt;sitemap&lt;&#x2F;code&gt;文件，以及要索引的区块配置。&lt;&#x2F;li&gt;
&lt;li&gt;这个搜索引擎暴露几个类似 Algolia 的接口让前端可以搜索，以及管理索引。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;基本上就是把我在 meilisearch 上做的事搬到 wasm 上，但是我更喜欢在 cloudflare workers 上部署搜索服务的方案，因为它更简单，更快，更具有扩展性。&lt;&#x2F;p&gt;
&lt;p&gt;我目前是把 Meili 部署在我的一个 4g 内存位于日本的服务器，这台服务器还部署了我很多其他的东西，如果你也想要接入美丽搜索，但是不想自己部署服务端（我懂），可以邮件或者私信我，我告诉你我的 Master Key，然后你也可以利用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;meilisearch.owenyoung.com&#x2F;&quot;&gt;https:&#x2F;&#x2F;meilisearch.owenyoung.com&#x2F;&lt;&#x2F;a&gt;建立你的博客索引了。但是这是玩具产品，不能保证可用性，后续也可能被替换，但是终止前我会提前通知你～&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;更新：我目前把 Meilisearch 从我的 VPS 迁移到免费的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mogenius.com&#x2F;home&quot;&gt;Mogenius&lt;&#x2F;a&gt;,更省心，这样就算我弄乱 VPS 的情况下，搜索也不会轻易下线，我也写了&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;en&#x2F;blog&#x2F;adding-search-to-zola-blog-with-meilisearch-deployed-on-mogenius&#x2F;&quot;&gt;一篇文章&lt;&#x2F;a&gt;记录整个过程&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>在Debian系统中安装 Gost</title>
		<published>2022-06-09T00:31:11+08:00</published>
		<updated>2022-06-12T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/debian-gost-setup/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/debian-gost-setup/</id>
		<content type="html">&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ginuerzh&#x2F;gost&quot;&gt;Gost&lt;&#x2F;a&gt; 是一个灵活的代理转发工具，可以转发 HTTP、HTTPS、SOCKS5 等协议，可以配置反嗅探策略等等。&lt;&#x2F;p&gt;
&lt;p&gt;本文记录在 Debian 上使用 Systemctl 配置 Gost 代理，以及使用 acme.sh 配置 https 证书。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;1-xia-zai-bing-jie-ya-zui-xin-de-gost-ya-suo-bao&quot;&gt;1. 下载并解压最新的 Gost 压缩包&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-xia-zai-bing-jie-ya-zui-xin-de-gost-ya-suo-bao&quot; aria-label=&quot;Anchor link for: 1-xia-zai-bing-jie-ya-zui-xin-de-gost-ya-suo-bao&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;去&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ginuerzh&#x2F;gost&#x2F;releases&#x2F;&quot;&gt;Gost Release&lt;&#x2F;a&gt;找到最新版本的压缩包，比如 我的服务器系统是 Debian，amd64 架构，所以对应的是&lt;code&gt;https:&#x2F;&#x2F;github.com&#x2F;ginuerzh&#x2F;gost&#x2F;releases&#x2F;download&#x2F;v2.11.2&#x2F;gost-linux-amd64-2.11.2.gz&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# create gost directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;span&gt; gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# download to current directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wget&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;github.com&#x2F;ginuerzh&#x2F;gost&#x2F;releases&#x2F;download&#x2F;v2.11.2&#x2F;gost-linux-amd64-2.11.2.gz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# unzip
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gzip -d&lt;&#x2F;span&gt;&lt;span&gt; gost-linux-amd64-2.11.2.gz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span&gt; gost-linux-amd64-2.11.2.gz gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Add execute permission
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;chmod&lt;&#x2F;span&gt;&lt;span&gt; +x gost
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;2-shen-qing-https-zheng-shu-bing-zi-dong-xu-qi&quot;&gt;2. 申请 https 证书并自动续期&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-shen-qing-https-zheng-shu-bing-zi-dong-xu-qi&quot; aria-label=&quot;Anchor link for: 2-shen-qing-https-zheng-shu-bing-zi-dong-xu-qi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;我使用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;acmesh-official&#x2F;acme.sh&quot;&gt;acme.sh&lt;&#x2F;a&gt;来管理证书，并且使用 Cloudflare 作为 DNS 管理，因为 Cloudflare 提供了 API 来验证域名所属权限，这样签发证书更方便。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;下载 acme 工具:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wget -O&lt;&#x2F;span&gt;&lt;span&gt; - https:&#x2F;&#x2F;get.acme.sh | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sh -s&lt;&#x2F;span&gt;&lt;span&gt; email=my@example.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;把域名在 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cloudflare.com&#x2F;zh-cn&#x2F;&quot;&gt;Cloudflare&lt;&#x2F;a&gt; 添加解析，解析到你的服务器 IP&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;在某个域名的 dashboard 面板右侧找到 &lt;code&gt;Account ID&lt;&#x2F;code&gt;, 记录下备用。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;进入&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dash.cloudflare.com&#x2F;profile&#x2F;api-tokens&quot;&gt;https:&#x2F;&#x2F;dash.cloudflare.com&#x2F;profile&#x2F;api-tokens&lt;&#x2F;a&gt;，生成一个 API Token,选择&lt;code&gt;Edit Zone&lt;&#x2F;code&gt; 模版，Zone Resources 选择 &lt;code&gt;All Zones&lt;&#x2F;code&gt;,生成，&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;把以下的信息保存到 &lt;code&gt;~&#x2F;.bashrc&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CF_Token&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sdfsdfsdfljlbjkljlkjsdfoiwje&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CF_Account_ID&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxxxxxxxxxxx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使之生效：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;.bashrc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果还有什么不清楚的，可以参考文档： &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;acmesh-official&#x2F;acme.sh&#x2F;wiki&#x2F;dnsapi&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;acmesh-official&#x2F;acme.sh&#x2F;wiki&#x2F;dnsapi&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;qian-fa-zheng-shu&quot;&gt;签发证书&lt;a class=&quot;zola-anchor&quot; href=&quot;#qian-fa-zheng-shu&quot; aria-label=&quot;Anchor link for: qian-fa-zheng-shu&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;修改 &lt;code&gt;example.com&lt;&#x2F;code&gt; 为你的域名&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;运行 &lt;code&gt;acme.sh --issue --dns dns_cf -d example.com&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: 默认的签发机构是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zerossl.com&#x2F;&quot;&gt;Zerossl&lt;&#x2F;a&gt;, 也可以使用 letsencrypt , &lt;code&gt;acme.sh --issue --dns dns_cf -d example.com --server letsencrypt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;运行之后他就会自动续期该域名，你可以检查 crontab 任务是否添加成功: &lt;code&gt;crontab -e&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;3-shi-yong-systemctl-qi-dong&quot;&gt;3. 使用 Systemctl 启动&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-shi-yong-systemctl-qi-dong&quot; aria-label=&quot;Anchor link for: 3-shi-yong-systemctl-qi-dong&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;gost.service
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;写入以下文件：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改 &lt;code&gt;&#x2F;home&#x2F;green&#x2F;gost&#x2F;&lt;&#x2F;code&gt; 为你的 gost 文件夹&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[Unit]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Description&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;After&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;syslog.target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;network.target
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[Service]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkingDirectory&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;home&#x2F;green&#x2F;gost&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;User&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;green
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Group&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;admin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UMask&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0002
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Restart&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;on-failure
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RestartSec&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Type&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;simple
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ExecStart&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;home&#x2F;green&#x2F;gost&#x2F;start.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KillSignal&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SIGINT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TimeoutStopSec&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SyslogIdentifier&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[Install]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WantedBy&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;multi-user.target
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使之生效：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl daemon-reload
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl enable gost
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;4-an-zhuang-zheng-shu&quot;&gt;4. 安装证书&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-an-zhuang-zheng-shu&quot; aria-label=&quot;Anchor link for: 4-an-zhuang-zheng-shu&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;an-zhuang-zheng-shu-dao-gost-mu-lu&quot;&gt;安装证书到 gost 目录&lt;a class=&quot;zola-anchor&quot; href=&quot;#an-zhuang-zheng-shu-dao-gost-mu-lu&quot; aria-label=&quot;Anchor link for: an-zhuang-zheng-shu-dao-gost-mu-lu&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;修改 &lt;code&gt;~&#x2F;gost&#x2F;&lt;&#x2F;code&gt;为你的文件夹， &lt;code&gt;example.com&lt;&#x2F;code&gt; 为你的域名&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;acme.sh --install-cert -d&lt;&#x2F;span&gt;&lt;span&gt; example.com \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--cert-file ~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;gost&#x2F;cert.pem  \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--key-file ~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;gost&#x2F;key.pem  \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--ca-file ~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;gost&#x2F;ca.pem \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--reloadcmd &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sudo systemctl restart gost&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;5-qi-dong-fu-wu&quot;&gt;5. 启动服务&lt;a class=&quot;zola-anchor&quot; href=&quot;#5-qi-dong-fu-wu&quot; aria-label=&quot;Anchor link for: 5-qi-dong-fu-wu&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Gost 的命令还挺长的，所以可以写的简单的脚本，以后启动方便点：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt; start.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 下面的3个参数需要改成你的
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PASS&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxxxxxx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;8443
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BIND_IP&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0.0.0.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;gost \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    -L &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http2:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}:&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PASS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}@&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BIND_IP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}:&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}?probe_resist=web:www.baidu.com:443&amp;amp;knock=example.com&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;添加执行权限&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;chmod&lt;&#x2F;span&gt;&lt;span&gt; +x .&#x2F;start.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;6-cha-kan-ri-zhi&quot;&gt;6. 查看日志&lt;a class=&quot;zola-anchor&quot; href=&quot;#6-cha-kan-ri-zhi&quot; aria-label=&quot;Anchor link for: 6-cha-kan-ri-zhi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 查看状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl status gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 查看日志
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; journalctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -u&lt;&#x2F;span&gt;&lt;span&gt; gost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;7-ke-hu-duan-pei-zhi&quot;&gt;7. 客户端配置&lt;a class=&quot;zola-anchor&quot; href=&quot;#7-ke-hu-duan-pei-zhi&quot; aria-label=&quot;Anchor link for: 7-ke-hu-duan-pei-zhi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;参见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;haoel&#x2F;haoel.github.io#4-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;7-1-clash-pei-zhi-can-kao&quot;&gt;7.1 clash 配置参考&lt;a class=&quot;zola-anchor&quot; href=&quot;#7-1-clash-pei-zhi-can-kao&quot; aria-label=&quot;Anchor link for: 7-1-clash-pei-zhi-can-kao&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;h8443
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxxxxxx
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8443
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;server&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;example.com
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tls&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;skip-cert-verify&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;username&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;7-2-gost-zhong-zhuan-jie-dian&quot;&gt;7.2 Gost 中转节点&lt;a class=&quot;zola-anchor&quot; href=&quot;#7-2-gost-zhong-zhuan-jie-dian&quot; aria-label=&quot;Anchor link for: 7-2-gost-zhong-zhuan-jie-dian&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在中转节点安装 gost，步骤同上&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;gost
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt; config.json
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ServeNodes&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;socks5:&#x2F;&#x2F;username:pass@0.0.0.0:1080&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ChainNodes&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;username:pass@example:443&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt; start.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 下面的3个参数需要改成你的
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PASS&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxxxxxx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DOMAIN&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;xxxx.com&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1080
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TARGET_PORT&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;8443
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BIND_IP&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0.0.0.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;gost \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    -L &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;socks5:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}:&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PASS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}@&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BIND_IP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}:&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -F &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}:&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PASS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}@&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DOMAIN&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}:&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TARGET_PORT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;添加执行权限&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;chmod&lt;&#x2F;span&gt;&lt;span&gt; +x .&#x2F;start.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;按照如上步骤 3，添加 systemctl 服务&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;参考&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;haoel&#x2F;haoel.github.io&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;haoel&#x2F;haoel.github.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>如果地狱真的存在，而你错了怎么办？</title>
		<published>2022-04-23T21:27:51+08:00</published>
		<updated>2022-04-27T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/what-if-hell-exists-youre-wrong/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/what-if-hell-exists-youre-wrong/</id>
		<content type="html">&lt;p&gt;“那如果你选错了宗教怎么办”？&lt;&#x2F;p&gt;
&lt;p&gt;“你指的是你的版本的地狱还是所有版本的地狱？”&lt;&#x2F;p&gt;
&lt;p&gt;在无神论共和国论坛看到&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;forum.atheistrepublic.com&#x2F;t&#x2F;what-if-hell-exists-youre-wrong&#x2F;2309&quot;&gt;这个帖子&lt;&#x2F;a&gt;，顺便摘抄一些无神论的常见观点。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;ding-yi&quot;&gt;定义&lt;a class=&quot;zola-anchor&quot; href=&quot;#ding-yi&quot; aria-label=&quot;Anchor link for: ding-yi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;根据&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Atheism&quot;&gt;维基百科无神论&lt;&#x2F;a&gt;的定义：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;广义上来讲，无神论是对神灵存在的信仰的缺失。狭义的说，无神论是拒绝相信任何神灵的存在。更狭义的说，无神论特指没有神的立场。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;quotes&quot;&gt;Quotes&lt;a class=&quot;zola-anchor&quot; href=&quot;#quotes&quot; aria-label=&quot;Anchor link for: quotes&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;每个人生来都不相信神灵。因此，举证责任不在于无神论者来反驳神的存在，而在于有神论者为有神论提供理由。 – &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Atheism&quot;&gt;维基百科&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;未经证实的宗教命题应该像所有其他未经证实的命题一样受到怀疑，神存在的不可证明并不意味着任何一种可能性的概率相等。 – &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Atheism&quot;&gt;维基百科&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“一个认为是相信上帝而不是好法律使人们诚实的国家在我看来并不是很先进。“&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你想让我相信上帝，你必须让我触摸他。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果上帝已经说话了，为什么宇宙不相信？ ——珀西·比希·雪莱（Percy Bysshe Shelley），《无神论的必要性》（The Essential of Atheism）&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;许多社会、文化和道德准则随着时代的变化而变化。它们不能是静态的，因为它违背了自然法则。如果这些道德准则不能表现出灵活性，不能根据当今时代的需要而改变，人类将不得不面对非常严重的问题。在特定年龄为特定社会作出的决定绝不是要适用于所有年龄段和所有社会。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;社会学家菲尔-祖克曼（Phil Zuckerman）分析了美国的“无神论者和世俗人士“的民族主义、偏见、反犹太主义、种族主义、教条主义、民族中心主义、封闭性和独裁性比有神论者低，在美国无神论者比例最高的州，谋杀率低于平均水平。在宗教最多的州，谋杀率高于平均水平“&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;山姆·哈里斯和理查德·道金斯等无神论者表示，斯大林的暴行不是受到无神论的影响，而是受到教条主义马克思主义的影响，虽然斯大林和毛泽东碰巧是无神论者，但他们并没有以无神论的名义行事。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;用智慧征服世界，而不仅仅是被来自它的恐怖所奴役。 – 罗素&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在基督的道德品格中，我心目中有一个非常严重的缺陷，那就是他相信地狱。我自己并不觉得任何一个真正非常人道的人会相信永恒的惩罚。 – 罗素&lt;&#x2F;p&gt;
&lt;p&gt;There is one very serious defect to my mind in Christ’s moral character, and that is that He believed in hell. I do not myself feel that any person who is really profoundly humane can believe in everlasting punishment.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你會發現這個奇怪的事實，任何時期的宗教越強烈，教條主義的信仰越深刻，殘酷就越嚴重，事態越糟。在所谓的信仰时代，当人们真正相信基督教的完整性时，就有了宗教裁判所及其所有的折磨;有数以百万计的不幸妇女被当作女巫烧死;以宗教的名义对各种各样的人实行了各种残酷的行为。 – 罗素&lt;&#x2F;p&gt;
&lt;p&gt;You find this curious fact, that the more intense has been the religion of any period and the more profound has been the dogmatic belief, the greater has been the cruelty and the worse has been the state of affairs. In the so-called ages of faith, when men really did believe the Christian religion in all its completeness, there was the Inquisition, with all its tortures; there were millions of unfortunate women burned as witches; and there was every kind of cruelty practiced upon all sorts of people in the name of religion.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我一直在和你谈论的那种理性的论点并不是真正打动人的东西。真正促使人们相信上帝的根本不是任何智力上的论据。大多数人相信上帝，因为他们从婴儿早期就被教导要这样做，这是主要原因。&lt;&#x2F;p&gt;
&lt;p&gt;I know that the sort of intellectual arguments that I have been talking to you about are not what really moves people. What really moves people to believe in God is not any intellectual argument at all. Most people believe in God because they have been taught from early infancy to do it, and that is the main reason.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;当你环顾世界时，你会发现，在人道情感方面的每一点进步，在刑法方面的每一个进步，在减少战争方面的每一步，朝着更好地对待有色人种迈出的每一步，或者每一个减轻奴隶制的现象，世界上每一个道德进步，都一直受到世界上有组织的教会的反对。&lt;&#x2F;p&gt;
&lt;p&gt;You find as you look around the world that every single bit of progress in humane feeling, every improvement in the criminal law, every step toward the diminution of war, every step toward better treatment of the colored races, or every mitigation of slavery, every moral progress that there has been in the world, has been consistently opposed by the organized churches of the world.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;上帝的整个概念是源自古代东方专制主义的概念。这是一个非常不值得自由人接受的概念。當你聽到教會裡的人在貶低自己，說他們是可悲的罪人，以及其他所有的人，這似乎是可鄙的，不值得自尊的人。我们应该站起来，坦率地面对世界。我们应该尽我们所能，如果它不如我们所希望的那样好，毕竟它仍然会比这些其他人在所有这些时代所创造的更好。一个美好的世界需要知识、善良和勇气;它不需要对过去的遗憾渴望，也不需要无知的人很久以前所说的话对自由智力的束缚。它需要无所畏惧的眼光和自由的智慧。它需要对未来的希望，而不是一直回头看一个已经死去的过去，我们相信这个过去将被我们的智慧可以创造的未来远远超越。&lt;&#x2F;p&gt;
&lt;p&gt;The whole conception of God is a conception derived from the ancient Oriental despotisms. It is a conception quite unworthy of free men. When you hear people in church debasing themselves and saying that they are miserable sinners, and all the rest of it, it seems contemptible and not worthy of self-respecting human beings. We ought to stand up and look the world frankly in the face. We ought to make the best we can of the world, and if it is not so good as we wish, after all it will still be better than what these others have made of it in all these ages. A good world needs knowledge, kindliness, and courage; it does not need a regretful hankering after the past or a fettering of the free intelligence by the words uttered long ago by ignorant men. It needs a fearless outlook and a free intelligence. It needs hope for the future, not looking back all the time toward a past that is dead, which we trust will be far surpassed by the future that our intelligence can create.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;wu-shen-lun-2-0&quot;&gt;无神论 2.0&lt;a class=&quot;zola-anchor&quot; href=&quot;#wu-shen-lun-2-0&quot; aria-label=&quot;Anchor link for: wu-shen-lun-2-0&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=2Oe6HUgrRlQ&amp;amp;t=122s&quot;&gt;无神论 2.0 Youtube Video&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;教育是全世界都相信的一条路。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;所有宗教都把我们看作孩子，我们需要指导&lt;&#x2F;li&gt;
&lt;li&gt;布道和讲座都区别是什么
&lt;ul&gt;
&lt;li&gt;布道
&lt;ul&gt;
&lt;li&gt;想改变你的生活&lt;&#x2F;li&gt;
&lt;li&gt;无条件相信神，并且重复这个想法（话语）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;讲座
&lt;ol&gt;
&lt;li&gt;给你信息&lt;&#x2F;li&gt;
&lt;li&gt;当我们想听讲座的时候，我们期待听到新的东西，而不是一直重复旧的东西，想象一下，你连续听五场一样的讲座。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;man-hua&quot;&gt;漫画&lt;a class=&quot;zola-anchor&quot; href=&quot;#man-hua&quot; aria-label=&quot;Anchor link for: man-hua&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;what-if-hell-exists-youre-wrong&#x2F;.&#x2F;religious.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;what-if-hell-exists-youre-wrong&#x2F;.&#x2F;prove.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;what-if-hell-exists-youre-wrong&#x2F;.&#x2F;stats.png&quot; alt=&quot;2020年各国宗教情况统计&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>为什么法国变成了西方世界里穆斯林最讨厌的国家？</title>
		<published>2022-04-20T16:32:15+08:00</published>
		<updated>2022-04-20T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/france-islam/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/france-islam/</id>
		<content type="html">&lt;p&gt;今天学英语，看了半岛电视台的一个视频&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=fQJUaYQN4os&quot;&gt;法国，伊斯兰教，世俗主义&lt;&#x2F;a&gt;，和 Vice 的一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=d_l0n_kc_Fc&quot;&gt;为什么法国变成了西方世界里穆斯林最讨厌的国家&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;曾经的法国是穆斯林最喜欢的国家之一，并且由于法国反对美国入侵伊拉克，这种情绪在 2003 年达到了最高峰。为什么现在的法国变成了西方世界里穆斯林最讨厌的国家呢？&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;法国当前的情况是，有约一半的人信仰基督徒，1&#x2F;3 的人则没有任何宗教信仰，同时，在法国的穆斯林和犹太教人数是全欧洲最多的。&lt;&#x2F;p&gt;
&lt;p&gt;而随着法兰西共和国在 1789 年至 1830 年间从天主教会逐步解放出来，亵渎法不复存在。在法国，政教分离是宪法的一部分。根据其条款，政府和所有公共行政部门和服务部门必须不带宗教信仰，必须避免任何宗教展示，但公民和组织可以在他们希望的地方和地点自由地实践和表达他们选择的宗教（同时也禁止基于宗教的歧视）。但是近年来，对该法律的解释趋于严格，显示法国政府正致力于把宗教元素在公共生活中消失。比如 2004 年的法律禁止法国在校学生佩戴“公然”的宗教标志（不仅是伊斯兰教）；2015 年的一个法律条款禁止公共场合的私人雇员佩戴宗教标志，比如托儿所。近年来，总统宣誓也不再使用圣经。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Charlie_Hebdo_shooting&quot;&gt;2015 年查理周刊被伊斯兰教恐怖分子袭击的事件&lt;&#x2F;a&gt;震惊了全世界，此后法国主流民意对伊斯兰教越来越不友好。&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Murder_of_Samuel_Paty&quot;&gt;2020 年法国中学教师塞缪尔·帕蒂被一名 18 岁的车臣裔俄罗斯穆斯林难民谋杀后&lt;&#x2F;a&gt;，法国总统马克龙发表了一些强硬的反伊斯兰极端主义的言论，随后法国遭到穆斯林国家的大量抵制。这一系列事件导致法国现在是全西方国家里穆斯林最不喜欢的国家。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Charlie_Hebdo&quot;&gt;查理周刊&lt;&#x2F;a&gt;是一份法国讽刺性周刊，以漫画、报道、论战和笑话为特色，经常发表嘲笑天主教，犹太教，伊斯兰教和其他各种团体的内容。在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Charlie_Hebdo_shooting&quot;&gt;2015 年查理周刊恐怖袭击事件&lt;&#x2F;a&gt;袭击前，该刊已经被袭击过几次。该刊主编也被法国警察提供终生保护，他曾说过：“我们必须继续下去，直到伊斯兰教变得像天主教一样平庸”。有很多次该周刊在发表关于伊斯兰的讽刺性漫画系列后，法国关闭了自己在各个穆斯林国家的大使馆，以保护雇员不受到攻击。该主编和保护该主编的警察都在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Charlie_Hebdo_shooting&quot;&gt;2015 年查理周刊恐怖袭击事件&lt;&#x2F;a&gt;中丧生。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;另外摘抄几则该视频下的评论：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;作为一个英国人，我发现自己并不经常同意法国人的观点, 但在不担心被斩首的情况下说出自己想说的话的自由是一项不可剥夺的权利。如果你不能同意这一点，你就不属于西方民主国家。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“很明显，你不必展示伤害一些人的漫画来教导言论自由“。实际上，更明显的是，你不必杀人来向他们表明你不喜欢对你的宗教的嘲笑。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;法国是第一个废除宗教的国家（在法国大革命期间），我敢打赌他们不会仅仅因为宗教宽容而放弃自己的安全。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>关于穆斯林女性为什么要戴头巾的问题</title>
		<published>2022-04-12T23:19:15+08:00</published>
		<updated>2022-04-12T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/muslam-hijabs/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/muslam-hijabs/</id>
		<content type="html">&lt;p&gt;最近在看 Youtube 视频学英语，挺喜欢&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCLXo7UDZvByw2ixzpQCufnA&quot;&gt;Vox&lt;&#x2F;a&gt;的视频的，质量很高，又都有字幕。&lt;&#x2F;p&gt;
&lt;p&gt;今天看了 Vox 的一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLJ8cMiYb3G5dIu76T0o8smkqjHOz1-kUo&quot;&gt;关于穆斯林的秘密的系列&lt;&#x2F;a&gt;，主要是为了消除人们对穆斯林的刻板印象。视频做的挺好的，我从中学到了很多。&lt;&#x2F;p&gt;
&lt;p&gt;当我看到&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DclppILcDcg&amp;amp;list=PLJ8cMiYb3G5dIu76T0o8smkqjHOz1-kUo&amp;amp;index=12&quot;&gt;穆斯林女性戴头巾指南&lt;&#x2F;a&gt;时，感觉这个视频有点不能说服我。因为我自己的生长环境，让我非常抵制集体主义，所以特别排斥这种强制（视频中的人由于生活在美国，所以并不是强制的，所以她们视为是虔诚的象征），但无关紧要的东西。然后看了评论区，发现有两个评论我挺喜欢的，所以就引用一下：&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;inverseagonist-de-ping-lun&quot;&gt;InverseAgonist 的评论&lt;a class=&quot;zola-anchor&quot; href=&quot;#inverseagonist-de-ping-lun&quot; aria-label=&quot;Anchor link for: inverseagonist-de-ping-lun&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;我是正统的犹太人，我所在的社区的已婚妇女基本都会遮住头发（有时戴着假发）。我对此有非常复杂的感觉。首先，我认为歧视或迫害佩戴宗教标识的人绝对是错误的，但我也不会鼓励&#x2F;称赞你。是的，我对戴着十字架，锡克教头巾，佛教念珠，印度教&#x2F;耆那教宾迪，挂在裤子外面的 tzitzit，等等都有同样的感觉。 即使它给人的感觉是个人的，但它从根本上说是部落性的。即使你认为这是解放，它仍然会影响到关于谦虚和性的想法，这些想法被用来压迫其他地方的女性。这个问题有很多层次。我很感激通过引入主流穆斯林妇女谈论头巾来揭开头巾的神秘面纱，但这远非全貌。我们在这里掩盖了一些重要问题。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lai-zi-oldmoviemusic-de-ping-lun&quot;&gt;来自 oldmoviemusic 的评论&lt;a class=&quot;zola-anchor&quot; href=&quot;#lai-zi-oldmoviemusic-de-ping-lun&quot; aria-label=&quot;Anchor link for: lai-zi-oldmoviemusic-de-ping-lun&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;这对视频里的所有女性都是好事，我为她们感到高兴，因为她们为戴头巾而感到自豪，她们完全有权利这样想。但是…. 这个视频基本上让人觉得似乎所有的穆斯林妇女都是这样的，正是这种不诚实和在讨论头巾这样的复杂话题时缺乏细微差别的做法，让人们对 “自由派政治正确“感到厌烦。我也是一个自由主义者，但我们需要正确地批评和赞扬伊斯兰教的好与坏。这是一场思想的战争，我们需要接受伊斯兰教的优点，同时也要诚实地对待它的缺点。每个宗教都会自我改革，而且总是为了更好的发展。现在是伊斯兰教加入这个团体的时候了。&lt;&#x2F;p&gt;
&lt;p&gt;一旦全世界各国的妇女都能像这段视频中的妇女一样感受到–她们可以选择戴头巾或不戴头巾，那么头巾将不再被看作是压迫的象征。这些妇女拥有非常优越的视角和经验，她们不仅可以选择是否戴头巾，还可以选择戴头巾的方式和时间。再说一次，这对她们来说是好事，但在中东许多穆斯林占多数的国家，如果妇女不戴头巾，就会有严重的、可怕的后果，在一些地方，如果她不戴罩袍，也会有严重的后果。&lt;&#x2F;p&gt;
&lt;p&gt;我知道这个系列试图使西方穆斯林人性化，但你必须以一种真实和诚实的态度去做，否则就会让人觉得你在试图说服人们相信一些只与你自己经验有关的东西，而不是试图全面看待这个话题。如果穆斯林和自由主义者对坏事更加开放，人们就会更容易接受穆斯林和伊斯兰教的优点，因为他们会看到世俗的穆斯林正在反对以伊斯兰教的名义进行的压迫和恐怖，而且不幸的是，《古兰经》中确实存在这种情况。&lt;&#x2F;p&gt;
&lt;p&gt;仅仅把头巾描绘成信仰和奉献的象征，对于伊斯兰教目前在全世界的状况以及它对全世界妇女的待遇来说是不现实的。我们需要诚实地对待这个问题–对穆斯林的迫害当然是应受谴责和不道德的，但同时我们也需要进行公平的对话，讨论在穆斯林国家所做的许多事情也是应受谴责和不道德的，而妇女往往是这些行为的接受者。&lt;&#x2F;p&gt;
&lt;p&gt;一个话题变得越神秘，人们对它的怨恨就越多，你就会得到与你所争取的相反的结果–你得到的不是接受，而是恐惧，因为当人们感觉到不诚实时，他们就会害怕被隐藏的东西。给人们提供真相，包括它的好的和坏的，他们会以深思熟虑的态度回应，而不是以不信任的态度回应。&lt;&#x2F;p&gt;
&lt;p&gt;在这里，Vox 要诚实。如果在这次谈话中包括一个真正受到头巾压迫的人，或者一个与那些因不戴头巾而被家庭拒绝的妇女打交道的人，将是对这个话题更复杂的做法。如果你打算把这些视频称为 “穆斯林的秘密生活”，而不包括一些在这个宗教中受到残害的人，那么你就是不诚实的，是在推动一个议程，一个对人们来说很明显的议程，因此不会说服任何人。&lt;&#x2F;p&gt;
&lt;p&gt;用同情心和细微的差别来对待这个话题，你会给大家带来启迪。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>知道该做什么和真正去做之间的差距是巨大的</title>
		<published>2022-04-06T00:00:00+00:00</published>
		<updated>2022-04-06T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/know-vs-do/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/know-vs-do/</id>
		<content type="html">&lt;p&gt;有一位医生曾经被问到：“你工作中最难的部分是什么？”。医生回答：“不是压力或责任，那些都太基本了，最难的是让我的病人按照我要求的去做。“&lt;&#x2F;p&gt;
&lt;p&gt;如果你去看过病，你就会知道，医生有的时候嘱咐我们该吃什么，以及不该吃什么。我们知道医生是对的，这代表我们会严格遵守医嘱吗？不，正常情况下，我们可能只会在前几天有所注意，过不了多久我们又会回到自己以前的生活方式。我们只期待那该死的药能帮我们快捷的解决所有问题。&lt;&#x2F;p&gt;
&lt;p&gt;类似的我们知道不该做事情还有很多，比如抽烟，酗酒，社交网络成瘾，打游戏等等，我们都知道这样做是不对的，但是大多数人真的很难克制去这样做（对我来说是社交网络）。&lt;&#x2F;p&gt;
&lt;p&gt;而该做的事情，比如说多读书，吃健康的食品，保持运动等等，我们也都知道该做这些事情，但是为什么就那么难做到呢？&lt;&#x2F;p&gt;
&lt;p&gt;为什么知道该做什么或不该做什么和真正去做或真正克制自己不去做之间的差距这么的巨大？&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;我的观点是：&lt;strong&gt;我们其实并不真正知道我们该做什么和不该做什么。&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;实际上，我们对这些事情只有一个模糊的概念，我们知道该吃健康的食物，但是我们有多了解这个问题？我们知道不该整天浪费时间刷社交网络，但是有多不该？为什么不该？&lt;&#x2F;p&gt;
&lt;p&gt;但是要真正解决一个问题，&lt;strong&gt;我们必须首先要了解它才行。这不能是只知道一个口号或者概念&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;如何真正了解？我认为&lt;strong&gt;只能通过大量阅读相关的书籍&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;为什么在有选择的情况下，我们应该通过读书去了解相关概念而不是通过阅读文章呢？&lt;&#x2F;p&gt;
&lt;p&gt;要知道，每一本书都是有人坐下来，花了几个月（或几年）的时间组织需要的信息，然后再由一位或者几位专业的图书编辑校对，整理，而我们可以在几个小时内就把所有的这些成果都放在我们的脑海中。&lt;&#x2F;p&gt;
&lt;p&gt;如果一个人有能力能“扯”出一本书的话，那么他肯定比只能“扯”出一篇文章的人做了更多的研究和思考。他会在写书的过程中多次帮我们去搜集各种资料，抽象各种东西，最终才能汇总成一本书。而这本书要出版还需要经过编辑的大量校对，整理，润色，最终才能来到我们的手上。&lt;&#x2F;p&gt;
&lt;p&gt;这位写书的人，一般来说，他已写过大量的文章（而即使是写文章，也需要大量的储备和信息的整理），只有这样，出版社的人才会注意到他，然后他会付出了比写文章多十倍的努力，然后才能慢慢凝结成一本能出版的书。&lt;&#x2F;p&gt;
&lt;p&gt;而我们将受益于他的思考和整理，得以深入了解我们关心的事情的本质。那些不看书的人，就只能凭自己的直觉，经验，然后再夹杂一些别人碎片化的思考来指导自己的想法和行事。&lt;&#x2F;p&gt;
&lt;p&gt;以我自己为例，直到现在，我才敢说自己能稍稍克服刷社交网络的问题。这本&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;books&#x2F;stolen-focus&#x2F;&quot;&gt;被偷走的注意力&lt;&#x2F;a&gt;对我影响巨大。在读了这本书之后，我才意识到，注意力问题已不是个人的问题，这是全世界，整个系统相互作用的结果，个人和社会在这种系统的影响下，已经失去了专注的能力，而这恰恰是我们最需要的能力。如果我没读这本书，我永远不会意识到这个问题有多严重，我们的意志力在面对社交网络时为什么会失败。&lt;&#x2F;p&gt;
&lt;p&gt;当我们真正了解问题的时候，我们才可能真正做出持久的改变。反之如果只是模糊的知道，那我们可能永远都不会有真正的改变。&lt;&#x2F;p&gt;
&lt;p&gt;这就是我的观点。&lt;&#x2F;p&gt;
&lt;p&gt;但是这里其实有一个很大的问题，就是读书。读书是一件很多人都知道自己该去做的事，但是却没有真正去做。按照我的观点，我们只有通过多读书，才能真正的了解读书的意义，然后才可能做到持续的读书。&lt;&#x2F;p&gt;
&lt;p&gt;这就有点悖论了，如何开始呢？&lt;&#x2F;p&gt;
&lt;p&gt;坦白说，这个问题我并不知道如何解决。如果你现在已经真正意识到读书的重要性，并且实际上也在一直读书，那么你真的很幸运。&lt;&#x2F;p&gt;
&lt;p&gt;其他那些只意识到我们应该多读书，但是没有实际这样做的人，我只能建议你尽可能多为自己创造能读书的条件，这样你才可能通过读书而真正的爱上读书。也许是买一些书，也许是买一个电子书设备，也许是查看我整理的&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;books-guide&#x2F;&quot;&gt;阅读指南&lt;&#x2F;a&gt;，或许你会在里面发现自己感兴趣的读物，开始自己的读书之旅。&lt;&#x2F;p&gt;
&lt;p&gt;希望你能如此的幸运而真正的爱上读书，继而通过读书来了解各种问题，最终能真正的去做或者克制自己去做那些重要的事情。&lt;&#x2F;p&gt;
&lt;p&gt;最后分享乔治·R·R·马丁说过的一句话：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个读者在死前活了一千次，但是从不读书的人只活了一次。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>迁移博客和Wiki到 Zola</title>
		<published>2022-04-06T00:00:00+00:00</published>
		<updated>2022-04-06T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/migrate-to-zola/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/migrate-to-zola/</id>
		<content type="html">&lt;p&gt;我在之前建立了一个个人的公开 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.owenyoung.com&#x2F;&quot;&gt;Wiki&lt;&#x2F;a&gt;和 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.owenyoung.com&#x2F;&quot;&gt;Blog&lt;&#x2F;a&gt;，这让我养成了记笔记，多写东西的习惯。但是随着时间的增长，我感到维护 2 个 repo 实在有点麻烦，并且由于 Wiki 和博客都是基于&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;gatsby-cons&#x2F;&quot;&gt;Gatsby 框架&lt;&#x2F;a&gt;的，更新，维护，还有编译都挺花时间的。&lt;&#x2F;p&gt;
&lt;p&gt;总的来说就是太复杂了，而由于我对自己的&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;about-notes&#x2F;&quot;&gt;笔记&#x2F;博客系统&lt;&#x2F;a&gt;是以一生的尺度去设计和维护的，所以我想让它保持简单。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;strong&gt;所以这个博客现在拥有了以下特性：&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;te-xing&quot;&gt;特性&lt;a class=&quot;zola-anchor&quot; href=&quot;#te-xing&quot; aria-label=&quot;Anchor link for: te-xing&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;由&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;tree&#x2F;main&#x2F;bin&quot;&gt;单一的二进制文件&lt;&#x2F;a&gt;驱动（为了更简单，我把那个二进制文件直接放在这个 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&quot;&gt;repo&lt;&#x2F;a&gt; 里了，所以这个博客相当于是自运行的，不依赖任何外部环境）&lt;&#x2F;li&gt;
&lt;li&gt;这个博客实际上是由&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt;驱动的，Zola 是用 Rust 写的，非常快，目前我的博客在 Github Actions 里从开始到部署完成只需要&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;runs&#x2F;5845460900?check_suite_focus=true&quot;&gt;14s&lt;&#x2F;a&gt;，实际构建时间只需要 2s。而之前用 Gatsby 搭建的 Wiki 站点，总共需要&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;wiki&#x2F;runs&#x2F;5684155852?check_suite_focus=true&quot;&gt;4 分钟&lt;&#x2F;a&gt;构建完成, Blog 站点总共要&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;theowenyoung.github.io&#x2F;runs&#x2F;5845524376?check_suite_focus=true&quot;&gt;3m 37s&lt;&#x2F;a&gt;才能完成&lt;&#x2F;li&gt;
&lt;li&gt;所有的样式都在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;blob&#x2F;main&#x2F;static&#x2F;site&#x2F;styles&#x2F;site.css&quot;&gt;一个简单的 CSS 文件里&lt;&#x2F;a&gt;，全是手写的。保持样式文件的简单，有助于后续的持续维护。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;&quot;&gt;同时支持&lt;&#x2F;a&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;&quot;&gt;普通文章&lt;&#x2F;a&gt;，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;categories&#x2F;notes&#x2F;&quot;&gt;笔记&lt;&#x2F;a&gt;，和&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;thoughts&#x2F;&quot;&gt;短想法&lt;&#x2F;a&gt;，而且，维护很简单，所有文件都只是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;blog&#x2F;tree&#x2F;main&#x2F;content&quot;&gt;一个个的 Markdown 文件&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dui-zola-bu-man-yi-de-dian&quot;&gt;对 Zola 不满意的点&lt;a class=&quot;zola-anchor&quot; href=&quot;#dui-zola-bu-man-yi-de-dian&quot; aria-label=&quot;Anchor link for: dui-zola-bu-man-yi-de-dian&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Zola 有一些约束和约定俗成的东西，大多数是比较深思熟虑的限制，我最苦恼的一点就是他不支持把 Markdown 里的相对链接转成 html 的链接。相对链接自动转换这一点的限制其实是合理的，我以前写过&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;gatsby-theme-primer-wiki&#x2F;tree&#x2F;main&#x2F;gatsby-relative-path-to-slug&quot;&gt;Gatsby 的插件&lt;&#x2F;a&gt;去转换相对链接，但是逻辑其实很恶心，因为 markdown 的文件层级和 html 的文件层级其实是不一样的，对 markdown 来说是&lt;code&gt;xxx.md&lt;&#x2F;code&gt;,但是对 HTML 来说是 &lt;code&gt;xxx&#x2F;index.html&lt;&#x2F;code&gt;, 但是有的时候又是一样的,比如&lt;code&gt;xxx&#x2F;index.md&lt;&#x2F;code&gt; 同样是 &lt;code&gt;xxx&#x2F;index.html&lt;&#x2F;code&gt;. 所以我的插件转换需要约定不少东西，挺恶心的。而&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;content&#x2F;linking&#x2F;#internal-links&quot;&gt;Zola 的办法就很简单粗暴&lt;&#x2F;a&gt;，他刻意不帮你转换这些东西，只替换包含特殊符号的链接，比如&lt;code&gt;@&#x2F;xxx.md&lt;&#x2F;code&gt;，它会把这类链接统一替换按照正确的路径替换，这样就容易多了.&lt;&#x2F;p&gt;
&lt;p&gt;但是像这样&lt;code&gt;[xxx](@&#x2F;xxxm.d)&lt;&#x2F;code&gt;写链接的话，本地文件系统的相互链接就不工作了,编辑器不知道&lt;code&gt;@&lt;&#x2F;code&gt;是什么，这很令人苦恼。&lt;&#x2F;p&gt;
&lt;p&gt;我就这个问题在 Zola 的论坛提了&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zola.discourse.group&#x2F;t&#x2F;custom-content-dir-or-support-absolute-internal-link&#x2F;1242&quot;&gt;一个替代办法&lt;&#x2F;a&gt;，主要就是不用&lt;code&gt;@&lt;&#x2F;code&gt;做为特殊符号，直接用&lt;code&gt;&#x2F;content&lt;&#x2F;code&gt;作为特殊符号，这样本地链接就其实是一个合法的内部绝对链接，像这样：&lt;code&gt;[xxx](&#x2F;content&#x2F;xxx.md)&lt;&#x2F;code&gt;，但是 Zola 还没接受我的请求，所以我&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;zola&quot;&gt;改动了 Zola 的代码，改动很少，就几行&lt;&#x2F;a&gt;, 现在我可以用 &lt;code&gt;&#x2F;content&#x2F;xxx.md&lt;&#x2F;code&gt;的形式作为内部链接。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ru-he-bian-ji&quot;&gt;如何编辑&lt;a class=&quot;zola-anchor&quot; href=&quot;#ru-he-bian-ji&quot; aria-label=&quot;Anchor link for: ru-he-bian-ji&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;在编辑方面，我在使用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;&quot;&gt;VSCode&lt;&#x2F;a&gt;配合我开发的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=theowenyoung.foam-lite-vscode&quot;&gt;Markdown 输入插件 Foam Lite&lt;&#x2F;a&gt;来编辑这个博客的所有内容。我更喜欢文本辅助输入工具，而不希望软件修改我的原文数据格式。这让我更有掌控感以及不被运营商锁定。&lt;&#x2F;p&gt;
&lt;p&gt;试过&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsidian.md&#x2F;&quot;&gt;Obsidian&lt;&#x2F;a&gt;几次，很喜欢他的一些实用的功能，但是发现他的性能还是和 VS Code 差很多的。所以还是用回了 VSCode，然后把最需要的 Obsidian 功能：快捷输入内部文档的 Markdown 链接，改写了一个 VSCode 插件&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=theowenyoung.foam-lite-vscode&quot;&gt;Foam Lite&lt;&#x2F;a&gt;解决了。&lt;&#x2F;p&gt;
&lt;p&gt;这个插件目前只拥有 2 个功能，一个是快捷生成内部链接的地址：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;sYmKeKO.gif&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;另一个就是快速从模版生成初始文章。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>不要再碎片化笔记了 - 关于笔记的思考</title>
		<published>2022-03-10T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/about-notes/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/about-notes/</id>
		<content type="html">&lt;p&gt;笔记很重要，一个好的笔记系统应该以一生的尺度去设计和维护，让我们自己受益一生。&lt;&#x2F;p&gt;
&lt;p&gt;所以：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;非运营商锁定很重要，离线很重要，我们不能指望一个公司，或者一个在线服务能服务好一个以一生为尺度的个人系统。&lt;&#x2F;li&gt;
&lt;li&gt;笔记其实很简单，纯文本文件作为笔记完全够用，我们不需要任何运营商绑定的服务，重要的是笔记的内容，而不是形式。我们可以有很多辅助性的工具，但是最终的储存一定是一个简单易读的纯文本文件。进可攻，退可守！&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;所以我的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;wiki&quot;&gt;以一生为尺度设计的笔记系统&lt;&#x2F;a&gt;就是一个纯文本的文件夹，里面保存了我所有能公开的笔记。至于公开笔记的原因，一方面，公开笔记能让我更有动力一直维护下去，另一方面，也许在某时可以给别人某种灵感，这会让我很满足。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;近年来越来越多的人开始用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;258561003&quot;&gt;卢曼卡片盒笔记法&lt;&#x2F;a&gt;来记笔记，大多数人都是倾向于建立大量的笔记，然后再把这些笔记互相链接起来，以形成一个所谓的第二大脑。我的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.owenyoung.com&#x2F;&quot;&gt;笔记系统&lt;&#x2F;a&gt;的也采用了这种形式。现在的链接情况大概是这个样子的：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;blog&#x2F;about-notes&#x2F;.&#x2F;note-cuts.jpg&quot; alt=&quot;note-cuts&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;大概快记了一年吧，笔记条目现在急剧增加，我发现多卡片式的笔记系统开始出现经典的“日记问题”，类似我们以前可能会写很多日记，但是随着时间的增长，这些日记其实已经变成了一个类似&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;archiveprogram.github.com&#x2F;&quot;&gt;Github 北极封存&lt;&#x2F;a&gt;的项目了。由于条目过多，所以很困难去再次检索，翻阅。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于日记方面，现在其实有一个很好的记录形式，就是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;bulletjournal.com&#x2F;&quot;&gt;子弹日记&lt;&#x2F;a&gt; ，清晰明了的格式，只记最重要的东西，以及索引日记。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;笔记多了，即使有“第二大脑”的帮助下，你也会发现，很难通过卡片间找到灵感，因为卡片是在是太多了，仅仅通过卡片间互相链接的形式很容易忘记&#x2F;错过某些过去的卡片。我目前的采用的办法是：归类，而且归的类越少越好。事实证明纯文本很强大，一个纯文本文件可以放进去超级多内容而大小并不会有多少 K。比如说，如果你在一个纯文本文件里面发送&#x2F;放置你的原创推特，假设你平均每天发一条推特，假设你是活到 100 岁，其实这个推特的纯文本文件只有 36500 行，对于一个纯文本文件来说，这并不算太大。 我就用这个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;theowenyoung&#x2F;wiki&#x2F;main&#x2F;thoughts.md&quot;&gt;纯文本文件&lt;&#x2F;a&gt;记录我的短想法。还有个很有名的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;buckket&#x2F;twtxt&quot;&gt;twtxt&lt;&#x2F;a&gt;标准，就是用一个换行符作为分割的 txt 文件写推特。&lt;&#x2F;p&gt;
&lt;p&gt;以下是我目前整理出的大多数人可能会需要的几个纯文本文件笔记类型：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;quotes, 记录一些别人的话，&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;quotes&#x2F;&quot;&gt;收集发人深省的话&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;thoughts, 记录一些自己的话,&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;thoughts&#x2F;&quot;&gt;短想法&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;journal, 日记，可按照不同年份保存，&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;journal-2022&#x2F;&quot;&gt;2022 年的一些记录&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;tools, 记录好用的工具，&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;tools&#x2F;&quot;&gt;最好用的工具集合&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;articles, 记录好文章, &lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;articles&#x2F;&quot;&gt;收集值得阅读的文章&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;sources, 记录常用的内容源， &lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;sources&#x2F;&quot;&gt;探索互联网上高质量的内容&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;answers，记录一些好的答案，&lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;answers&#x2F;&quot;&gt;有意思的问题收集&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;inspires, 记录一些启发灵感的，有意思的东西, &lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;inspires&#x2F;&quot;&gt;收集一些给人灵感的东西&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;tips，记录一些常用的技巧 &lt;a href=&quot;https:&#x2F;&#x2F;www.owenyoung.com&#x2F;tips&#x2F;&quot;&gt;生活技巧&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;以上这些就是我觉得大多数人都需要的一些公共类型的笔记，其他的类型就根据自己的类型来分类了。原则就是尽量少一点类型，这样更容易碰撞灵感和回顾，整理。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>手机可能是人类最有害的发明</title>
		<published>2022-03-10T00:00:00+00:00</published>
		<updated>2022-03-22T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/mobile-may-be-the-worst-tool/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/mobile-may-be-the-worst-tool/</id>
		<content type="html">&lt;p&gt;手机可能是人类最有害的发明，实在是让你太方便被它吸取注意力了。&lt;&#x2F;p&gt;
&lt;p&gt;而且上瘾程度已经不能说这是属于个人责任范围了。从普通人到高级知识分子，大都很难抵挡它的诱惑力。也许这和吸烟一样，需要长达几十年的时间才能让人们意识到它的危害，以至于必须作出限制。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;我在大多数方面都是自由主义，但是对于这件事，我想也许国家是应该出台政策，就像电影分级，吸烟一样，由第三方机构给注意力吸取的网站&#x2F;服务作出分类，然后作出一定限制，比如说限制他们不要用算法，限制他们不要用无限滚动，限制人们每天只能在这个网站上待 30 分钟，然后就强制退出。&lt;&#x2F;p&gt;
&lt;p&gt;一个简单的前期替代办法是：鼓励手机厂商生产只有简单功能的手机，这个手机没有浏览器，只能每小时同步一次信息。为了简化手机厂商的开发难度，我还想了几点：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;该手机被设计为只支持&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gemini.circumlunar.space&#x2F;&quot;&gt;Gemini&lt;&#x2F;a&gt;协议或者类似的协议，这种简单的文本协议，用很少的代码就可以渲染出来，然后还可以配个墨水屏。&lt;&#x2F;li&gt;
&lt;li&gt;该手机可以给电脑传输信息，同样也是每小时一次，为了简化开发，只允许传纯文本消息，给某个邮件地址，一次只能传一个文档，不考虑列表。&lt;&#x2F;li&gt;
&lt;li&gt;有电话功能，短信功能&lt;&#x2F;li&gt;
&lt;li&gt;有每天只能同步 1 次的 RSS 客户端，这个客户端对内容源也有要求，内容源被设计为每天只能推送 1 则信息， 每月可以紧急推送 4 次。甚至 RSS 可以被设计为 web3 的形式，允许内容源做付费订阅。该手机可以生成多个加密钱包地址。系统内置加密钱包 id，且可以随机生成多个。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;你怎么看？&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Gatsby框架的缺点</title>
		<published>2022-03-08T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/gatsby-cons/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/gatsby-cons/</id>
		<content type="html">&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gatsbyjs.com&#x2F;&quot;&gt;Gatsby.js&lt;&#x2F;a&gt;是一个基于 React 生成静态网站的工具链，也称为静态网站生成器(SSG), 旨在让开发人员使用基于 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;reactjs.org&#x2F;&quot;&gt;React&lt;&#x2F;a&gt; 的框架和基于 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;graphql.org&#x2F;&quot;&gt;Gaphql&lt;&#x2F;a&gt; 的数据层去构建快速、安全且功能强大的网站，从而将不同的内容、API 和服务生成一个体验良好的静态网站。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;我第一眼看到它的时候就被它简单的思想和丰富的社区生态给吸引了。总体来讲，他是一切皆 source，source 生成一个 graphql 的 API，然后在 react 组件里按需使用 graphql 的数据以生成对应的页面。&lt;&#x2F;p&gt;
&lt;p&gt;目前我的 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.owenyoung.com&#x2F;&quot;&gt;Wiki&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.owenyoung.com&#x2F;&quot;&gt;Blog&lt;&#x2F;a&gt;, 包括 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.buzzing.cc&#x2F;&quot;&gt;Buzzing&lt;&#x2F;a&gt;里面的所有子攒点, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.trackawesomelist.com&#x2F;&quot;&gt;Track Awesome List&lt;&#x2F;a&gt;，其实都是用 Gatsby 构建的。&lt;&#x2F;p&gt;
&lt;p&gt;随着内容越来越多，以及 Gatsby 的升级，我发现在维护 Gatsby 的时候开始有点不喜欢它了。这主要是由于：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Gatsby 的大多数功能都是通过插件提供，导致项目有大量的第三方依赖（也有很多是官方维护的插件），而 Nodejs 的&lt;code&gt;package-lock.json&lt;&#x2F;code&gt;总是在升级的时候搞错一些版本，让我很抓狂（我不确定这个问题有没有得到解决），对于多依赖项目，我经常需要删掉整个 lock 文件，然后重新生成新的 lock 索引。&lt;&#x2F;li&gt;
&lt;li&gt;大量的第三方插件维护的质量参差不齐，维护不足。这其实很正常，我自己也维护了一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;gatsby-plugin-intl&quot;&gt;国际化翻译的 Gatsby 插件&lt;&#x2F;a&gt;, 但是由于后面我自己都没在用了，所以我就失去了继续维护和更新的动力了，至今还有用户在提 Issue，我只能在 Readme 里面写这个项目已经不在维护了。&lt;&#x2F;li&gt;
&lt;li&gt;Gatsby 目前还不支持&lt;code&gt;.mjs&lt;&#x2F;code&gt;,然而 gatsby 强依赖的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;syntax-tree&#x2F;unist&quot;&gt;unist&lt;&#x2F;a&gt;全生态系统都拥抱了&lt;code&gt;.mjs&lt;&#x2F;code&gt;,所以导致大量的 gatsby 第三方插件只能使用旧版的 unist 生态链。升级的时候会有很多依赖只能依赖旧版本。这导致了很多的混乱。&lt;&#x2F;li&gt;
&lt;li&gt;Gatsby 的底层设计导致多内容处理的性能问题。Gatsby 把所有的内容都加载到 graphql 的内存数据里，这导致了庞大的开销。在内容很多的时候，比如&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.trackawesomelist.com&#x2F;&quot;&gt;Track Awesome List&lt;&#x2F;a&gt;，每次构建需要 40 分钟左右的时间，好在这个网站每天只需要更新 2 次。&lt;&#x2F;li&gt;
&lt;li&gt;Gatsby 虽然思想简单，但是其 API 现在已经变得非常庞大和复杂了，有点类似 Webpack，一个东西只要变得如此复杂，那么后期维护一定会很痛苦。与之相对的是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.11ty.dev&#x2F;&quot;&gt;11ty&lt;&#x2F;a&gt;的 API 就很简单，但是也很强大。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;最后，来体会一下我的项目中 Gatsby 的依赖：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@emotion&#x2F;react&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^11.7.1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@emotion&#x2F;styled&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^11.6.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@mdx-js&#x2F;mdx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.6.22&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@mdx-js&#x2F;react&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.6.22&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@theme-ui&#x2F;prism&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.13.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;date-fns&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^2.28.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;disqus-react&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.1.2&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-core-utils&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^3.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-emotion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^7.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-feed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^4.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-hn&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-image&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^2.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-instagram&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-mdx&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^3.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-react-helmet&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^5.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-sharp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^4.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-theme-ui&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.13.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-twitter&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^4.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-remark-copy-linked-files&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^5.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-remark-images&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^6.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-remark-smartypants&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^5.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-theme-i18n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^3.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-theme-ui-preset&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^3.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-theme-ui-timeline-preset&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^3.0.1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-transformer-json&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^4.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-transformer-sharp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^4.4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;html-to-text&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^8.1.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mdx-utils&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.2.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;path-browserify&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.0.1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react-helmet&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^6.1.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react-player&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^2.9.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react-process-string&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.2.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react-twemoji&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.3.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react-ultimate-pagination&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^1.2.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;remark-slug&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^5.1.2&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;theme-ui&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.13.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;url-join&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^4.0.1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Soylent News 的文章提交指南[翻译]</title>
		<published>2022-03-08T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/soylentnews-guides/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/soylentnews-guides/</id>
		<content type="html">&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;soylentnews.org&#x2F;&quot;&gt;Soylent News&lt;&#x2F;a&gt; 是一个由志愿者维护的关于新闻和讨论的社区，重点关注网络上对每个人都很重要的文章或者书籍。允许注册或者匿名讨论。该社区的目标是成为一个关于技术，艺术，科学和政治良性讨论平台。&lt;&#x2F;p&gt;
&lt;p&gt;通常我看到一个感兴趣的社区的时候，我就会去阅读一下它的社区规范，一般来说，氛围良好的社区都会有一个非常出色的社区指南，我之前也翻译过一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.owenyoung.com&#x2F;zh&#x2F;posts&#x2F;share-a-forum-rule&#x2F;&quot;&gt;somethingawful.com 的论坛协议&lt;&#x2F;a&gt; , 今天又看到&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.soylentnews.org&#x2F;wiki&#x2F;Submission_guidelines&quot;&gt;Soylent News 的社区提交规范&lt;&#x2F;a&gt;, 很喜欢他们的社区规范，所以想简单翻译一下。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;ti-jiao-zhi-nan&quot;&gt;提交指南&lt;a class=&quot;zola-anchor&quot; href=&quot;#ti-jiao-zhi-nan&quot; aria-label=&quot;Anchor link for: ti-jiao-zhi-nan&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;标题和摘要都中保持中立和事实&lt;&#x2F;strong&gt;，最好等到文章发布后再贴上链接，如有必要，请在摘要末尾明确标记为意见。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;提供原创内容&lt;&#x2F;strong&gt;，不要复制&#x2F;粘贴其他人的作品。&lt;&#x2F;li&gt;
&lt;li&gt;**如果可能的话，避免付费文章。**如果必须使用付费墙文章，请将其标记为：[付费墙]。对于在加载文章之前显示广告的网站也是如此。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;尽可能使用主文章的链接&lt;&#x2F;strong&gt;，如果某篇文章引用了原创作品，则应该链接到原始作品而不是该文章，除非文章提供了新的相关信息。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;如果可能，至少使用两个来源网页的链接&lt;&#x2F;strong&gt;。这为读者提供了选择，并有助于防止另一个网站的中断或页面被删除。&lt;&#x2F;li&gt;
&lt;li&gt;对于有争议的问题，请使用来自具有相反观点的文章网页链接。&lt;strong&gt;如果一只狼说他想吃羊作为晚餐，不要问另一只狼这是不是一个好主意，而是问一只羊。&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;如果链接到的其中一篇文章中包含了重要引用链接，则还应包含该引用的链接&lt;&#x2F;strong&gt;。一些新闻网站链接到研究摘要，它们是主要引用。&lt;&#x2F;li&gt;
&lt;li&gt;如果您要链接的新文章引用了较旧的文章，您也可以链接到它们以提供背景或引用。&lt;&#x2F;li&gt;
&lt;li&gt;解释大多数事物的首字母缩略词，第一次使用它时，请将其拼写出来。然后在后续使用时，使用首字母缩略词。我们的目标是成为一个全球网站，美国联邦航空局或英国 OfCom 等公司对这些国家以外的人来说可能并不了解。&lt;&#x2F;li&gt;
&lt;li&gt;维基百科链接是背景信息和统计数据的良好来源。&lt;&#x2F;li&gt;
&lt;li&gt;检查你的链接是否是最新的，没有什么比警告斯诺克 5 年前反驳的事情更糟糕的了。&lt;&#x2F;li&gt;
&lt;li&gt;引用一个或更少的句子时，请使用引号。当引用多个句子时，请使用块引用，因为这会使文本更加突出。&lt;&#x2F;li&gt;
&lt;li&gt;在提交之前，请仔细检查帖子预览，测试所有链接是否有效。编辑需要编辑的内容越少，您的提交获得批准的机会就越大。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;huan-you-yi-xie-shi-qing-xu-yao-bi-mian&quot;&gt;还有一些事情需要避免&lt;a class=&quot;zola-anchor&quot; href=&quot;#huan-you-yi-xie-shi-qing-xu-yao-bi-mian&quot; aria-label=&quot;Anchor link for: huan-you-yi-xie-shi-qing-xu-yao-bi-mian&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;不要抱怨你的提交被拒绝。随着网站的发展，更多的人会提交相同的帖子。我们正在尝试在系统中纳入“拒绝原因“的机制。&lt;&#x2F;li&gt;
&lt;li&gt;避免未经授权的复制。不要从其他类似的网站复制&#x2F;粘贴。这将导致您提交的任何其他帖子被忽略，因为编辑和审核你的帖子和来源需要的时间会增加。&lt;&#x2F;li&gt;
&lt;li&gt;虽然我们鼓励全球社区，但网站的语言是英语。避免链接到非英语来源，除非您还可以提供指向高质量英语翻译的链接。
不要使用“诱导链接“，即包含名人姓名或故意误导主题以诱使人们从搜索引擎点击的做法。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;nei-rong&quot;&gt;内容&lt;a class=&quot;zola-anchor&quot; href=&quot;#nei-rong&quot; aria-label=&quot;Anchor link for: nei-rong&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;我们的目标是大约 70%的技术和科学文章，其余的是我们社区普遍感兴趣的内容。具有技术主题并且独特的文章很有可能被发表，而一些晦涩难懂且对我们社区吸引力有限的文章不太可能成为头条。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lian-jie&quot;&gt;链接&lt;a class=&quot;zola-anchor&quot; href=&quot;#lian-jie&quot; aria-label=&quot;Anchor link for: lian-jie&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;在提交中使用链接有一些限制。不遵守这些限制可能会导致提交被拒绝，或者更常见的是，编辑以更正或删除违规链接。限制是：&lt;&#x2F;p&gt;
&lt;p&gt;提交时，您可以使用您的用户名或匿名发布。联系人电子邮件地址字段可以留空，但如果使用，则该链接应指向您的用户页面，个人电子邮件地址或个人（即非商业）网站。
提交内容中的链接不应指向与政治竞选活动相关的网站、与色情或其他色情项目相关的网站、被认为不适合工作场所的网站（NSFW）或商业网站，除非该网站提交的主题。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>记者的对抗性提问 - 翻译一段美联社记者提问美国国务院发言人的片段</title>
		<published>2022-02-22T00:00:00+00:00</published>
		<updated>2022-02-22T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/ap-question/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/ap-question/</id>
		<content type="html">&lt;p&gt;为什么拥有一个强大的对抗性媒体来调查政府的说法并验证它们是否得到证据支持是如此重要？&lt;&#x2F;p&gt;
&lt;p&gt;在这篇文章&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.currentaffairs.org&#x2F;2022&#x2F;02&#x2F;the-urgent-need-for-adversarial-journalism&#x2F;&quot;&gt;《我们迫切需要对抗性的新闻报道》&lt;&#x2F;a&gt;中，作者认为不仅是俄罗斯政府，美国政府也有撒谎的前科和动机。所以媒体不应只是简单的转述政府的说法，而应该更加审慎的验证政府的说法。也就是我们需要更多的对抗性媒体。比如针对最近美国政府指控俄罗斯将要入侵乌克兰，&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;我想简单的翻译下文章中提到的美联社记者马特对美国国务院发言人的提问，我觉得这样的提问非常的精彩，值得我们深思。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mtracey&#x2F;status&#x2F;1489376549375823872?s=20&amp;amp;t=cBHcMxmTWQ8Val1bmknqZw&quot;&gt;提问视频在这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;美联社的马特-李(Matt Lee)对国务院发言人内德-普莱斯(Ned Price)进行了无情的拷问，因为政府指控俄罗斯正在计划一次 “虚假指控“行动，俄罗斯将精心策划一次由乌克兰军队发动的假袭击，以此作为入侵乌克兰的借口。这份提问记录值得详细阅读，因为在其中我们可以看到关于记者应该如何对待政府叙述的大师级课程：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社: 你曾指控俄罗斯 “可能 “会这样做，他们真的做了吗？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：马特，我们所知道的就是我刚才所说的，俄罗斯已经参与了这项活动。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：稍等一下，什么活动？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：显然，这不是我们第一次公开这些报告了。你会记得，就在几周前…&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：对不起，公开了什么报告？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：如果你能让我说完，我会告诉你我们公开了什么报告。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：好的。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：我们几周前告诉你，我们有信息表明，俄罗斯也已经预先部署了一批特工人员，在乌克兰东部进行虚假的行动。所以，马特，对于你的问题，这是俄罗斯已经采取的行动。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：这是&lt;strong&gt;你说的他们已经采取的行动，但你没有出示任何证据来证实这一点。&lt;&#x2F;strong&gt; 证据是什么？演员？这是真的吗？你有什么证据来支持有一些宣传片正在制作的说法？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：马特，这是由美国政府已知的信息得出的，我们已经解密的情报信息。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：好吧，那它在哪里？这些信息在哪里？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：这是我们已经解密的情报信息。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：那么，它在哪里？解密的信息在哪里？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：我刚刚说过了。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：不，你只是提出了一系列的指控…&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：你想让我们打印出来吗？因为你会看到这份简报的记录，你可以自己打印出来。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：这不是证据，内德，那是你说的。很抱歉，这不是证据。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：你想要什么，马特？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：我想看到一些证据，你能证明俄罗斯人在做这件事。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：马特，你一直在这一行（你懂的，我们不会公布情报来源和方法的）&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：奈德，我在这一行已经很久了。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：既然你已经做了很长时间了,你懂的，当我们解密情报信息时，我们不会公开情报来源，我们这样做是为了保护信息来源和方法。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：是的，我记得所谓的伊拉克大规模杀伤性武器，我还记得 “喀布尔不会沦陷”。我记得很多事情，那么，除了你在这里说之外，哪里能看到解密的信息？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：马特，我很抱歉你不喜欢这种形式。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：不是形式问题! 是内容!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：我很抱歉你不喜欢这个内容。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：不是我 “不喜欢 “它…&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：我很抱歉你怀疑美国政府掌握的信息。我能告诉你的是，这是我们已经获取的信息。我们向你们提供这些信息有几个原因：一是试图阻止俄罗斯人继续进行这种活动，二是加入我们无法做到这一点，俄罗斯人真的继续这样做了，那么我们要清楚地表明，这一直是俄罗斯方面试图编造的一个借口。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：是的。但除了你所说的，你没有任何证据来支持它。你说’我们有消息说俄罗斯人可能会这样做’。但你不会告诉我们这些信息是什么，而当你被问及…&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：这就是威慑背后的想法，马特。我们希望俄罗斯人不要继续行动。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：当你被问及信息是什么时，你说’我刚给你的’。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：你似乎不明白威慑的概念。如果俄罗斯人不继续行动，这并不当然表明他们从来没有这样的计划。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美联社：但这是无法证实的！我的天！我的天！我的天！我的天！我的天！我的天 我的天啊！你有什么证据证明他们从来没有计划这么做？你有什么证据表明，俄罗斯人甚至在计划这个？我不是说他们没有，我是说你出来后希望我们相信它，却没有拿出一丝证据证明它是真的。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;美国国务院发言人：如果你怀疑美国政府、英国政府和其他政府的可信度，并想从俄罗斯人发布的信息中找到安慰，那是你的事。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>我从 Hacker News 中学到了什么？</title>
		<published>2022-02-20T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/hackernews/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/hackernews/</id>
		<content type="html">&lt;p&gt;昨天看到 Hacker News 的创始人 Paul Graham 在 2009 年写的一篇文章&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;www.paulgraham.com&#x2F;hackernews.html&quot;&gt;《我从 Hacker News 中学到了什么》&lt;&#x2F;a&gt;, 作者提到：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;随着 Hacker News 变得越来越大，占用的时间比我预期的要多，但我并不后悔，因为我从工作中学到了很多东西。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;就挺感慨的，一方面是我亲自做了一遍 HN 的中文翻译，在整个过程中学到了很多，另一方面也让我回想起大学期间做的一个社区，对我的之后的种种影响。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;如果有机会的话，我觉得每个人都应该尽可能的去亲自参与创造某个能有其他人一起创造信息的社区，比如成立一个小组，一个论坛，一个社群等等，线下的可能更好。和人交流，能碰撞出我更多的想法，以及让我知道更大的世界，更多元的价值观。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.buzzing.cc&quot;&gt;hacker news 的中文翻译&lt;&#x2F;a&gt;是一个非常普通的想法，每年可能都有人声称自己做了一个 HN 的中文版。因为 HN 上不仅文章质量普遍优质，而且最重要的是： HN 的 API 是业界最友好的，所有人都可以用来练手，做一个 HN 的 XX 版，比如各种平台的客户端，各种语言的实现，rss 服务，email 订阅，评论通知，大数据分析，newsletter 等等，不胜枚举。由于我的英文水平并不能像母语一样让我能快速找到感兴趣的东西（后来发现其实不少看起来英文很好的人，也有类似的体验），所以如果我想阅读 HN 的话，我可能有 2 个选择：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;抱着锻炼自己英语的想法逼迫自己不太流利的浏览 HN&lt;&#x2F;li&gt;
&lt;li&gt;使用浏览器自带的翻译功能，浏览 HN&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;这两个阶段我都经历过。我希望你不要经历，因为每个阶段都可能使你错过 HN，错过一个很优质的信息源。&lt;&#x2F;p&gt;
&lt;p&gt;第一个阶段，我只能坚持几天，然后就会本能的优先去看其他中文信息，慢慢的其实就没在看 HN 了。这在我的推特账号上尤其明显，我注册了 2 个推特号，一个是英文号&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TheOwenYoung&quot;&gt;@TheOwenYoung&lt;&#x2F;a&gt;,一个是中文号&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;OwenYoungZh&quot;&gt;@OwenYoungZh&lt;&#x2F;a&gt;，本来是先开英文号的，专门关注的都是些英文博主，但是后面实在受不了了，说那就再开个中文号，尽量少关注人，只发一些东西。后来的故事就是，英文号上的很少，主力变成了中文号。唉，人就是离不开舒适圈，所以我们最好不要给自己创造舒适圈，比如在浏览器上设置很多社交网络的快捷书签；新 tab 页放很多快捷入口；手机上下载很多好用的应用；如果想克制自己，就最好只下必要应用，优先用网页版，或者像我现在做的，把 iPhone13 当成测试机，用一台好几年前的 Pixel 3a，又卡，掉电还快，但是用起来其实完全没问题，然后我又重新开始用 Kindle，只能一个操作，就是下一页，这样就能节省很多时间来看书了。&lt;&#x2F;p&gt;
&lt;p&gt;第二个阶段，我发现浏览器自带的翻译功能并不是太好用（去年我开始做 hn 中文版的时候更不好用，现在其实好了很多），比如有一些网页它会失败，要么就是要重试，然后排版也不太好看，我更希望的是有些区域不要翻译，只翻译标题之类的，但是浏览器会全部翻译，就不太好浏览。而作为一个要长期阅读的地方，体验还是挺重要的。&lt;&#x2F;p&gt;
&lt;p&gt;正好去年那会儿，刚做完&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt;, 想利用 Actionsflow 做点什么，所以说那就做一个 HN 的中文翻译吧，这很适合工作流去处理，处理完之后生成一个静态网页，就算没人用，我自己也可以天天用，做好之后也不用维护，就一直在那。于是就开干，没想到做到后面发现还可以顺便做点别的我感兴趣的英文内容翻译，比如&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;reddit.buzzing.cc&quot;&gt;Reddit 的美股讨论&lt;&#x2F;a&gt;，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;news.buzzing.cc&quot;&gt;国外的权威媒体报道&lt;&#x2F;a&gt;，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ph.buzzing.cc&quot;&gt;ProductHunt&lt;&#x2F;a&gt;等等，最后就汇总成了一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.buzzing.cc&quot;&gt;Buzzing&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Buzzing 运行了一年之后，发现之前的设计有不少欠考虑的地方，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt;也有点太重了，尤其是看了一年 HN 的帖子后，觉得 Actionsflow 的设计简直就是一坨屎，又臭又长。这个时候&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;OwenYoungZh&#x2F;status&#x2F;1478928692781137925&quot;&gt;才发现 Deno 是最适合做工作流的运行时&lt;&#x2F;a&gt;，Deno 的依赖只需要 URL，天生适合脚本。这样就可以和&lt;code&gt;package.json&lt;&#x2F;code&gt;,&lt;code&gt;package-lock.json&lt;&#x2F;code&gt;,&lt;code&gt;node_modules&lt;&#x2F;code&gt;地狱说拜拜了，而且我的工作流也不用再依赖 Docker 和&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nektos&#x2F;act&quot;&gt;act&lt;&#x2F;a&gt;了，于是过了 10 多天之后，我开始着手做了一个史上最快兑现的 「如果我有时间，我一定要做 XXX 」的项目：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;OwenYoungZh&#x2F;status&#x2F;1485381401327267840&quot;&gt;Denoflow&lt;&#x2F;a&gt;,用来做我的低代码 IFTTT 或者说 Zapier，用流行一点的话说，这是配置即代码服务(Configure as Code)。&lt;&#x2F;p&gt;
&lt;p&gt;这一次，产生了一些变化，在泡了一年自己做的 HN 中文版之后：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;首先我没有像 Actionsflow 一样设计一个浮夸的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;&quot;&gt;Landing 页&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;其次我没有用自己蹩脚的英语凑成一个看起来功能很丰富，维护人员很多，很正规的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;reference&#x2F;&quot;&gt;一个文档网站&lt;&#x2F;a&gt;。我只在项目的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denoflow&#x2F;denoflow&quot;&gt;Readme 文件&lt;&#x2F;a&gt;里写了一个我自认为很诚恳的说明，在一页的文本里说清楚这个项目的用途，和看一个示例就能明白的使用方法，没有多余的营销话语，把时间真正花在工具本身，利用省下的时间做了一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;playground.owenyoung.com&#x2F;&quot;&gt;在线 PlayGround&lt;&#x2F;a&gt;，运行在我的廉价 VPS 上。&lt;&#x2F;li&gt;
&lt;li&gt;没考虑买一个域名，尽管&lt;code&gt;denoflow.com&lt;&#x2F;code&gt;域名还在。直接放在我的个人子域&lt;code&gt;playground.owenyoung.com&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;版本号的克制，对于刚推出的项目，我使用&lt;code&gt;0.0.x&lt;&#x2F;code&gt;，而不是像 Actionsflow 一样，一上来就是&lt;code&gt;1.0.0&lt;&#x2F;code&gt;。而后来的证明，&lt;code&gt;0.0.x&lt;&#x2F;code&gt;是最适合这个项目的，因为在后来的使用中，发现了不少的致命 bug&lt;&#x2F;li&gt;
&lt;li&gt;在文档的显眼处声明：&lt;code&gt;项目仍处于非常早期的阶段，谨慎使用!&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;仔细思考了项目的 License,选择了 Apache2.0&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;做完之后，又花了 2 个小时，用 Denoflow 做了&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;showhn.buzzing.cc&#x2F;&quot;&gt;Show HN&lt;&#x2F;a&gt;,&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;askhn.buzzing.cc&#x2F;&quot;&gt;Ask HN&lt;&#x2F;a&gt;,&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hackernews.buzzing.cc&#x2F;&quot;&gt;HN 首页&lt;&#x2F;a&gt;,&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;besthn.buzzing.cc&quot;&gt;Best HN&lt;&#x2F;a&gt;，这里可以和之前的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.buzzing.cc&quot;&gt;HN 热门&lt;&#x2F;a&gt;对比下，没有追踪，没有 JS 代码，只是使用一个舒服的背景色，使用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbohdan&#x2F;classless-css&quot;&gt;class less 原则&lt;&#x2F;a&gt;，同时生成一个 RSS。没有使用任何框架，就几句简单的 deno 代码即可生成。和之前的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.buzzing.cc&quot;&gt;HN 热门&lt;&#x2F;a&gt;相比，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.buzzing.cc&quot;&gt;HN 热门&lt;&#x2F;a&gt;在一个屏幕里只能显示出 2 篇文章，而现在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hackernews.buzzing.cc&#x2F;&quot;&gt;HN 首页&lt;&#x2F;a&gt;可以放 20 多篇，效率直接提升 10 倍啊有木有。&lt;&#x2F;p&gt;
&lt;p&gt;很快，我发现按照这样布局的话，阅读效率高了太多了，已有的这些时间流，已经不够我看了，所以索性单独为我自己生成一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;myfeed.owenyoung.com&#x2F;&quot;&gt;HN 时间流&lt;&#x2F;a&gt;，里面包含了 hn 上前 100 位用户提交的任何帖子。&lt;&#x2F;p&gt;
&lt;p&gt;几天之后我就发现，之前只看 HN 的热门帖子损失有多大，HN 上有太多优秀的内容没有被顶上去了。热门真的很随机，所以我们也要万分警惕大公司的算法机制。基于此，我又做了一个变化，直接抓取 HN 上最新的提交（我去掉了 Ask HN 的内容，因为 Ask HN 的质量相对较差，并且我还有专门的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ask.buzzing.cc&quot;&gt;Ask HN&lt;&#x2F;a&gt;可以回头再看）。那么现在专属于我的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;myfeed.owenyoung.com&#x2F;&quot;&gt;HN 时间流&lt;&#x2F;a&gt;就包括了 HN 上所有最新的文章了。即使是全部文章，由于是母语阅读，我还是能快速读完这些标题，找到感兴趣的内容，还可能留下我的 2 cents. 把之前关注了很久的不少优质英文 RSS 源，也利于&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denoflow&#x2F;denoflow&quot;&gt;Denoflow&lt;&#x2F;a&gt;生成了一个专属于我的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;myrss.owenyoung.com&#x2F;&quot;&gt;RSS 翻译流&lt;&#x2F;a&gt;. 这样下来我的空余时间就可以住要花在阅读长文章，而不是刷推特这样更短的文章。我们都知道推特其实无法代替长文章，就像长文章也无法代替读书一样。&lt;&#x2F;p&gt;
&lt;p&gt;如果有人看到这里的话，那你一定会觉得 HN 有毒，而我已经上瘾了。其实没错，目前阶段是这样。&lt;&#x2F;p&gt;
&lt;p&gt;好在 HN 上的人也经常推荐图书，比如以下两个链接就是 HN 的用户制作的 HN 评论大数据最推荐的书（HN 的评论比图书网站，或者第三方网站更可信）：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hacker-recommended-books.vercel.app&#x2F;&quot;&gt;汇总了 hacker news 上评论里提到的书籍的排名&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hackernewsbooks.com&#x2F;top-books-on-hacker-news&quot;&gt;又一个 hacker news 提到的图书周报&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;比如我读了上面推荐的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;d.buzzing.cc&#x2F;post&#x2F;1&quot;&gt;《深度工作》&lt;&#x2F;a&gt;，作者提到：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;“如果在你全部的清醒时间，都能给自己的大脑找到有意义的事情去做，而不是放任自己在迷糊的状态下漫无目的地浏览几个小时网页，那么在一天结束时，你会觉得更加充实，第二天开始时更加轻松。
– 卡尔·纽波特《深度工作》&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;从我沉迷 HN 的例子里就能看出，网络已经剥夺了我保持专注和沉思的能力，但是真正值得探索和学习的知识都需要我拥有这种能力。如果我没有在某一个特定时段给自己安排任务，那么这些网站总是会更有诱惑力。所以如果我想抵御社交网络对我时间和精力的诱惑，那么必须要给大脑找一些高质量的替代活动，所以我基于开源 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;lemmy.ml&#x2F;&quot;&gt;Lemmy&lt;&#x2F;a&gt; 搭建了一个类似 Reddit 的社区，叫&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;d.buzzing.cc&#x2F;&quot;&gt;&lt;strong&gt;如何度过每一天&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;,希望能在社区里分享有意义的事，不虚度光阴的事，可以是阅读某本书，学习某项技能，看某部纪录片等等等等。社区有投票的功能，某项活动被投票的次数越多，说明认为这项活动有意义的更多。&lt;&#x2F;p&gt;
&lt;p&gt;目前其实就只有少数几个用户在用，网站依然是部署在我的一个 廉价 VPS 上，没有盈利的打算，目前加载也有点慢，但是够用。&lt;&#x2F;p&gt;
&lt;p&gt;以上是我在 Hacker News 上学到的一些东西。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>2021年读书笔记</title>
		<published>2021-12-31T00:00:00+00:00</published>
		<updated>2022-03-25T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/books-2021/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/books-2021/</id>
		<content type="html">&lt;p&gt;2021 年的读书笔记，没有做更详细的整理，所以就一并列的这里了。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;content&#x2F;books&#x2F;_index.md&quot;&gt;点击查看最新读书笔记&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
那不勒斯四部曲，埃莱娜费兰特，✨✨✨✨✨，看完电视剧看的书，小镇做题家最感同身受的一本书。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
动物农场英文版，乔治奥威尔，✨✨✨✨✨，适合初级阶段的英语学习者阅读&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
第二性，波伏娃，好吧，这个看了几章有点看不下去，这种偏哲学的书目前阶段有点不适合我，太难读下去了，读一会儿就犯困，只能先弃，再过几年再读。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
基督山伯爵，大仲马，✨✨✨✨✨，神作，人生必看，情节设计太精彩了，不知道有没有类似的读物，还想再读类似的。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
三个火枪手，大仲马，✨✨✨，看完基督山伯爵之后，感觉这本就一般般了，直到看完之后也没啥大惊喜，果然基督山伯爵是巅峰。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
包法利夫人，福楼拜，✨✨✨✨，经典的力量就是过多少年之后，书里探讨的问题依然存在。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
失踪的人，卡夫卡，✨✨✨，没咋看懂，本来想看完全集，但是有点看不下去，以后再说吧&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
少数派报告，菲利普迪克，✨✨✨✨✨，神作，50 年前作者在思考和探索的宇宙，人类，智能的问题，以及情节的设计，都太牛了，人生必读。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
堂吉诃德，塞万提斯,✨✨✨✨ “《堂吉诃德》是一个令人伤感的故事，它越是令人发笑，则越使人感到难过。这位英雄是主持正义的，制伏坏人是他的唯一宗旨。正是那些美德使他发了疯。” – 乔治·戈登·拜伦&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
罪与罚，陀思妥耶夫斯基，看了两章，暂时弃了，主要是还是对漫长的心理活动没有耐心。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
快思慢想，丹尼爾·卡尼曼， ✨✨✨✨，懂了很多道理，但是还是不怎么懂在生活中应该怎么做&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
银河帝国，阿西莫夫，✨✨✨✨✨，神作，由于最近在热播《基地》所有找来书看看，看完了 3 本，还在继续。
&lt;ul&gt;
&lt;li&gt;更新看完了 7 本了，基地 7 部曲，后面的是讲更早期的机器人和第一帝国的建立，感觉有点读不下去了，太长了！暂时弃坑&lt;&#x2F;li&gt;
&lt;li&gt;前 7 部必看！神作&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
永恒的终结，阿西莫夫，✨✨✨✨，不是很长，大概 3 个小时就能看完。反转确实很多！总体上这种时间旅行是因果论或者说是有点宿命论，但是其中又有人的自由意志对后续时空对影响，没有涉及平行世界，对时间旅行感兴趣的必读！&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
美丽新世界，阿道司，✨✨✨✨✨，竟然直到今天才看，非常非常有警示意义的设定，无知的快乐还是清醒的痛苦？ 有点不解的就是福帝竟然放任一个外国人在自己地盘里得到那么大的关注？福帝好的有点不像是独裁者了。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
沙丘，弗兰克·赫伯特，✨✨✨✨，看了电影&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
深度工作，卡尔·纽波特，✨✨✨✨✨，正在看，就目前来说，非常契合我自己的想法，人需要长时间的专注才能产出东西。像是开放式办公室就是深度工作的典型反例，我至今不知道为什么大多数公司都要这样干。尤其是国内，更不适合这样干，每次周围有任何响动都会打扰到你。
&lt;ul&gt;
&lt;li&gt;其实每次读类似的书之后的一小段时间都会比较亢奋，也比较上进，但是随后可能就不再能坚持，所以我需要找到能让自己坚持下去的方法。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
意志力，关于专注、自控与效率的心理学，罗伊•鲍迈斯特，✨✨✨✨，强调了意志力，自制力，自控能力对于人生的重要性。批判了目前的自尊文化，作者认为现在的孩子普通自尊都很高，但是自控力其实很差，我们应该从小开始把培养孩子的自制力当成第一件事。用一致，即时的奖罚机制来训练孩子。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
枪炮，病菌与钢铁，人类社会的命运，贾雷德·戴蒙德，✨✨✨✨，快速浏览的，不算看完。主要试图回答人类社会各大洲的发展为何不同。
&lt;ol&gt;
&lt;li&gt;各大陆民族长期历史之间的显著差异，不是源自这些民族本身的天生差异，而是源自他们环境的差异
&lt;ol&gt;
&lt;li&gt;第一组差异是各大陆在可以用作驯化的起始物种的野生动植物品种方面的差异&lt;&#x2F;li&gt;
&lt;li&gt;第二组因素就是那些影响传播和迁移速度的因素，而这种速度在大陆与大陆之间差异很大。在欧亚大陆速度最快，这是由于它的东西向主轴线和它的相对而言不太大的生态与地理障碍。&lt;&#x2F;li&gt;
&lt;li&gt;与影响大陆内部传播的这些因素有关的，是第三组影响大陆之间传播的因素，这些因素也可能有助于积累一批本地的驯化动植物和技术。大陆与大陆之间传播的难易程度是不同的，因为某些大陆比另一些大陆更为孤立&lt;&#x2F;li&gt;
&lt;li&gt;第四组也是最后一组因素是各大陆之间在面积和人口总数方面的差异。更大的面积或更多的人口意味着更多的潜在发明者，更多的互相竞争的社会，更多的可以采用的发明创造——以及更大的采用和保有发明创造的压力，因为任何社会如果不这样做就往往会被竞争对手所淘汰。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;中国在地理上的四通八达最后却成了一个不利条件，某个专制君主的一个决定就能使改革创新半途而废，而且不止一次地这样做了。相比之下，欧洲在地理上的分割形成了几十个或几百个独立的、相互竞争的小国和发明创造的中心。如果某个国家没有去追求某种改革创新，另一个国家会去那样做的，从而迫使邻国也这样去做，否则就会被征服或在经济上处于落后地位。欧洲的地理障碍足以妨碍政治上的统一，但还不足以使技术和思想的传播停止下来。欧洲还从来没有哪一个专制君王能够像在中国那样切断整个欧洲的创造源泉&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
一课经济学，亨利•黑兹利特，✨✨✨✨，古典自由主义经济的倡导者。作者认为政府真正该做的事，应该是建立并实施一套法律体系，禁止暴力和欺诈，鼓励并维护自由市场。其他的事情一概不要做，包括福利制度，社保制度等等。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
人类群星闪耀时，茨维格，✨✨✨✨，挑了自己感兴趣的几个故事看了下，文笔很优美，主要介绍了一些个人英雄？&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
哲学的故事，威尔杜兰特，✨✨✨✨✨，特别好的哲学入门书，还在看。 可能是读书太少的缘故，特别中意这类总结类书籍，可能没耐心或者是没能力读完原著，特别希望有饱学之士能总结，归纳，介绍各种书籍，然后有感兴趣的再深入阅读。这本书是看完的第一本哲学类著作。看完之后才能对西方哲学史有大概的了解，才不至于别人说 xxx 完全没概念的状态。我是在罗翔的那本《圆圈正义》里看到这本的，推荐入门的人读一下。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
卡拉马佐夫兄弟，陀思妥耶夫斯基，✨✨✨，实在读不下去啊。。为啥微信评分高达 9.1，我太菜了，迄今为止没读下去任何一本俄罗斯书。。谁能救救我。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
月亮与六便士，毛姆，✨✨✨✨✨，不得不说，毛姆的文笔，实在是太好了，一个好的作家就应该写出一种让人能一直想读下去，同时又不觉得又臭又长的本领，毛姆简直就是集大成者。之前在《一本小书》看过赵立新演绎的《月亮与六便士》戏剧，演的很好！所以一直想读原著，读了之后果然不后悔。
&lt;ul&gt;
&lt;li&gt;在对待爱情这个问题上，女人跟男人最大的不同就是，女人是每时每刻都陷在恋爱的情绪里不可自拔，而男人则是有空了才会去考虑它。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
面纱，毛姆，✨✨✨✨✨，读完月亮与六便士后，马上就想读下一本毛姆的书，选了这本看过电影版《面纱》的原著。在读中。同样，文笔依然非常吸引人读下去。
&lt;ul&gt;
&lt;li&gt;已读完。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>自由职业者如何度过每一天？</title>
		<published>2021-12-31T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/how-to-spend-everyday/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/how-to-spend-everyday/</id>
		<content type="html">&lt;p&gt;自由职业的好处是时间变多，不用通勤，减少了很多不必要的社交，随心所欲的做自己的事情，但是确实要提升自我管理能力，不得不说，我走了很多弯路。其中最现实的问题就是：&lt;strong&gt;如何为碎片化的时间&#x2F;吃饭时间&#x2F;不想工作的时间找到源源不断的事做&lt;&#x2F;strong&gt;，我把这类时间统称为放松时间。&lt;&#x2F;p&gt;
&lt;p&gt;放松时间做的事情对一个人的幸福感至关重要，你在放松时间里做的事情越有意义，自由职业的幸福感就越高。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;tai-chang-bu-kan-ban&quot;&gt;太长不看版&lt;a class=&quot;zola-anchor&quot; href=&quot;#tai-chang-bu-kan-ban&quot; aria-label=&quot;Anchor link for: tai-chang-bu-kan-ban&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;总结就是：让我的 Inbox 里 永远保持 10+件可以在放松时间做的未尽事宜，对于我的时间管理非常重要。为此，我搭建了一个类似 reddit 的网址聚合器，名字就叫&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;d.buzzing.cc&#x2F;&quot;&gt;《如何度过每一天 &lt;code&gt;d.buzzing.cc&lt;&#x2F;code&gt;》&lt;&#x2F;a&gt; 。里面摘抄了待看的书，待看的电影，视频甚至一些书摘，到了放松时间，如果下一件事可干，就去里面找到下一个未读的东西。里面的东西最好要多样化，比如电影，图书，视频，深度文章都要有，这样才能满足我们现代人越来越叼的胃口，满足各种状态和心情下的 Getting Things Done.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhan-kai-shuo-shuo&quot;&gt;展开说说&lt;a class=&quot;zola-anchor&quot; href=&quot;#zhan-kai-shuo-shuo&quot; aria-label=&quot;Anchor link for: zhan-kai-shuo-shuo&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;有位哲人曾经说过：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在你全部的放松时间，都能给自己的大脑找到有意义的事情去做，而不是放任自己在迷糊的状态下漫无目的地浏览几个小时网页，那么在一天结束时，你会觉得更加充实，第二天开始时更加轻松。 – 《深度工作》&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;所以，那些所谓的放松时间就别去做什么有意义的事的说法都是 bullshit, 有意义的事情只会让你更有幸福感，而不是更累。&lt;&#x2F;p&gt;
&lt;p&gt;而且，其实有意义和放松并不冲突，比如看一部好的电影，看一部好书，看一部好的纪录片，甚至是看一部好的 Youtube 视频，这些事情都很有意义，但是做这些事情的同时也很放松。&lt;&#x2F;p&gt;
&lt;p&gt;所以如何去度过放松时间就变成了如何在想要放松的时候，快速找到源源不断的有意义的事去做。有点像 GTD 里的把一系列的事情塞在 Inbox 里，我在这条路上走了很多弯路。&lt;&#x2F;p&gt;
&lt;p&gt;刚开始自由职业的时候，就没啥大的规划，每天和女朋友的吃饭时间，就临时去找一部评分高的电影去看，就这样基本把豆瓣 Top250，和一些小众高分的电影都基本看完了，但是找的过程，还有下载无删减版电影资源，字幕等等其实都浪费的不少时间，如果能提前把要看的电影都下载好就好了，所以后来慢慢优化了我的看剧工作流， 见： &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.owenyoung.com&#x2F;tv-shows&#x2F;#workflows&quot;&gt;目前的追剧工作流&lt;&#x2F;a&gt;，优化之后其实找剧就变得方便了许多，但是发现大多数常见的剧都被我们看完了。。。而且后来，&lt;&#x2F;p&gt;
&lt;p&gt;我们分开了。&lt;&#x2F;p&gt;
&lt;p&gt;…&lt;&#x2F;p&gt;
&lt;p&gt;完。&lt;&#x2F;p&gt;
&lt;p&gt;…&lt;&#x2F;p&gt;
&lt;p&gt;…&lt;&#x2F;p&gt;
&lt;p&gt;…&lt;&#x2F;p&gt;
&lt;p&gt;Just kidding!&lt;&#x2F;p&gt;
&lt;p&gt;其实是后来我们分开办公了！因为发现一起办公其实挺影响效率的（比如抠鼻屎，放屁，放点音乐什么的，太影响双方了），所以这里一并声讨很多公司的大锅饭办公室，所谓的开放式办公室,Bullshit! 直接给你的员工效率打了 5 折。&lt;&#x2F;p&gt;
&lt;p&gt;刚分开的那段时间，我的放松时间是直接在 Bilibili 或者 Youteub 在线看了好多下饭视频（无意义视频），直到连下饭视频也没啥可看的了！（自由职业的时间可真多！&lt;&#x2F;p&gt;
&lt;p&gt;然后偶然在 Hacker News 发现 有个哥们分析了 HN 上 4 万多提到书籍的评论&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=28595967&quot;&gt;40k HN comments mentioning books, extracted using deep learning&lt;&#x2F;a&gt;，然后做了一个排名。&lt;&#x2F;p&gt;
&lt;p&gt;我在里面发现了一本宝藏图书&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.douban.com&#x2F;subject&#x2F;27056409&#x2F;&quot;&gt;《深度工作》&lt;&#x2F;a&gt;，读完这本书之后，我决定全面利用起自己的放松时间，只做有意义的事，这是我在看了这本书之后，今年的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.owenyoung.com&#x2F;books&#x2F;#2021&quot;&gt;读书记录&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;但是，这还不够，我找书是没看完一本就去找下一本，找的中途会有空档，这个空档有的时候会间隔蛮久的，因为万事开头难，下决心开始看一本新书总会让你内心有点抗拒，&lt;strong&gt;尤其是还没找到下一本书看什么的时候&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;所以我的策略是，必须提前充实我的 Inbox ， Inbox 里必须时时都有东西可立即读，或者看。&lt;&#x2F;p&gt;
&lt;p&gt;为了此目的，我用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LemmyNet&#x2F;lemmy&quot;&gt;Lemmy&lt;&#x2F;a&gt; 搭建了一个类似 reddit 的网址聚合器，名字就叫&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;d.buzzing.cc&#x2F;&quot;&gt;《如何度过每一天 &lt;code&gt;d.buzzing.cc&lt;&#x2F;code&gt;》&lt;&#x2F;a&gt; , 里面摘抄了待看的书，待看的电影，视频甚至一些书摘，任何时候都让里面保持 10 个以上未读的东西，到了放松时间，如果没有下一件事可干，就去里面找到下一个未读的东西。里面的东西最好要多样化，比如电影，图书，视频，深度文章都要有，这样才能满足我们现代人越来越叼的胃口，满足各种状态和心情下的 Getting Things Done.&lt;&#x2F;p&gt;
&lt;p&gt;目前只有我一个用户，希望也可以有不多的其他用户能贡献一些高质量的网址，以及希望也能帮到其他有类似需要的人。 (因为论坛就放在我的大阪追剧服务器里，没啥优化，所以有的时候速度挺慢，请见谅)&lt;&#x2F;p&gt;
&lt;p&gt;希望 2022 会是充实的一年。&lt;&#x2F;p&gt;
&lt;p&gt;对还没有进入自由职业的人的忠告就是，在进入自由职业之前，请思考一个问题：&lt;strong&gt;如何度过每一天？&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>出国，这几句话必须学会用当地语言怎么说</title>
		<published>2021-12-26T00:00:00+00:00</published>
		<updated>2022-03-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/you-should-know-these-words-aboard/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/you-should-know-these-words-aboard/</id>
		<content type="html">&lt;ol&gt;
&lt;li&gt;你好&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Hello&lt;&#x2F;li&gt;
&lt;li&gt;สวัสดี&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;再见&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Bye&lt;&#x2F;li&gt;
&lt;li&gt;Goodbye&lt;&#x2F;li&gt;
&lt;li&gt;Thai: Fandimai&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;请&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Please&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;谢谢&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Thank you&lt;&#x2F;li&gt;
&lt;li&gt;Cong Kong&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;我&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Me&lt;&#x2F;li&gt;
&lt;li&gt;ฉัน C̄hạn&lt;&#x2F;li&gt;
&lt;li&gt;Pon Shu Owen&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;你&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;You&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;他&#x2F;她&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Him&#x2F;her&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;这个&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;This&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;那个&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;That&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;10&quot;&gt;
&lt;li&gt;这儿&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Here&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;11&quot;&gt;
&lt;li&gt;那儿&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;There&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;12&quot;&gt;
&lt;li&gt;你有这个吗？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Do you have this?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;13&quot;&gt;
&lt;li&gt;这个在哪里？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Where is this?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;14&quot;&gt;
&lt;li&gt;那个多少钱？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;How much money is that?&lt;&#x2F;li&gt;
&lt;li&gt;Tou lai crab&lt;&#x2F;li&gt;
&lt;li&gt;多少钱？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;15&quot;&gt;
&lt;li&gt;洗手间在哪里？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Where is the toilet?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;16&quot;&gt;
&lt;li&gt;数字&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Zero, one, two, three, four, five, six, seven, eight, nine, ten&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;17&quot;&gt;
&lt;li&gt;好的&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Ok, Yes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;18&quot;&gt;
&lt;li&gt;不&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;No&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;19&quot;&gt;
&lt;li&gt;对不起，我不明白&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Sorry, I don’t understand.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;20&quot;&gt;
&lt;li&gt;我可以坐这里吗？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;May I sit here?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;21&quot;&gt;
&lt;li&gt;这很好吃&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;This is so delicious!&lt;&#x2F;li&gt;
&lt;li&gt;a Roi&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;22&quot;&gt;
&lt;li&gt;这是什么？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;What is this?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;23&quot;&gt;
&lt;li&gt;这个东西用你的语言怎么说？&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;How do you say {English word} in {your language}, please?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;24&quot;&gt;
&lt;li&gt;我 21 岁。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Pon a yo 21 by crap.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>一个风险偏好的实验</title>
		<published>2021-10-16T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/risk-perfer/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/risk-perfer/</id>
		<content type="html">&lt;p&gt;今天看《快思慢想》的时候，看到一个很有意思的实验：&lt;&#x2F;p&gt;
&lt;p&gt;想像美国正为一场亚洲爆发的疾病做准备，这个病预期会使 600 人死亡。有两个方式可以来对抗这个疾病，假设科学对这两种治疗方式的预测如下：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;假如采用 A 项目，200 人会得救。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;假如采用 B 项目，有三分之一的机会，600 人会得救，有三分之二的机会，所有人都会死。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;大部分的人选 A 项目，他们偏好确定性，不喜欢赌局。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;在第二个版本中，项目的结果用不同的框架：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;假如采用 C 项目，400 人会死。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;假如采用 D 项目，有三分之一的机会，所有人都得救，有三分之二的机会，这 600 人都会死。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;请仔细比较这两个版本：A 项目和 C 项目的后果是一样的，B 项目和 D 项目的后果也是一样的，但是在第二个框架中，大部分的人选择赌局。&lt;&#x2F;p&gt;
&lt;p&gt;这两个框架中不同的选择非常符合展望理论，确定事情和赌局之间的选择是用不同方式解决的，依据结果是好还是不好而产生这个不同。决策者在结果是好的时候，喜欢确定的事情，不喜欢赌博（他们是风险规避者）。当两个结果都是负面的时候，他们会拒绝确定的事情，接受赌博（他们是风险追求者）。这些结论在以钱为主的赌局和确定的事情时，已经很确定，没有人挑战了。这个疾病的问题显示，当被测量的结果是拯救的人命或死亡的人数，同样的规则可以适用。在这个情境，框架实验显示出风险规避和风险追求的偏好并不是真实界规范的，对同一个客观结果的偏好在不同的公式时，会逆转。&lt;&#x2F;p&gt;
&lt;p&gt;作者说这个测试对做重要决定的官员也不例外。有一次他被邀请去对一群公共卫生的专业人士演讲，这些人是做疫苗决策和其他项目决定的人。他利用这个机会给他们看亚洲疾病的问题，一半的人看「拯救生命」的版本，另一半看「失去生命」的版本，然后请他们回答问题。这些专业人士像其他老百姓一样，受到框架效应的影响，这很令人忧心，如果这些决策官员这么容易就被一个表面的肤浅的操弄所左右，国民健康的展望堪忧。不过我们一定要记得，即使是重要的决定也是受到系统一的影响。&lt;&#x2F;p&gt;
&lt;p&gt;这个故事告诉我们，遇到类似的事情的时候，一定要放慢去思考，最后再做出谨慎的决定。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>分享somethingawful.com的论坛协议</title>
		<published>2021-10-12T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/share-a-forum-rule/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/share-a-forum-rule/</id>
		<content type="html">&lt;p&gt;今天逛 hacker news，意外看到一个很有意思的论坛，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.somethingawful.com&#x2F;&quot;&gt;Something Awful&lt;&#x2F;a&gt;,注册会员收费 10 美元，为了要过滤用户。好奇看了下他的论坛协议，觉得写的很有意思。尤其是这句：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要使用任何口头禅、表情包、网络流行语或任何其他让您看起来像 12 岁孩子的废话。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;原文地址见： &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.somethingawful.com&#x2F;forum-rules&#x2F;forum-rules&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.somethingawful.com&#x2F;forum-rules&#x2F;forum-rules&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;以下是简单的翻译：&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gei-xin-shou-de-yi-feng-xin&quot;&gt;给新手的一封信！&lt;a class=&quot;zola-anchor&quot; href=&quot;#gei-xin-shou-de-yi-feng-xin&quot; aria-label=&quot;Anchor link for: gei-xin-shou-de-yi-feng-xin&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;在 Something Awful 论坛上的我们既是精英，其实又都很混蛋,我们以经营互联网上最有娱乐性和没有垃圾用户的论坛之一为荣。&lt;&#x2F;p&gt;
&lt;p&gt;我们通过收取 10 美元的费用来过滤掉那些不认真遵守规则的人，并禁止那些设法溜过和破坏规则的人。我们非常重视保持我们论坛的清洁和没有垃圾用户，所以请将您的账户视为一项投资，并小心地对待它。&lt;&#x2F;p&gt;
&lt;p&gt;请阅读规则，运用常识，帮助 SA 论坛成为互联网上最好的论坛。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yi-ban-xing-wei&quot;&gt;一般行为&lt;a class=&quot;zola-anchor&quot; href=&quot;#yi-ban-xing-wei&quot; aria-label=&quot;Anchor link for: yi-ban-xing-wei&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;发帖前先潜水! 这一点我们怎么强调都不为过。每个版块的名称和描述都很清楚地说明了什么是可以接受的，什么是不可以接受的。在发帖之前，请确保你发在了合适的子版块。如果没有专门针对您想讨论的话题的版块，请使用 “通用“版块。不要在通用版块上发布色情或任何 “有问题 “的内容；如果你在工作中看到这些内容会感到不舒服，就不要在那里发布。把所有恶心的图片放在 FYAD。此外，请检查您的帖子是否是重复的（它已经被其他论坛成员发布过）。&lt;&#x2F;p&gt;
&lt;p&gt;在你发帖之前。在发帖之前，请问自己以下问题。“我发表的帖子是否有趣、有信息量、或在任何层面上都很有趣？”&lt;&#x2F;p&gt;
&lt;p&gt;如果你能回答 “是”，那么请发帖。如果你不能，那就不要发帖。如果你还是发帖，管理员很可能会对你的主题发出警告，自动给予你 15 分钟的禁言。&lt;&#x2F;p&gt;
&lt;p&gt;在你回复之前。在回帖之前，请问自己以下问题。“我的回复是否提供了任何重要的建议或有助于以任何方式促进对话？”&lt;&#x2F;p&gt;
&lt;p&gt;如果你能回答 “是”，那么请回复。如果你不能，那么请不要回复。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fa-tie-gui-ze&quot;&gt;发帖规则&lt;a class=&quot;zola-anchor&quot; href=&quot;#fa-tie-gui-ze&quot; aria-label=&quot;Anchor link for: fa-tie-gui-ze&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;低质量贴&lt;&#x2F;strong&gt; 请不要发没什么内容的帖（比如说“第一篇帖子“、“你好，我是新来的 “等）。这些帖子只会让论坛变得更乱，由于有超过 10 万的注册用户，我们需要尽可能地减少这种帖子。如果你不喜欢一个主题，那么就给它投一个 “1”，然后继续看；仅由嘲讽组成的回复也属于这一类。通常来说，就是你要像在现实生活中对另一个人说话一样来发帖。不要使用任何口头禅、表情包、网络流行语，或任何其他让你看起来像 12 岁小孩的废话。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无价值的帖子&lt;&#x2F;strong&gt; 我们不关心你是喝醉了还是很嗨，请不要通知我们这两种情况。请不要注册噱头性的账户，并将其作为噱头发帖，因为这并不好笑。请不要发布废话，要求我们在一些网站上为你投票，给你推荐免费的 iPod&#x2F;平板电脑&#x2F;备用轮胎，或其他半垃圾的东西。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;破坏论坛氛围&lt;&#x2F;strong&gt;不要破坏论坛氛围或伤害论坛上的任何用户。如果你发布一个恶意链接（任何带有间谍软件或代码的网址，旨在惹恼人们），你将被禁言。不要因为你不喜欢发帖的人而和你的朋友一起投反对票；这使得投票功能毫无用处。不要制定计划来烦扰&#x2F;破坏其他论坛。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;保持目标一致&lt;&#x2F;strong&gt; 尽量为您的帖子使用适当的主题标签。这有助于人们找到您的主题，并使论坛更加友好。不要使用管理员专用的标签，否则您将被服务器自动禁止。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;遏制冲突&lt;&#x2F;strong&gt;将所有的冲突和其他争论放在适当的论坛（FYAD，YCS 等）。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;尊重版主和其他用户&lt;&#x2F;strong&gt; 版主们在这里是为了保持论坛的安全、理智和可靠。如果他们要求您做什么，请照做。请不要骚扰或故意惹恼版主或侮辱头版作者。如果你不喜欢版主或版主的工作，请不要在这里发帖。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;骚扰和讽刺&lt;&#x2F;strong&gt;如果有人在论坛上骚扰你，请在联系版主之前通过 PM 或电子邮件与他们讨论。争论和侮辱并不构成骚扰。请不要发布他人的个人信息（电话号码、地址、电子邮件等）。尽量不要干涉他人的个人生活。请记住，互联网和现实生活之间是有很大区别的。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;帐户功能&lt;&#x2F;strong&gt; 一个论坛账户只能有一个人使用。共享账户是一种被禁止的行为，所以请保持你的密码安全。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;搞小聪明&lt;&#x2F;strong&gt; 请不要试图利用漏洞来规避这里列出的一些规则。这些规则只是一般准则，非常灵活。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FYAD 自由&lt;&#x2F;strong&gt; 你不能发布违法内容，不能通过发布他人的个人信息或裸体照片来骚扰他人，不能在主题行中加入垃圾信息来破坏论坛的秩序，不能骚扰任何管理员或版主，也不能在 FYAD 中发起论坛入侵行为。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;我讨厌的言论&lt;&#x2F;strong&gt; 诸如 “faggot “或 “nigger “这样的攻击性词汇，根据句子的上下文，可能会被禁止，也可能不会被禁止。如果他们的意思是幽默，绝对没有攻击性的污言秽语，那么用户可能不会被禁言或者临时禁言。这条规则是完全的，100%的主观性，并且是是基于当时正在阅读该帖子的管理员, 使用时请自行承担风险。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>如何写作？</title>
		<published>2021-09-26T00:00:00+00:00</published>
		<updated>2022-03-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/how-to-writing/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/how-to-writing/</id>
		<content type="html">&lt;p&gt;来自&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sive.rs&#x2F;book&#x2F;OnWritingWell&quot;&gt;写出更好的东西读书笔记&lt;&#x2F;a&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;用第一人称写。&lt;&#x2F;li&gt;
&lt;li&gt;如果它在写作中让你感到好笑，那就把它放进去&lt;&#x2F;li&gt;
&lt;li&gt;出乎意料但令人耳目一新的话语&lt;&#x2F;li&gt;
&lt;li&gt;在让它进入世界之前，大声朗读所有内容。&lt;&#x2F;li&gt;
&lt;li&gt;学习写作的唯一方法是强迫自己定期产生一定数量的单词。&lt;&#x2F;li&gt;
&lt;li&gt;每一部成功的非虚构作品都应该给读者留下一个他或她以前没有的挑衅性想法。不是两个想法，也不是五个- 只是一个。&lt;&#x2F;li&gt;
&lt;li&gt;任何文章中最重要的句子都是第一个句子。如果它没有诱使读者继续第二句话，那么你的文章就死了。如果第二句话没有诱使他继续第三句话，那么它同样已经死了。&lt;&#x2F;li&gt;
&lt;li&gt;特别注意每个段落的最后一句 - 这是下一段的关键跳板。试着给这句话一个额外的幽默或惊喜。&lt;&#x2F;li&gt;
&lt;li&gt;每一个小小的限定词都会削弱读者的信任度。&lt;&#x2F;li&gt;
&lt;li&gt;有趣的作家保持自己的兴趣。有趣的生活和继续教育。&lt;&#x2F;li&gt;
&lt;li&gt;现在，您的读者接下来想知道什么？在每句话之后问自己这个问题。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;</content>
	</entry>
	<entry xml:lang="zh">
		<title>Projects</title>
		<published>2021-03-26T00:00:00+00:00</published>
		<updated>2022-03-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/projects/" type="text/html"/>
		<id>https://www.owenyoung.com/projects/</id>
		<content type="html">&lt;p&gt;This is a list of projects I’ve done and am doing.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;list&quot;&gt;List&lt;a class=&quot;zola-anchor&quot; href=&quot;#list&quot; aria-label=&quot;Anchor link for: list&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Maintaining &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denoflow&#x2F;denoflow&quot;&gt;Denoflow&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denoflow&#x2F;denoflow&quot;&gt;Denoflow&lt;&#x2F;a&gt;** is an automate workflows based on Deno&#x2F;Typescript&#x2F;Javascript&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.trackawesomelist.com&quot;&gt;Track Awesome List&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Track your favorite github awesome repo, not just star it. trackawesomelist.com provides website, newsletter, RSS for tracking the popular awesome list by daily and weekly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;gatsby-theme-primer-wiki&quot;&gt;Gatsby Theme Primer Wiki&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A gatsby theme for wiki site. Like this site is using the theme to generate. Cause this wiki is a thing that I want to maintain the whole life, so the theme would be maintain for a long time.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt; helps you automate workflows - it’s a free &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ifttt.com&#x2F;&quot;&gt;IFTTT&lt;&#x2F;a&gt;&#x2F;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zapier.com&#x2F;&quot;&gt;Zapier&lt;&#x2F;a&gt; alternative for developers. With &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt; you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more. We implemented it based on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&quot;&gt;Github actions&lt;&#x2F;a&gt;, and you use a YAML file to build your workflows. The configuration format is the same as &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&#x2F;configuring-and-managing-workflows&#x2F;configuring-a-workflow&quot;&gt;Github actions&lt;&#x2F;a&gt;, which makes it easy for you to get going if you’ve explored Github actions before. You can also use any &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;marketplace?type=actions&quot;&gt;Github actions&lt;&#x2F;a&gt; as your job’s steps.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.buzzing.cc&quot;&gt;Buzzing&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can use &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.buzzing.cc&#x2F;&quot;&gt;Buzzing&lt;&#x2F;a&gt; to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, Japanese, English, you can find topics like &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;reddit.buzzing.cc&quot;&gt;Buzzing on Reddit&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stocks.buzzing.cc&quot;&gt;Buzzing on Stocks&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ph.buzzing.cc&quot;&gt;Buzzing on Product Hunt&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.buzzing.cc&#x2F;&quot;&gt;Buzzing on Hacker News&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ask.buzzing.cc&#x2F;&quot;&gt;Buzzing on Reddit ASK&lt;&#x2F;a&gt;, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;gatsby-theme-timeline&quot;&gt;Gatsby Theme Timeline&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A Gatsby theme, you can use it to show your all posts, tweets, instagram posts etc into one blog. In my opinion, this is a real personal home.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>2021年美股值得关注的信息源包括推特，网站，Reddit小组</title>
		<published>2021-02-11T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/us-stocks-you-should-follow/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/us-stocks-you-should-follow/</id>
		<content type="html">&lt;p&gt;自从&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;wallstreetbets&quot;&gt;华尔街赌徒小组&lt;&#x2F;a&gt; 从一个小众的小组在 $GME 的风潮下迅速涨粉到 89 万人，成为 Reddit 上金融相关小组中名副其实的第一名。身边很多人在看到一个 Reddit 小组对美国股市的影响力如此之大之后，都迫不及待的想找到一些美股的消息源。虽然我炒股不咋地，但是我搜索信息的能力还是家中一绝啊，万一能帮到下一个百万富翁呢！分享下我平时关注的一些关于投资的一些信息源，包括 Reddit，Twitter，网站还有 Youtube.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;这篇文章会一直更新，把我最新发现的一些有用的信息源更新上来&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;reddit&quot;&gt;Reddit&lt;a class=&quot;zola-anchor&quot; href=&quot;#reddit&quot; aria-label=&quot;Anchor link for: reddit&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;investing&#x2F;&quot;&gt;Investing 小组&lt;&#x2F;a&gt; 17 万人，投资相关，一般都是聊股票，有很多高人，在这里你可能会发掘不少不错的股票，在里面你可能可以总结出一个 Reddit ETF&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;stocks&quot;&gt;Stocks 小组&lt;&#x2F;a&gt; 22 万人，股票小组，顾名思义就是聊股票，主要是美股，质量也很不错，不过近期由于大量新人涌入，质量有所下滑，不过还是能发现不少好贴的&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;wallstreetbets&quot;&gt;华尔街赌徒小组&lt;&#x2F;a&gt; 89 万人，著名的 WSB，本来是一个比较小众的小组，里面的人自称是弱智，通过晒自己的骚操作来博得“弱智”的喝彩，有的晒自己赢了多少倍，有的晒自己输了多少倍，感觉氛围有点像曾经的李毅吧，欢乐而鼓舞，里面也有真大神，比如引领 $GME 风潮的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;user&#x2F;DeepFuckingValue&quot;&gt;&#x2F;u&#x2F;DeepFuckingValue&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;a class=&quot;zola-anchor&quot; href=&quot;#twitter&quot; aria-label=&quot;Anchor link for: twitter&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;elonmusk&quot;&gt;Elon Musk 马斯克&lt;&#x2F;a&gt; 2020 年最火的股票就是特斯拉，特斯拉老板 Musk 也被很多人追捧，有人甚至做了马斯克推特提到的股票及时提醒器（而且还要付费订阅！）关注马斯克，及时知道下一个热点！&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;StockDweebs&quot;&gt;StockDweebs&lt;&#x2F;a&gt; 他每周都会推荐一些股票，也发一些统计和止损的分析，可以参考&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;charliebilello&quot;&gt;Charlie Bilello&lt;&#x2F;a&gt; 这个哥们做很多很多精美的图表，统计，分析，让你知道事情的变化&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dividendcut&quot;&gt;Dividend Cut&lt;&#x2F;a&gt; 这位哥们关注股息减少的股票，当某家公司股息减少的时候，可能这家公司有不妙的情况了，关注这位兄弟及时知道&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;InvestmentTalkk&quot;&gt;Investment Talk 投资说&lt;&#x2F;a&gt; 每天都会谈很多关于股票的分析，可以作为参考&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cathiesark&quot;&gt;Cathie’s Ark&lt;&#x2F;a&gt; 每天追踪 ARK 基金的持仓变化&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Stocktwits&quot;&gt;Stocktwits&lt;&#x2F;a&gt; 美国版雪球，及时获得新闻和趋势&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MarketWatch&quot;&gt;MarketWatch 市场观察&lt;&#x2F;a&gt; 市场观察，及时获得财经媒体的报道&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;wang-zhan&quot;&gt;网站&lt;a class=&quot;zola-anchor&quot; href=&quot;#wang-zhan&quot; aria-label=&quot;Anchor link for: wang-zhan&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;finviz.com&#x2F;screener.ashx&quot;&gt;Finviz 股票筛选器&lt;&#x2F;a&gt; 这是一个工具网站，你可以用很多维度去筛选出你要的股票，比如按照市值，涨跌，国家，类型等等找出你关注的股票，因为我对大公司比较感兴趣，那我就可以只看 100 亿市值以上的公司，或者你对中概股感兴趣，那你就可以只看中国的股票&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;whalewisdom.com&#x2F;whitepapers&#x2F;whalewisdom&quot;&gt;Whale Wisdom 鲸鱼智慧&lt;&#x2F;a&gt; 大多数对冲基金都非常赚钱，但是他们也非常神秘，所以如果能分析对冲基金的投资方向和股票，对散户来说就很有帮助，鲸鱼智慧就是干这个的，分析那些大型对冲基金的投资&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;arktrack.com&#x2F;&quot;&gt;ARK 基金持仓实时追踪&lt;&#x2F;a&gt; 女巴菲特的基金 ARK 是 2020 年最火的基金了，一年时间资产从几亿现在涨到了现在几百亿，ARK 最大的特点就是当天公布自己的具体持仓情况，公布持仓之后，又会促进股票继续增长。这个网站实时追踪 ARK 基金里的 5 支基金的持仓变化&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stocks.buzzing.cc&#x2F;&quot;&gt;国外股市热门&lt;&#x2F;a&gt; 实时发布一些 Reddit，Twitter 上的股票相关热门内容的中文汇总，很适合中国关注美股的同学&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>我目前的投资（基金，炒股，存款）情况和投资方向</title>
		<published>2021-02-06T00:00:00+00:00</published>
		<updated>2021-02-06T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/investing-information-guide/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/investing-information-guide/</id>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;免责声明： 本文只是总结个人的投资方向，并不构成任何投资指南，我们每个人都应该根据自己收集的相关信息来指导自己的投资。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.owenyoung.com&#x2F;zh&#x2F;posts&#x2F;start-investing-again&#x2F;&quot;&gt;上一篇文章&lt;&#x2F;a&gt;，我认为自己过去 5 年的投资生涯，算是失败，所以本文也可以说是失败的经验总结&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;前两天看到 Reddit 上的一个讨论&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;AskReddit&#x2F;comments&#x2F;l92amj&#x2F;people_who_are_40_what_is_your_advice_to_people&#x2F;&quot;&gt;40 岁的人，你给 20 岁的人有什么建议？&lt;&#x2F;a&gt;，里面有不少 40 岁的人建议尽早开始投资。总的来说，我觉得投资确实是人生必须要学会的技能，所以，越早越好。越早，我的本金越少，可失去的越少，但是买的教训越大&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;我目前的投资经验包括 A 股，港股，美股，国内基金，国外基金，ETF，数字货币，模拟炒股：）&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tou-zi-ying-li-qing-kuang&quot;&gt;投资盈利情况&lt;a class=&quot;zola-anchor&quot; href=&quot;#tou-zi-ying-li-qing-kuang&quot; aria-label=&quot;Anchor link for: tou-zi-ying-li-qing-kuang&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;A 股 - 赔钱&lt;&#x2F;li&gt;
&lt;li&gt;港股 - 小赚&lt;&#x2F;li&gt;
&lt;li&gt;美股 - 小赚&lt;&#x2F;li&gt;
&lt;li&gt;基金&#x2F;ETF - 小赚&lt;&#x2F;li&gt;
&lt;li&gt;数字货币 - 小赚&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;mu-qian-de-tou-zi-qing-kuang&quot;&gt;目前的投资情况&lt;a class=&quot;zola-anchor&quot; href=&quot;#mu-qian-de-tou-zi-qing-kuang&quot; aria-label=&quot;Anchor link for: mu-qian-de-tou-zi-qing-kuang&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;国内
&lt;ul&gt;
&lt;li&gt;坚决不碰 A 股（已经坚持了 4 年，原因是 A 股市场不健康，管控，不允许卖空，涨停板限制，不透明，庄，所以我觉得不适合小散，目前没有一毛钱在上面&lt;&#x2F;li&gt;
&lt;li&gt;国内的钱总得找地方放着吧？分为 3 种
&lt;ul&gt;
&lt;li&gt;54%放在 5 年定期存款，但是不是普通的低息储蓄存款，而是所谓的智能存款，50 万存款保障的那种，大概利息是在年化 5.2%左右&lt;&#x2F;li&gt;
&lt;li&gt;20%放在 1 年&#x2F;1 月的定期存款，同上，选的利息较高的智能存款，风险可以 hold 住，大概利息是 4.3-4.8%左右&lt;&#x2F;li&gt;
&lt;li&gt;15%放在基金里，买了一些理财通&#x2F;支付宝官方的一起投&#x2F;以及 QDII 基金&lt;&#x2F;li&gt;
&lt;li&gt;10%的活期，其中大多数放在银行的活期货币基金里，利息大概是年化 2.7%左右&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;国外的钱
&lt;ul&gt;
&lt;li&gt;90%的现金（前两天全部清仓，准备重新开始规划投资&lt;&#x2F;li&gt;
&lt;li&gt;10%的股票和基金&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;mei-gu-tou-zi-fang-xiang&quot;&gt;美股投资方向&lt;a class=&quot;zola-anchor&quot; href=&quot;#mei-gu-tou-zi-fang-xiang&quot; aria-label=&quot;Anchor link for: mei-gu-tou-zi-fang-xiang&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;由于美股目前一直出去历史高点，所以目前的策略是逢低定投买入 ETF 和头部股票，主要定投以下几个 ETF&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;长期投资，一直拿着，除非有大的变故&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;VOO, 标普 500，头部企业，相对稳定，下滑时恢复更快&lt;&#x2F;li&gt;
&lt;li&gt;VUG, 成长股票 ETF，收益可能比 VOO 高&lt;&#x2F;li&gt;
&lt;li&gt;QQQ, 科技股 ETF，就历史数据来看，一直都是收益最高的，但是也有泡沫风险，见仁见智&lt;&#x2F;li&gt;
&lt;li&gt;ARKK, 创新企业投资，风险更大一点，但是目前来看收益也非常高&lt;&#x2F;li&gt;
&lt;li&gt;ICLN, 全球清洁能源 ETF，这是我选的一个未来方向，所以专门投一下这个&lt;&#x2F;li&gt;
&lt;li&gt;EWG, 德国 ETF，欧洲火车头，当前已接近顶点&lt;&#x2F;li&gt;
&lt;li&gt;EWU, 英国 ETF，当前处于不高的位置，英国已脱欧，这里可以重点关注一下&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dang-qian-zhong-dian-guan-zhu-gu-piao&quot;&gt;当前重点关注股票&lt;a class=&quot;zola-anchor&quot; href=&quot;#dang-qian-zhong-dian-guan-zhu-gu-piao&quot; aria-label=&quot;Anchor link for: dang-qian-zhong-dian-guan-zhu-gu-piao&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;目前投资股票，有一个原则，就是不碰市值小的股票，因为市值小的股票非常容易被庄操纵，涨跌幅度非常大，所以坚决不碰，比较典型的就是 GSX，我比较保守，市值 500 亿美金以下的公司不碰，这已经可以过滤掉很多股票了，另外就是中概股，谨慎谨慎再谨慎，占很小比例即可，因为政策风险，以及中概股一贯的不透明&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SE, 东南亚电商巨头，当前历史高点 $256, 可以逢低进入&lt;&#x2F;li&gt;
&lt;li&gt;FDX, 联邦快递，优质企业，目前处于较低位置, 当前是$255&lt;&#x2F;li&gt;
&lt;li&gt;DIS, $181, 当前处于历史高点，但是优质企业，可能会一直创新高&lt;&#x2F;li&gt;
&lt;li&gt;TSM, $127, 台积电，优质企业，当前历史高点，逢低买入&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;mei-gu-xin-xi-lai-yuan&quot;&gt;美股信息来源&lt;a class=&quot;zola-anchor&quot; href=&quot;#mei-gu-xin-xi-lai-yuan&quot; aria-label=&quot;Anchor link for: mei-gu-xin-xi-lai-yuan&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;早几年，我觉得我的美股信息来源基本上是来自富途的评论区，但是现在一方面逼着自己学英语，一方面也想了解更一手的信息，所以目前的获取美股信息的方式主要是以下几个渠道：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;finance.yahoo.com&#x2F;&quot;&gt;Yahoo Finance&lt;&#x2F;a&gt; APP, 雅虎财经，定制和推送一些你关注的股票的新闻和评论&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.investing.com&#x2F;&quot;&gt;Investing&lt;&#x2F;a&gt; APP，同上&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stocks.buzzing.cc&quot;&gt;国外股市热门讨论&lt;&#x2F;a&gt;， 这是我做的一个站点，主要是收集国外热门股票论坛和财经博主的热门推特，并且用 Deepl 翻译成中文，相当于做一个中文导读，看到感兴趣的内容再点进去看原文，这样既能提高英文水平，又能快速找到感兴趣的内容。当然，如果你的英文足够好的话，直接去 Reddit 和 Twitter 关注这些人就好，不用看中文导读了&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;暂时先写这么多，后面有更新再写一篇投资简报。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>重新开始投资</title>
		<published>2021-02-04T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/start-investing-again/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/start-investing-again/</id>
		<content type="html">&lt;p&gt;说起来我投资的时间还蛮久的，从大学的时候就开了股票账户，一直到现在有 8 年以上的投资经验了，但其实还是像一个菜鸟一样，没赚过什么钱，当然，万幸的是至少没亏钱。&lt;&#x2F;p&gt;
&lt;p&gt;今天有一笔股市打新的意外收入，填平了一直萦绕在我心里的 3 年前的一笔股票巨额亏损，这让我终于没了心魔，这才敢在 Google Sheet 里创建了一个表格，总结了下近几年的投资收益和各个账户的资金状态（还有一个原因是，我一直想总结下自己在各个银行开立的账户，万一我发生什么意外，让亲友能知道我的账户情况）&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;总的来说，总盈利 60000 元左右，其中基金 25000，数字货币 25000，股票 10000.&lt;&#x2F;p&gt;
&lt;p&gt;总结完毕后，觉得神清气爽，在表格里记录自己的各项账户余额真是一个很有必要的做法，想想以前的自己，唉，竟然一直都马马虎虎的在脑子中记个大概的数，我觉得这可能也是遗传了家人的性格，父母从来不把自己的钱做一个清晰的规划，所以这么多年来他们的钱老是攒不起来，我要找个时间给他们做一次整理。&lt;&#x2F;p&gt;
&lt;p&gt;我决定把 2021-02-04，作为我投资生涯的一个新的开始，以今天为初始资金的计算点，开启今后的投资，每半年更新下 Google Sheet，看看收益如何。&lt;&#x2F;p&gt;
&lt;p&gt;我在表格里记录了以下字段：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;平台&lt;&#x2F;li&gt;
&lt;li&gt;金额&lt;&#x2F;li&gt;
&lt;li&gt;状态&lt;&#x2F;li&gt;
&lt;li&gt;到期时间&lt;&#x2F;li&gt;
&lt;li&gt;预估到期收益&lt;&#x2F;li&gt;
&lt;li&gt;方式&lt;&#x2F;li&gt;
&lt;li&gt;年化收益率 %&lt;&#x2F;li&gt;
&lt;li&gt;派息时间&lt;&#x2F;li&gt;
&lt;li&gt;登录入口&lt;&#x2F;li&gt;
&lt;li&gt;存入时间&lt;&#x2F;li&gt;
&lt;li&gt;平台账号&lt;&#x2F;li&gt;
&lt;li&gt;产品名称&lt;&#x2F;li&gt;
&lt;li&gt;登录方式&lt;&#x2F;li&gt;
&lt;li&gt;登录账号&lt;&#x2F;li&gt;
&lt;li&gt;分行&lt;&#x2F;li&gt;
&lt;li&gt;唯一标识&lt;&#x2F;li&gt;
&lt;li&gt;银行卡号&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;希望以后能分享一些投资心得吧（前提是赚钱了的话，亏钱的话都不敢看账户的&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>使用Actionsflow在Github上免费部署Rsshub</title>
		<published>2021-02-03T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/deploy-rsshub-with-actionsflow/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/deploy-rsshub-with-actionsflow/</id>
		<content type="html">&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DIYgod&#x2F;RSSHub&quot;&gt;Rsshub&lt;&#x2F;a&gt;是一个很棒的工具，把很多知名或不知名的网页数据通通统一为&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;RSS&quot;&gt;RSS 格式&lt;&#x2F;a&gt;，堪称中文互联网的 W3C. 但是官方推荐的部署方式是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rsshub.app&#x2F;install&#x2F;#docker-compose-bu-shu&quot;&gt;Docker 部署&lt;&#x2F;a&gt;，对于大多数轻量使用的用户来说有点重，所以这里介绍一种免费，轻量，按需使用的部署方式，利用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt;部署在 GitHub 的 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&quot;&gt;Actions&lt;&#x2F;a&gt; 上。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt;是一个基于 Github Actions 上的 IFTTT&#x2F;Zapier 的开源替代，使用 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;workflow&#x2F;&quot;&gt;Github Actions 的配置格式&lt;&#x2F;a&gt;来配置你需要的工作流, 更多关于 Actionsflow 的使用可以看我的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.owenyoung.com&#x2F;zh&#x2F;posts&#x2F;actionsflow&#x2F;&quot;&gt;另一篇文章介绍&lt;&#x2F;a&gt;,或者&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;&quot;&gt;官方文档&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;比如我自己在用的一个工作流就是监控豆瓣车组的一些我需要的关键词，如果有提到关键词的帖子，那么发送一个 telegram 消息给我，配置如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rsshub&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;douban&#x2F;group&#x2F;669481
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;query&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filter_case_sensitive&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filter_title&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;罐头|狗粮|爱肯拿|渴望|姐妹们快|牛奶|牛肉|羊肉|来伊份岩烧|来伊份面包|烤箱|生鲜|螺蛳粉|米诺|果酸|杏仁酸|鸡蛋|大米|薅|cr海盐|洗头膏|崔娅蓬松|洗鼻|橙
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filterout_title&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;求|转|求购|交流|已购|专楼|蒙牛|伊利|讨论|华为|停车|代拍|完|分装|意向|拼单|删|一元
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ifttt&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Make a Request to telegram
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;runs-on&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu-latest
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Send a telegram message
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;appleboy&#x2F;telegram-action@v0.1.0
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.TELEGRAM_TO }}
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;token&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.TELEGRAM_TOKEN }}
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            &amp;lt;b&amp;gt;${{ on.rsshub.outputs.title}}&amp;lt;&#x2F;b&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            &amp;lt;a href=&amp;quot;${{on.rsshub.outputs.link}}&amp;quot;&amp;gt;${{on.rsshub.outputs.description}}&amp;lt;&#x2F;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;html
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;disable_web_page_preview&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;配置来自&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;actionsflow-workflow&#x2F;blob&#x2F;main&#x2F;workflows&#x2F;rsshub.yml&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;接下来介绍下如何部署：）&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为 rsshub 这个 trigger 没有内置在 Actionsflow 里，所以按照官方的教程初始化之后，需要主动安装下&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;actionsflow-trigger-rsshub&quot;&gt;@actionsflow&#x2F;trigger-rsshub&lt;&#x2F;a&gt;这个 trigger&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用这个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow-workflow-default&#x2F;generate&quot;&gt;链接&lt;&#x2F;a&gt;用 Actionsflow 的默认模板创建一个新的 GitHub 项目，一个典型的 Actionsflow 项目长这样：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; .github
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── workflows
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       └── actionsflow.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; .gitignore
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; README.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span&gt; workflows
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── rss.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── webhook.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span&gt; package.json
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;clone 你刚创建的项目到本地&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone git@github.com:&amp;lt;your-github-username&amp;gt;&#x2F;&amp;lt;repo-name&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;在本地编辑 &lt;code&gt;.github&#x2F;workflows&#x2F;actionsflow.yml&lt;&#x2F;code&gt; 文件，取消&lt;code&gt;schedule&lt;&#x2F;code&gt;的注释&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;actionsflow-trigger-rsshub&quot;&gt;@actionsflow&#x2F;trigger-rsshub&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; i @actionsflow&#x2F;trigger-rsshub
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;workflows&#x2F;&lt;&#x2F;code&gt;文件夹创建你自己的 workflow 文件&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;workflow 的写法和 rsshub trigger 的用法清参考官方文档&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;workflow&#x2F;&quot;&gt;Actionsflow Workflow Syntax&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theowenyoung&#x2F;actionsflow-trigger-rsshub&quot;&gt;Actionsflow rsshub trigger&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;可以参考&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;actions&#x2F;&quot;&gt;这里&lt;&#x2F;a&gt;列出的 常用 Github Action，以及这个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;awesome-actionsflow&quot;&gt;Actionsflow 的 Awesome 项目&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;示例(&lt;code&gt;&#x2F;workflow&#x2F;rsshub.yml&lt;&#x2F;code&gt;)：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rsshub&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;smzdm&#x2F;keyword&#x2F;女装
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Print
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;runs-on&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu-latest
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Print Outputs
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{on.rsshub.outputs.title}}
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{on.rsshub.outputs.description}}
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{on.rsshub.outputs.link}}
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;          echo title: $title
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;          echo description: $description
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;          echo link: $link
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;保存并提交你的文件到 Github&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你想本地测试的话，需要先安装&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;get-docker&#x2F;&quot;&gt;Docker&lt;&#x2F;a&gt;, 并运行 &lt;code&gt;npm run start&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>如何培养长期的英文阅读兴趣？</title>
		<published>2021-02-03T00:00:00+00:00</published>
		<updated>2022-03-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/how-do-i-cultivate-long-term-interest-in-english-reading/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/how-do-i-cultivate-long-term-interest-in-english-reading/</id>
		<content type="html">&lt;p&gt;在我自己博客里的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blog.owenyoung.com&#x2F;about&#x2F;&quot;&gt;&#x2F;about&lt;&#x2F;a&gt;页里对自己的第一个介绍就是:&lt;strong&gt;A failure of English learning&lt;&#x2F;strong&gt;, 一个学了 10 年英语的菜鸟，我自己认为根本原因是我的意志力，物理原因主要是对英文的练习不够，所以我现在的主要思路还是要提高英语的练习量，重点是坚持。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;第一次看到&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wanqu.co&#x2F;&quot;&gt;湾区日报&lt;&#x2F;a&gt;的时候觉得，哇又能看自己感兴趣的，又能看原文学英语，多好！但是最后还是没能坚持看下去，为啥呢？可能还是因为这事太正能量了，潜意识可能告诉我，这是工作不是兴趣！不然为啥刷推刷的那么频繁呢？&lt;&#x2F;p&gt;
&lt;p&gt;所以，为了让自己像刷推一样刷感兴趣的英文讯息，我仿照湾区日报的模式，做了几个导读网站 - &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.buzzing.cc&#x2F;&quot;&gt;Buzzing&lt;&#x2F;a&gt;，其中我每天必刷的有&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;reddit.buzzing.cc&#x2F;&quot;&gt;Reddit 热门&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stocks.buzzing.cc&#x2F;&quot;&gt;国外股市热门&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hn.buzzing.cc&#x2F;&quot;&gt;Hacker News 热门&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ph.buzzing.cc&#x2F;&quot;&gt;Product Hunt 热门&lt;&#x2F;a&gt;， &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ask.buzzing.cc&#x2F;&quot;&gt;Reddit 热门提问&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;导读内容的翻译是自动进行的，用的是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.deepl.com&#x2F;en&#x2F;translator&quot;&gt;deepl&lt;&#x2F;a&gt;的服务，据说是翻译中文最好的翻译引擎，我试了谷歌翻译，腾讯翻译和 deepl，确实 deepl 翻译的更准确一点。&lt;&#x2F;p&gt;
&lt;p&gt;目前推进的很好，每天都会上去看更新，而且是带着强烈兴趣的去看更新，有了中文导读之后，可以更快的找到自己想看的内容，然后进去之后看原文会更有动力。&lt;&#x2F;p&gt;
&lt;p&gt;如果你也有类似问题，可以尝试刷下&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.buzzing.cc&#x2F;&quot;&gt;Buzzing&lt;&#x2F;a&gt;，或者你有一些感兴趣的主题，也可以 DM 或者邮件联系我，可以新增一些主题～&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Actionsflow介绍 - 可以一键部署在Github上的IFTTT&#x2F;Zapier的开源替代</title>
		<published>2021-02-02T00:00:00+00:00</published>
		<updated>2021-02-02T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/actionsflow/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/actionsflow/</id>
		<content type="html">&lt;p&gt;我还记得当年第一次使用&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ifttt.com&quot;&gt;IFTTT&lt;&#x2F;a&gt;的时候的那种兴奋，天呐，这才是互联网！从那时起，就一直使用 IFTTT 到今天，真的很棒的一个产品！直到 IFTTT 最近宣布要收费，我就在想有没有合适的开源方案可以替代，因为托管方案肯定没戏了，连 10 年都免费的 IFTTT 都开始收费了，其他的只会更贵，结果发现主流的开源替代方案，比如 huginn, n8n, node-red 好像又有点重，不够轻量，而且扩展起来也不容易。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;刚好在那时看到&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&quot;&gt;Github 的 Actions&lt;&#x2F;a&gt;支持&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&#x2F;reference&#x2F;events-that-trigger-workflows#schedule&quot;&gt;Schedule&lt;&#x2F;a&gt;事件，而 Github 的 Actions 又是对开源项目免费使用，所以就萌生了利用 Github Actions 的定时运行来检测更新，并执行指定动作。所以一个新的轮子&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow&quot;&gt;Actionsflow&lt;&#x2F;a&gt; 来了！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kai-shi&quot;&gt;开始&lt;a class=&quot;zola-anchor&quot; href=&quot;#kai-shi&quot; aria-label=&quot;Anchor link for: kai-shi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用这个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;actionsflow-workflow-default&#x2F;generate&quot;&gt;链接&lt;&#x2F;a&gt;用 Actionsflow 的默认模板创建一个新的 GitHub 项目，一个典型的 Actionsflow 项目长这样：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; .github
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── workflows
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;       └── actionsflow.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; .gitignore
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span&gt; README.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span&gt; workflows
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── rss.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span&gt;   └── webhook.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span&gt; package.json
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;取消 &lt;code&gt;.github&#x2F;workflows&#x2F;actionsflow.yml&lt;&#x2F;code&gt; 文件里&lt;code&gt;schedule&lt;&#x2F;code&gt;的注释&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;workflows&#x2F;&lt;&#x2F;code&gt;文件夹创建你自己的 workflow 文件&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;保存并提交你的文件到 Github&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;pei-zhi&quot;&gt;配置&lt;a class=&quot;zola-anchor&quot; href=&quot;#pei-zhi&quot; aria-label=&quot;Anchor link for: pei-zhi&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;我对 Actionsflow 的设计原则是规则尽可能简单，并且可扩展，workflow 的配置规则直接采用 Github Actions 的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&#x2F;reference&#x2F;workflow-syntax-for-github-actions&quot;&gt;配置格式&lt;&#x2F;a&gt;，如果你之前有用过 Github Actions 的话，应该立刻就能懂 Actionsflow 的全部配置规则：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rss&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;hnrss.org&#x2F;newest?points=300
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;limit&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Make a HTTP Request
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;runs-on&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu-latest
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Make a HTTP Request
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;actionsflow&#x2F;axios@v1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;hookb.in&#x2F;VGPzxoWbdjtE22bwznzE
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;method&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;POST
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;              &amp;quot;link&amp;quot;:&amp;quot;${{ on.rss.outputs.link }}&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;              &amp;quot;title&amp;quot;: &amp;quot;${{ on.rss.outputs.title }}&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;              &amp;quot;content&amp;quot;:&amp;quot;&amp;lt;&amp;lt;&amp;lt;${{ on.rss.outputs.contentSnippet }}&amp;gt;&amp;gt;&amp;gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;和原生的 Github Actions 的配置相比，Actionsflow 只是扩展了&lt;code&gt;on&lt;&#x2F;code&gt;的事件，在 Actionsflow 里，我把它叫做&lt;code&gt;trigger&lt;&#x2F;code&gt;，&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;triggers&#x2F;rss&#x2F;&quot;&gt; RSS trigger&lt;&#x2F;a&gt;经常被用来做示例使用，你可以点击[这里](&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;triggers&#x2F;&quot;&gt;Actionsflow Triggers | Actionsflow Documentation&lt;&#x2F;a&gt;)查看目前 Actionsflow 支持的所有 trigger. Trigger 里有个特殊的参数是&lt;code&gt;config&lt;&#x2F;code&gt;,这个 config 是通用参数，也就是所有的 trigger 都支持 config 参数，config 实现了很多通用的功能的，比如设置过滤条件，设置过滤条数，格式化输出结果，设置触发时间等等，点击[这里](&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;workflow&#x2F;#ontriggerconfig&quot;&gt;Workflow Syntax for Actionsflow | Actionsflow Documentation&lt;&#x2F;a&gt;可以查看所有支持的配置。&lt;&#x2F;p&gt;
&lt;p&gt;其他的就和 Github Actions 的配置一样了，你可以在 jobs 里配置任何复杂的任务，或者简单的发个请求，你可以用&lt;code&gt; ${{ on.rss.outputs.&amp;lt;key&amp;gt; }}&lt;&#x2F;code&gt;来使用 trigger 的结果，每个 trigger 的结果的 key 需要去看对应 trigger 的文档。&lt;&#x2F;p&gt;
&lt;p&gt;我在&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;actions&#x2F;&quot;&gt;这里&lt;&#x2F;a&gt;列出了你可能会用到的 Github Action，同时新建了一个&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actionsflow&#x2F;awesome-actionsflow&quot;&gt;Awesome 项目&lt;&#x2F;a&gt;列出一些常用的 Actionsflow 工作流。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;webhook&quot;&gt;Webhook&lt;a class=&quot;zola-anchor&quot; href=&quot;#webhook&quot; aria-label=&quot;Anchor link for: webhook&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Actionsflow 不仅支持定时抓取类的任务，同时还支持 Webhook 类的任务，这样第三方服务如果有任何更新就可以主动通知 Actionsflow 了。这里 Webhook 机制是利用 Github 可以接收外界的 &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&#x2F;reference&#x2F;events-that-trigger-workflows#repository_dispatch&quot;&gt;&lt;code&gt;repository_dispatch&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; 事件来触发 Action 运行来实现的，具体使用可以见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;triggers&#x2F;webhook&#x2F;&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ben-di-yun-xing&quot;&gt;本地运行&lt;a class=&quot;zola-anchor&quot; href=&quot;#ben-di-yun-xing&quot; aria-label=&quot;Anchor link for: ben-di-yun-xing&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;大多数情况下，使用 Github Actions 运行 Actionsflow 是更方便，也是推荐的使用方式，但是可能出于某种原因你需要在本地或者你自己的 VPS 上部署 Actionsflow. 要在本地运行 Actionsflow，必须先安装&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.docker.com&#x2F;&quot;&gt;Docker&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;然后只需要运行:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt; run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -it -v&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -v &lt;&#x2F;span&gt;&lt;span&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PWD&lt;&#x2F;span&gt;&lt;span&gt;}:&#x2F;data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -p&lt;&#x2F;span&gt;&lt;span&gt; 3000:3000 actionsflow&#x2F;actionsflow
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;手动运行方式见&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actionsflow.github.io&#x2F;docs&#x2F;self-hosted&#x2F;#manual&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="zh">
		<title>Anki背单词必备的3个插件</title>
		<published>2020-11-10T00:00:00+00:00</published>
		<updated>2020-11-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.owenyoung.com/blog/anki-get-started/" type="text/html"/>
		<id>https://www.owenyoung.com/blog/anki-get-started/</id>
		<content type="html">&lt;p&gt;用了那么多背单词软件，发现还是&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;&quot;&gt;Anki&lt;&#x2F;a&gt;好用，我觉得其中最好用是 Anki 提供的强大的 Tag 功能，你可以给每个单词打上一个 Tag ，这样方便你日后归类来复习这些单词，比如你可以有一个「hard」的 Tag。&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;Tag 是 Anki 官方提供的功能，你可以直接在 Anki 上管理 tag，但是默认的 tag 管理比较不够便捷，所以如果配合以下插件，就能更方便的添加，查看 Tag。&lt;&#x2F;p&gt;
&lt;p&gt;这里纪录下我的 Anki 配置，希望你也能用得着。最终效果如下：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;WF5posJ.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yu-xian-zhun-bei&quot;&gt;预先准备&lt;a class=&quot;zola-anchor&quot; href=&quot;#yu-xian-zhun-bei&quot; aria-label=&quot;Anchor link for: yu-xian-zhun-bei&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;&quot;&gt;下载 Anki 桌面版&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;[下载一个词库][https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;decks&#x2F;] - 可选，我初学的时候用的是这个排名第一的&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1104981491&quot;&gt;4000 Essential English Words 英英&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-bei-cha-jian&quot;&gt;必备插件&lt;a class=&quot;zola-anchor&quot; href=&quot;#bi-bei-cha-jian&quot; aria-label=&quot;Anchor link for: bi-bei-cha-jian&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;下载插件是在「Tools-&amp;gt;Add-ons-&amp;gt;Get Add-ons」,输入插件的 Code，插件的 Code 在插件主页上找到，[点击这里](https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;addons&#x2F; 2.1)可以浏览所有的插件。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: 每次安装完插件后，重启才能生效。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;1-quick-tagging&quot;&gt;1. &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;304770511&quot;&gt;Quick tagging&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-quick-tagging&quot; aria-label=&quot;Anchor link for: 1-quick-tagging&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Code: &lt;code&gt;304770511&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个插件用来在 review 时，用快捷键快速添加 tag，默认是「q」键，你可以配置自己常用的 tag，比如「h」键添加一个「hard」标签。&lt;&#x2F;p&gt;
&lt;p&gt;以下是我的配置(其实就只是加了一个 hard 快捷键)：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;add tag shortcut&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;edit tag shortcut&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;quick tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Ctrl+Shift+B&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;bury note&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;burynote&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Shift+B&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;bury card&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;burycard&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Shift+S&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;suspend card&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;suspend&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;again card&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;hard&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;2-clickable-tags&quot;&gt;2. &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;380714095&quot;&gt;Clickable Tags &lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-clickable-tags&quot; aria-label=&quot;Anchor link for: 2-clickable-tags&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Code: &lt;code&gt;380714095&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;接下来就是这个 Clickable Tags 插件了，上一个插件解决了添加 Tag 的问题，这个插件解决显示 Tag 的问题，用了这个插件后你可以把这个单词所属的 Tag 都显示在 Review 页面，并且可以随时点击进去查看同个 Tag 的所有单词。效果如下：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;luoliyan&#x2F;anki-misc&#x2F;master&#x2F;screenshots&#x2F;clickable-tags.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;安装完成后，你需要在你的单词模板里插入一个占位符来作为显示 Tag 的地方，步骤如下：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;2WWkaiA.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;点击「Cards」，选择「Back Template」，在合适的地方插入 &lt;code&gt;{{clickable:Tags}}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;xVZHyjW.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;保存并重启 Anki，你就会在卡片背面看到单词的 Tags（如果有 Tag 的话）&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-tag-entry-enhancements-v2&quot;&gt;3. &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;536796161&quot;&gt;Tag Entry Enhancements v2&lt;&#x2F;a&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-tag-entry-enhancements-v2&quot; aria-label=&quot;Anchor link for: 3-tag-entry-enhancements-v2&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Code: &lt;code&gt;536796161&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个插件提供标签输入增强的，提供了以下功能：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;添加 Return &#x2F; Enter 作为热键以应用第一个建议的标签&lt;&#x2F;li&gt;
&lt;li&gt;将 Ctrl + Tab 作为热键添加以在建议列表中移动&lt;&#x2F;li&gt;
&lt;li&gt;输入字段时禁用初始建议框弹出窗口&lt;&#x2F;li&gt;
&lt;li&gt;允许使用 ↑&#x2F;↓ 调用标签建议框&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;安装后重启即可使用&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;a class=&quot;zola-anchor&quot; href=&quot;#zong-jie&quot; aria-label=&quot;Anchor link for: zong-jie&quot;&gt;🔗&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;总之，我使用 Anki 的重度功能就是这个 Tag，背到某个单词的时候，可以看到你标记的同类单词，这样更不容易忘记。&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
